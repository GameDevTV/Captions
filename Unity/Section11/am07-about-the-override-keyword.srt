WEBVTT

1
00:00:03.000 --> 00:00:06.000
Hey guys! So. we're going to talk about the Override

2
00:00:06.000 --> 00:00:09.000
Keyword! So. in this video. we're going to have a little recap

3
00:00:09.000 --> 00:00:12.000
of inheritance and how that works. We're going

4
00:00:12.000 --> 00:00:15.000
to talk about what the Override Keyword

5
00:00:15.000 --> 00:00:18.000
does and why we need it and explain some code

6
00:00:18.000 --> 00:00:21.000
we're going to be writing. so at the end of the day when you

7
00:00:21.000 --> 00:00:24.000
click Start Host. Host Started appears. but there'll be

8
00:00:24.000 --> 00:00:27.000
quite some dramatic changes to our script.

9
00:00:27.000 --> 00:00:30.000
because there are some lessons to be learned here about

10
00:00:30.000 --> 00:00:33.000
what it all means. So. why isn't this working?

11
00:00:33.000 --> 00:00:36.000
We click play. Start Host. and we get no

12
00:00:36.000 --> 00:00:39.000
log entry. This seems like a simple thing. I'm not getting a log

13
00:00:39.000 --> 00:00:42.000
entry. but there's actually a much much deeper problem. with the way

14
00:00:42.000 --> 00:00:45.000
that I've made you write this code so far. It's actually completely

15
00:00:45.000 --> 00:00:48.000
the wrong approach. and in seeing this it's going to

16
00:00:48.000 --> 00:00:51.000
help you understand what the right approach is.

17
00:00:51.000 --> 00:00:54.000
So. this is the line that's not working. void (OnStartHost) ().

18
00:00:54.000 --> 00:00:57.000
Let's look at the documentation. The thing to notice. that

19
00:00:57.000 --> 00:01:00.000
OnStartHost is a method of

20
00:01:00.000 --> 00:01:03.000
NetworkManager. It's a public void method of

21
00:01:03.000 --> 00:01:06.000
NetworkManager. NetworkManager. in turn.

22
00:01:06.000 --> 00:01:09.000
inherits from MonoBehavior. which inherits from Behavior.

23
00:01:09.000 --> 00:01:12.000
and so on. up the stack. Let's look at that in a diagram.

24
00:01:12.000 --> 00:01:15.000
Just get rid of my pretty pencils

25
00:01:15.000 --> 00:01:18.000
and bring up the slide. So.

26
00:01:18.000 --> 00:01:21.000
we made MyHUD there in red. It inherits from

27
00:01:21.000 --> 00:01:24.000
MonoBehaviour right. takes all the methods of MonoBehaviour

28
00:01:24.000 --> 00:01:27.000
and allows you to add more. MonoBehavior inherits from Behavior. then

29
00:01:27.000 --> 00:01:30.000
Component. then Object. What we actually wanted to do

30
00:01:30.000 --> 00:01:33.000
is to understand that NetworkManager itself inherits

31
00:01:33.000 --> 00:01:36.000
from MonoBehaviour. And what we're really trying to

32
00:01:36.000 --> 00:01:39.000
do here is create our own NetworkManager. with it's own

33
00:01:39.000 --> 00:01:42.000
behavior. for example. our own buttons.

34
00:01:42.000 --> 00:01:45.000
So. we don't want MyHUD at all. Instead of MyHUD. we want something called

35
00:01:45.000 --> 00:01:48.000
MyNetworkManager. which inherits from

36
00:01:48.000 --> 00:01:51.000
NetworkManager.

37
00:01:51.000 --> 00:01:54.000
and then. we will be able to do something called a override.

38
00:01:54.000 --> 00:01:57.000
Now. let's talk about what an override is. briefly.

39
00:01:57.000 --> 00:02:00.000
An "override modifier is required to extend or modify the abstract or

40
00:02:00.000 --> 00:02:03.000
virtual implementation of an inherited method. property. indexer. or

41
00:02:03.000 --> 00:02:06.000
event." OK. So. that sounds like a lot of bumf.

42
00:02:06.000 --> 00:02:09.000
but what it's saying is that when we do this

43
00:02:09.000 --> 00:02:12.000
inheritance here. when we create a MyNetworkManager. at the bottom.

44
00:02:12.000 --> 00:02:15.000
inheriting from NetworkManager we are

45
00:02:15.000 --> 00:02:18.000
able to override its method. So.

46
00:02:18.000 --> 00:02:21.000
NetworkManager. as the documentation says. has a NetworkManager

47
00:02:21.000 --> 00:02:24.000
dot. if we just

48
00:02:24.000 --> 00:02:27.000
go back a few. OnStartHost.

49
00:02:27.000 --> 00:02:30.000
OK. So. what

50
00:02:30.000 --> 00:02:33.000
we're wanting to do is override the behavior

51
00:02:33.000 --> 00:02:36.000
of OnStartHost. Whatever OnStartHost is doing now. we

52
00:02:36.000 --> 00:02:39.000
need to intercept it. but how do we do that? Well.

53
00:02:39.000 --> 00:02:42.000
the way that we do it is we say

54
00:02:42.000 --> 00:02:45.000
override void OnStartHost().

55
00:02:45.000 --> 00:02:48.000
But this is only going to work if

56
00:02:48.000 --> 00:02:51.000
we're talking about a class. i.e.

57
00:02:51.000 --> 00:02:54.000
this class name here needs to be a child

58
00:02:54.000 --> 00:02:57.000
of NetworkManager. not of MonoBehavior.

59
00:02:57.000 --> 00:03:00.000
So. we need to make MyNetworkManager

60
00:03:00.000 --> 00:03:03.000
a child of NetworkManager. Let's do that first!

61
00:03:03.000 --> 00:03:06.000
So. instead of getting called MyHUD. I'm going to rename it with

62
00:03:06.000 --> 00:03:09.000
Controller Command R. MyNetworkManager.

63
00:03:09.000 --> 00:03:12.000
OK. that's a more sensible name and save it.

64
00:03:12.000 --> 00:03:15.000
Then. it's not going to inherit from MonoBehaviour. but it's

65
00:03:15.000 --> 00:03:18.000
going to inherit from NetworkManager.

66
00:03:18.000 --> 00:03:21.000
Ah hah!

67
00:03:21.000 --> 00:03:24.000
OK. now we don't actually

68
00:03:24.000 --> 00:03:27.000
need these bits. but I'll challenge you

69
00:03:27.000 --> 00:03:30.000
to tidy that code up in a moment. bits of that! Leave those where they are!

70
00:03:30.000 --> 00:03:33.000
What we want to do is understand this override On

71
00:03:33.000 --> 00:03:36.000
StartHost. So. now OnStartHost is a method of Network

72
00:03:36.000 --> 00:03:39.000
Manager. and we're trying to override it. It's not quite right yet.

73
00:03:39.000 --> 00:03:42.000
and I'll show you why. Let's try and do that override.

74
00:03:42.000 --> 00:03:45.000
And it says. "virtual abstract members

75
00:03:45.000 --> 00:03:48.000
cannot be private." OK.

76
00:03:48.000 --> 00:03:51.000
so that's because the access properties

77
00:03:51.000 --> 00:03:54.000
of OnStartHost here need to be public.

78
00:03:54.000 --> 00:03:57.000
the same as OnStartHost actually

79
00:03:57.000 --> 00:04:00.000
is. Now. if you look in Unity's docs. it

80
00:04:00.000 --> 00:04:03.000
says that it's a public method. OnStartHost. Furthermore. if you look

81
00:04:03.000 --> 00:04:06.000
in Microsoft's documents here. about overriding it.

82
00:04:06.000 --> 00:04:09.000
say somewhere down here: "An override declaration cannot

83
00:04:09.000 --> 00:04:12.000
change the accessability of a method."

84
00:04:12.000 --> 00:04:15.000
So. what we're doing. as a recap. is we are

85
00:04:15.000 --> 00:04:18.000
replacing the behavior of the NetworkManager's

86
00:04:18.000 --> 00:04:21.000
OnStartHost method. with our own in

87
00:04:21.000 --> 00:04:24.000
MyNetworkManager. and that's where the override comes from. It's public because

88
00:04:24.000 --> 00:04:27.000
the one in NetwormManager is public. It's a void

89
00:04:27.000 --> 00:04:30.000
because it's the same signature as the one that NetworkManager

90
00:04:30.000 --> 00:04:33.000
already has. but we use override to override it's behavior.

91
00:04:33.000 --> 00:04:36.000
Let's see what happens!

92
00:04:36.000 --> 00:04:39.000
Now. there's a script missing and

93
00:04:39.000 --> 00:04:42.000
the reason there's a script missing is. because we've still got the

94
00:04:42.000 --> 00:04:45.000
old NetworkManager attached to our Network

95
00:04:45.000 --> 00:04:48.000
Manager. Remove that standard Unity component.

96
00:04:48.000 --> 00:04:51.000
and when you put your new MyNetworkManager on.

97
00:04:51.000 --> 00:04:54.000
look. it actually behaves just like a NetworkManager. because it is a

98
00:04:54.000 --> 00:04:57.000
NetworkManager. it's a child of one. OK. Of course. you'll need to

99
00:04:57.000 --> 00:05:00.000
rewire your player. so let's rewire our player.

100
00:05:00.000 --> 00:05:03.000
and let's see how we get on.

101
00:05:03.000 --> 00:05:06.000
OK. into the Console and click Start Host.

102
00:05:06.000 --> 00:05:09.000
and that

103
00:05:09.000 --> 00:05:12.000
actually is logging the Host started. so that has worked.

104
00:05:12.000 --> 00:05:15.000
That's good news! So. well done getting that far.

105
00:05:15.000 --> 00:05:18.000
if you have. And what I want you to do

106
00:05:18.000 --> 00:05:21.000
now is I want you to refactor your script. So. here's a script.

107
00:05:21.000 --> 00:05:24.000
There's a problem with a few of these lines. We don't need to go and find components.

108
00:05:24.000 --> 00:05:27.000
because we are a NetworkManager now. So. I want you to

109
00:05:27.000 --> 00:05:30.000
remove the GetComponent line. change the call to

110
00:05:30.000 --> 00:05:33.000
Start Host so it is simpler. rewire

111
00:05:33.000 --> 00:05:36.000
the Player Prefab. I've done that for you as a bonus. test that logging works

112
00:05:36.000 --> 00:05:39.000
still. and ask yourself if you understand what's

113
00:05:39.000 --> 00:05:42.000
happened. So. go ahead and just simplify that script

114
00:05:42.000 --> 00:05:45.000
now.

115
00:05:48.000 --> 00:05:51.000
OK. so let's have a look. We don't need to find a Network

116
00:05:51.000 --> 00:05:54.000
Manger. because we are a child of the NetworkManager. So. we don't need to

117
00:05:54.000 --> 00:05:57.000
do this go and find the component. OK.

118
00:05:57.000 --> 00:06:00.000
so the only thing that's not going to work is this NetworkManager.StartHost (); we don't

119
00:06:00.000 --> 00:06:03.000
have a local member variable called

120
00:06:03.000 --> 00:06:06.000
NetworkManger anymore. because we don't need it. We just call

121
00:06:06.000 --> 00:06:09.000
StartHost. because StartHost is now in scope. it's a method

122
00:06:09.000 --> 00:06:12.000
of NetworkManager. So. we make our own NetworkManager.

123
00:06:12.000 --> 00:06:15.000
which extends NetworkManager.

124
00:06:15.000 --> 00:06:18.000
we make our own method called MyStartHost. we log out.

125
00:06:18.000 --> 00:06:21.000
and we call StartHost (). which is NetworkManager's one. This just provides

126
00:06:21.000 --> 00:06:24.000
the path through for our button. Remember that our button couldn't

127
00:06:24.000 --> 00:06:27.000
see... When we clicked on this button. it couldn't see

128
00:06:27.000 --> 00:06:30.000
when we looked at the NetworkManager. and then. we

129
00:06:30.000 --> 00:06:33.000
looked down. we couldn't actually see a Start Host but we

130
00:06:33.000 --> 00:06:36.000
now can. MyStartHost. that's what we wire it to!

131
00:06:36.000 --> 00:06:39.000
And then. here we're saying. OK when the

132
00:06:39.000 --> 00:06:42.000
OnStartHost method gets called. of the NetworkManager.

133
00:06:42.000 --> 00:06:45.000
then I want to override it and just log out what's happened.

134
00:06:45.000 --> 00:06:48.000
So. when we do that and click the button

135
00:06:48.000 --> 00:06:51.000
and it says Starting Host. and immediately as it happens

136
00:06:51.000 --> 00:06:54.000
it says Host started. Not surprising! What does it need to

137
00:06:54.000 --> 00:06:57.000
wait for? So. that's that! I hope that all

138
00:06:57.000 --> 00:07:00.000
makes sense. I think we need to stand back from that a little bit. because there's a lot of

139
00:07:00.000 --> 00:07:03.000
new stuff in there. Basically. remember that

140
00:07:03.000 --> 00:07:06.000
the mistake we made was inheriting MyHUD. without

141
00:07:06.000 --> 00:07:09.000
thought for MonoBehaviour. when it should have been a different name.

142
00:07:09.000 --> 00:07:12.000
MyNetworkManager. and it should have inherited from NetworkManager.

143
00:07:12.000 --> 00:07:15.000
OK. and as a test as to whether you do understand

144
00:07:15.000 --> 00:07:18.000
this. why don't you go ahead and explain override to someone.

145
00:07:18.000 --> 00:07:21.000
as a challenge. Call a geeky friend. who would understand. or even

146
00:07:21.000 --> 00:07:24.000
better still. simply go to the discussions against this lecture and just

147
00:07:24.000 --> 00:07:27.000
explain what you understand by overwrite in a paragraph.

148
00:07:27.000 --> 00:07:30.000
if you can. And if you possibly

149
00:07:30.000 --> 00:07:33.000
can. just in 5 words or less. What does override do in a nut shell?

150
00:07:33.000 --> 00:07:36.000
Good luck and I'll see you in the next video!

