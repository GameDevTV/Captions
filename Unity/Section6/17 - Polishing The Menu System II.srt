
1
00:00:00,000 --> 00:00:03,700


2
00:00:03,700 --> 00:00:07,700
So hi and welcome back! In this video we're going to be polishing our menu

3
00:00:07,700 --> 00:00:11,700
system a little bit further. So we've got a menu system for our

4
00:00:11,700 --> 00:00:15,700
little Laser Defender game but we have several things that are missing, really, that

5
00:00:15,700 --> 00:00:19,700
would make the game feel a lot better. So firstly is that we have no

6
00:00:19,700 --> 00:00:23,700
music in the game that's really suitable. We have taken a cross weaver,

7
00:00:23,700 --> 00:00:27,700
pulled across the music from a different game but it's not really suitable for

8
00:00:27,700 --> 00:00:31,700
this one. And secondly, it would be much nicer if we add some

9
00:00:31,700 --> 00:00:35,700
texture to the background of our menu systems, right?

10
00:00:35,700 --> 00:00:39,700
When we start the game, right now we just have a black screen,

11
00:00:39,700 --> 00:00:43,700
and it'll be nice to have something a little bit cooler in the background! So

12
00:00:43,700 --> 00:00:47,700
let's go and talk a little bit more about the music!

13
00:00:47,700 --> 00:00:51,700
So we're actually going to be using some music from opengameart.org,

14
00:00:51,700 --> 00:00:55,700
by and artist called Clearside, and he's

15
00:00:55,700 --> 00:00:59,700
licensed his music under Creative Commons, which means we are able to use it

16
00:00:59,700 --> 00:01:03,700
and share it with you. And in fact, the four tracks

17
00:01:03,700 --> 00:01:07,700
that he's shared are available for free in

18
00:01:07,700 --> 00:01:11,700
the asset bundle, at the beginning of this section. And what we really want

19
00:01:11,700 --> 00:01:15,700
isn't just to add music to our scene, we've already done that so it would be really simple to just replace

20
00:01:15,700 --> 00:01:19,700
the music file with a different one. But actually,

21
00:01:19,700 --> 00:01:23,700
we want to do something a little bit more, we want to change the music so that every scene has its own music,

22
00:01:23,700 --> 00:01:27,700
its own soundtrack. So how are we going to do that? Well we're going to use a

23
00:01:27,700 --> 00:01:31,700
function called OnLevelWasLoaded(), and this OnLevelWasLoaded() function

24
00:01:31,700 --> 00:01:35,700
will let you get a message, whenever a level is loaded,

25
00:01:35,700 --> 00:01:39,700
and then, you can start playing the appropriate track for that level.

26
00:01:39,700 --> 00:01:43,700
So awesome! Let's get started with adding some music!

27
00:01:43,700 --> 00:01:47,266
So where do I want to start? I've got the four tracks here, I've got my

28
00:01:47,266 --> 00:01:51,700
game here. Well I'm going to start by thinking about what would it take for

29
00:01:51,700 --> 00:01:55,700
my Music Player to play the right music. So we're going to start by

30
00:01:55,700 --> 00:01:59,700
removing the existing Audio Clip in our audio source. That's the clip that's playing by

31
00:01:59,700 --> 00:02:03,700
default. I'm going to say None, no clip will be playing by default.

32
00:02:03,700 --> 00:02:10,166
And I'm going to jump into my Music Player and see how I can get the music files playing when I want them to.

33
00:02:10,166 --> 00:02:14,166
Hi, it's Ben here, just doing a quick post edit before we carry on! Johnny

34
00:02:14,166 --> 00:02:18,333
Riverez quite rightly pointed out that this code has suddenly appeared,

35
00:02:18,333 --> 00:02:22,166
the stuff I've highlighted && instance is not != to this. We didn't write that

36
00:02:22,166 --> 00:02:26,166
back in Block Breaker. So the purpose of that simple statement there is to make sure

37
00:02:26,166 --> 00:02:30,166
that we don't destroy the last instance of the Music Manager.

38
00:02:30,166 --> 00:02:34,166
So once we've claimed this as the instance, what we

39
00:02:34,166 --> 00:02:38,166
obviously don't want to do is go and destroy it, the last one, so that's the purpose.

40
00:02:38,166 --> 00:02:38,300


41
00:02:38,300 --> 00:02:42,300
Right now, the MusicPlayer script only makes sure that the MusicPlayer

42
00:02:42,300 --> 00:02:46,300
exists throughout scenes, so that the music can continuously play. What

43
00:02:46,300 --> 00:02:50,300
I'm going to want to do is say, I've got three audio clips. Those are my

44
00:02:50,300 --> 00:02:54,300
three audio files and I can define them as public

45
00:02:54,300 --> 00:02:58,300
AudioClips and I'm going to go startClip.

46
00:02:58,300 --> 00:03:02,300
And then, I'm going to go for

47
00:03:02,300 --> 00:03:06,300
gameClip and end

48
00:03:06,300 --> 00:03:10,300
Clip. So those are my three files, my

49
00:03:10,300 --> 00:03:14,300
three clip music clips, and I want to be able to play those, depending

50
00:03:14,300 --> 00:03:18,300
on the level. So how am I going to decide? Firstly, how am I going to play

51
00:03:18,300 --> 00:03:21,033
any clip whatsoever? Well the way to play clips is through an audio source,

52
00:03:21,033 --> 00:03:26,300
so I'm also going to need access to my AudioSource. So let's create a

53
00:03:26,300 --> 00:03:30,300
private AudioSource,

54
00:03:30,300 --> 00:03:34,300
and I'm going to call it

55
00:03:34,300 --> 00:03:38,300
music. So now I need to define where this music is.

56
00:03:38,300 --> 00:03:42,300
Those public AudioClips, I'm going to drag and drop in the Inspector.

57
00:03:42,300 --> 00:03:46,300
What about this music thing, this AudioSource? Well I'm going to

58
00:03:46,300 --> 00:03:50,300
define it here, by grabbing the appropriate

59
00:03:50,300 --> 00:03:54,300
component from the object I'm attached to. So I'm attached

60
00:03:54,300 --> 00:03:58,300
to the MusicPlayer object, and this MusicPlayer object will have an Audio

61
00:03:58,300 --> 00:04:02,300
Source, and I can simply grab it from

62
00:04:02,300 --> 00:04:06,300
myself, basically my GameObject.

63
00:04:06,300 --> 00:04:10,300
So here we go, now my music is an AudioSource, and

64
00:04:10,300 --> 00:04:14,300
what I can do next is play some music! So

65
00:04:14,300 --> 00:04:18,300
if I jump into now, this OnLevelWasLoaded() function,

66
00:04:18,300 --> 00:04:22,300
and let's try it now, we go void

67
00:04:22,300 --> 00:04:26,300
OnLevelWasLoaded()

68
00:04:26,300 --> 00:04:30,300
and it'll take in an integer, which will be the level that has just been loaded.

69
00:04:30,300 --> 00:04:34,300
So now, we've got this OnLevelWasLoaded() function, the first thing I'm going to do

70
00:04:34,300 --> 00:04:38,300
is I'm going to Debug.Log. And the reason for

71
00:04:38,300 --> 00:04:42,300
doing that is, if I've mistyped my function, if I've got a problem with

72
00:04:42,300 --> 00:04:46,300
it, I want to make sure I want to not have to assume this thing is

73
00:04:46,300 --> 00:04:50,300
being called, I want to be able to prove it's being called, and the way to do that is to have a custom

74
00:04:50,300 --> 00:04:54,300
log message and go ("Music

75
00:04:54,300 --> 00:04:58,300
Player:

76
00:04:58,300 --> 00:05:02,300
loaded"... Let's spell that right, loaded

77
00:05:02,300 --> 00:05:06,300
level " and then +level).

78
00:05:06,300 --> 00:05:10,300
So now, every time I load the level my MusicPlayer will say, hey MusicPlayer, I've

79
00:05:10,300 --> 00:05:14,300
received the message for loading levels! So what do I want to do whenever I load a level

80
00:05:14,300 --> 00:05:18,300
in that general case? Well the first thing I want to do is stop the music, stop the existing music.

81
00:05:18,300 --> 00:05:22,300
We're in a new level, so I'm going to stop the existing music. That's the

82
00:05:22,300 --> 00:05:26,300
first thing I'm going to do! Then, I'm going to change the AudioClip, and the way to

83
00:05:26,300 --> 00:05:30,300
change the AudioClip is to go music.clip

84
00:05:30,300 --> 00:05:34,300
= new clip, and for the moment, I'm just going to go with start

85
00:05:34,300 --> 00:05:38,300
Clip, whenever we change a level. And once I've done that, I

86
00:05:38,300 --> 00:05:42,300
want to do... Most importantly don't forget that, start the music

87
00:05:42,300 --> 00:05:46,300
playing again, alright. So now, that's the kind of logic, and then, depending

88
00:05:46,300 --> 00:05:50,300
on which level we have, we're going to load a different AudioClip. So let's

89
00:05:50,300 --> 00:05:54,300
put the logic in now! It's very simple, we can doif(level

90
00:05:54,300 --> 00:05:58,300
is 0, then we load the startClip,

91
00:05:58,300 --> 00:06:02,300
and that's easy enough to do. And

92
00:06:02,300 --> 00:06:06,300
we can copy this logic for the different levels. Let's do

93
00:06:06,300 --> 00:06:10,300
1 and level 2, which are all the levels we have in our game.

94
00:06:10,300 --> 00:06:14,300
So level 1, what music

95
00:06:14,300 --> 00:06:18,300
should I be playing? Well that's going to be the game music gameClip. What

96
00:06:18,300 --> 00:06:22,300
about level 2? Well that's going to be the

97
00:06:22,300 --> 00:06:26,300
endClip. So now, I've got the clips loading and playing.

98
00:06:26,300 --> 00:06:30,300
One thing left to do is, I'm going to go music.loop

99
00:06:30,300 --> 00:06:34,300
is true, and that just tells the AudioSource

100
00:06:34,300 --> 00:06:38,300
that I want to loop this clip forever and ever, until I tell you otherwise.

101
00:06:38,300 --> 00:06:42,300
So let's get started! Let's try this out! This

102
00:06:42,300 --> 00:06:46,300
is missing only one thing now and that is the sound. We don't have the

103
00:06:46,300 --> 00:06:50,300
sounds, we've got gaping gaps in our MusicPlayer

104
00:06:50,300 --> 00:06:54,300
script, which is missing the sounds that we want to show off and show to the

105
00:06:54,300 --> 00:06:58,300
player. So to do that, I'm going to need to import some sounds, and

106
00:06:58,300 --> 00:07:02,300
I'm going to create a new special folder in my sounds, which is going to

107
00:07:02,300 --> 00:07:06,300
be Music, which is going to be reserved to only music. And then, I'm

108
00:07:06,300 --> 00:07:10,300
going to jump into my Finder,

109
00:07:10,300 --> 00:07:14,300
grab all the music files, I've already got them selected here,

110
00:07:14,300 --> 00:07:18,300
and those you'll find in the bundle, in the asset bundle at the beginning of this section.

111
00:07:18,300 --> 00:07:22,300
Drag them in, drop them in, and it'll take a little bit of time for

112
00:07:22,300 --> 00:07:26,300
Unity to load everything and process all the files, but it will

113
00:07:26,300 --> 00:07:30,300
eventually get there. And done! So now, we've

114
00:07:30,300 --> 00:07:34,300
got all the files loaded, one thing to do is to convert all of them

115
00:07:34,300 --> 00:07:38,300
into 2D sounds. I don't want any 3D sounds, 3D sounds are great

116
00:07:38,300 --> 00:07:42,300
when you've got objects in the game scene that make some sound

117
00:07:42,300 --> 00:07:46,300
but this is all like, for example, the lasers and beams and explosions.

118
00:07:46,300 --> 00:07:50,300
But that's not what I want, what I want here is just music,

119
00:07:50,300 --> 00:07:54,300
it's just background music for the player to enjoy while he's playing the game,

120
00:07:54,300 --> 00:07:58,300
to give it a little bit of atmosphere, so I don't want them to be 3D sounds

121
00:07:58,300 --> 00:08:02,300
so I'm disabling all that. And done!

122
00:08:02,300 --> 00:08:06,300
And obviously, disabling 3D will mean that

123
00:08:06,300 --> 00:08:10,300
Unity has to reprocess the file, which can, once again, take a little bit of time.

124
00:08:10,300 --> 00:08:14,300
Awesome! So now we've got a bunch of tracks!

125
00:08:14,300 --> 00:08:18,300
We've got a music player missing some tracks, and obviously, you can choose

126
00:08:18,300 --> 00:08:22,300
whichever track you want for whatever, the start, the game, the end,

127
00:08:22,300 --> 00:08:26,300
and you can also choose your own clips, you don't have to use ours. In the same way you don't

128
00:08:26,300 --> 00:08:30,300
have to use our sprites, you can use your own. We're going to be, I'm

129
00:08:30,300 --> 00:08:34,300
going to be selecting Below the Shift for

130
00:08:34,300 --> 00:08:38,300
my start music, that's the start menu music.

131
00:08:38,300 --> 00:08:42,300
Assimilator for my Game Clip and

132
00:08:42,300 --> 00:08:46,300
Coma for my End Clip.

133
00:08:46,300 --> 00:08:50,300
So cool! Now what happens? Let's start on the start menu! What

134
00:08:50,300 --> 00:08:54,300
happens if I press play? Hmm

135
00:08:54,300 --> 00:08:58,300
nothing, I can't hear anything! Does it work when I press Start?

136
00:08:58,300 --> 00:09:02,300
Yes it does! So what's going on here? Why is it working for Start,

137
00:09:02,300 --> 00:09:06,300
then not working for the first scene? And then,

138
00:09:06,300 --> 00:09:10,300
when we go back to the start, it starts sounding again. Well

139
00:09:10,300 --> 00:09:14,300
that's because the first level loaded never calls OnLevel

140
00:09:14,300 --> 00:09:18,300
WasLoaded(). So let's jump back into our code in our Music Player, and what we're going to

141
00:09:18,300 --> 00:09:22,300
do is, we're going to set a default clip to play, whenever we get

142
00:09:22,300 --> 00:09:26,300
started, and that's going to be music.clip is

143
00:09:26,300 --> 00:09:30,300
going to be the startClip, and we're

144
00:09:30,300 --> 00:09:34,300
going to set that to loop. And

145
00:09:34,300 --> 00:09:38,300
to do loop you do loop = true, and

146
00:09:38,300 --> 00:09:42,300
finally, we're going to get that playing.

147
00:09:42,300 --> 00:09:46,300
Awesome! So now we have music

148
00:09:46,300 --> 00:09:50,300
playing! We should have music playing when we press Start, and let's

149
00:09:50,300 --> 00:09:54,300
try it now. And we do indeed! The first

150
00:09:54,300 --> 00:09:58,300
moment you press play, you get some music sounding. So

151
00:09:58,300 --> 00:10:02,300
cool! So we now have music throughout our game, and every scene, every

152
00:10:02,300 --> 00:10:06,300
level in the game has a different soundtrack, which is exactly what we wanted.

153
00:10:06,300 --> 00:10:10,300
So what's next? Well next it's your turn. Next, it's your

154
00:10:10,300 --> 00:10:14,300
turn to make a texture, get some

155
00:10:14,300 --> 00:10:18,300
texture to the start menu's background. So I

156
00:10:18,300 --> 00:10:22,300
suggest we add a Starfield, I mean it's a game in space. Let's add

157
00:10:22,300 --> 00:10:26,300
this Starfield, and it'll prime the player to

158
00:10:26,300 --> 00:10:30,300
expect a Starfield in the game, as well, and it'll kind of tie all the different levels

159
00:10:30,300 --> 00:10:34,300
together. So that's what I would suggest you do. So pause the video now, add some background

160
00:10:34,300 --> 00:10:38,300
texture to your menus, either an image or a Starfield or something

161
00:10:38,300 --> 00:10:42,300
else, and feel free to copy and paste the particle system that you've got in the game scene.

162
00:10:42,300 --> 00:10:46,300


163
00:10:46,300 --> 00:10:50,300
So how did it go?!

164
00:10:50,300 --> 00:10:54,300
I'm going to be very very cheeky and go into my

165
00:10:54,300 --> 00:10:58,300
scene. I'm not even going to modify my...

166
00:10:58,300 --> 00:11:02,300
Let's make sure I save everything! I'm not even going to modify my Starfield. I'm going to go

167
00:11:02,300 --> 00:11:06,300
grab them, copy them with Command C or

168
00:11:06,300 --> 00:11:10,300
Control C, then jump back into my start menu, and paste

169
00:11:10,300 --> 00:11:14,300
them in my Hierarchy. Great, and the same for the win screen. I'm

170
00:11:14,300 --> 00:11:18,300
going to save my scene and paste them in the Hierarchy and then save my scene

171
00:11:18,300 --> 00:11:22,300
again. So what happens now when I'm on the start menu and I press

172
00:11:22,300 --> 00:11:26,300
play, well I have a Starfield in the background!

173
00:11:26,300 --> 00:11:30,300
Brilliant stuff, right!

174
00:11:30,300 --> 00:11:32,100


175
00:11:32,100 --> 00:11:36,100
And one last thing we'd like to do is actually change the

176
00:11:36,100 --> 00:11:40,100
text from "You Beat Block Breaker" to "You

177
00:11:40,100 --> 00:11:44,100
Were Defeated". Make sure all of the text matches the game, right, we don't

178
00:11:44,100 --> 00:11:48,100
want to talk about another game in this text. So "You Were Defeated!".

179
00:11:48,100 --> 00:11:52,066
So that's great, we've got "You Were Defeated!" here!

180
00:11:52,066 --> 00:11:53,533
And we are done, we've

181
00:11:53,533 --> 00:11:57,566
got the menu systems good to go! That's it for this video,

182
00:11:57,566 --> 00:12:01,566
I hope you enjoyed it, and I will see you in another one! So it's bye for now!

183
00:12:01,566 --> 00:12:02,466


