WEBVTT

1
00:00:03.000 --> 00:00:06.000
So, if you've got this far in the course,

2
00:00:06.000 --> 00:00:09.000
you may be wondering what next? How can you continue learning with

3
00:00:09.000 --> 00:00:12.000
us? Well, you've got at least two other courses, you can check out immediately!

4
00:00:12.000 --> 00:00:15.000
Firstly, I want to recommend Brice's course, which is

5
00:00:15.000 --> 00:00:18.000
Procedural Generation. Brice, what's that all about? So, Procedural

6
00:00:18.000 --> 00:00:21.000
Generation is all about giving you the content creation

7
00:00:21.000 --> 00:00:24.000
superpower! If you want to create a game,

8
00:00:24.000 --> 00:00:27.000
you want the game to be continually replayable, so that the

9
00:00:27.000 --> 00:00:30.000
player can have a novel experience, every time they enter your game.

10
00:00:30.000 --> 00:00:33.000
You can't do that on your own! There's just one of you or a single team even,

11
00:00:33.000 --> 00:00:36.000
so you have to use what's called Procedural Generation, to randomly

12
00:00:36.000 --> 00:00:39.000
generate content for your player, using

13
00:00:39.000 --> 00:00:42.000
code basically. So, let's say you want to generate a new dungeon,

14
00:00:42.000 --> 00:00:45.000
every time a player enters a new area, you can do that! Generate

15
00:00:45.000 --> 00:00:48.000
buildings randomly, create villages completely procedurally,

16
00:00:48.000 --> 00:00:51.000
so you don't have to create and design every individual village.

17
00:00:51.000 --> 00:00:54.000
You simply code a method for creating villages in the

18
00:00:54.000 --> 00:00:57.000
general sense, and then, the game creates villages

19
00:00:57.000 --> 00:01:00.000
specifically for your player. So, it's really cool tecnhiques that's used from

20
00:01:00.000 --> 00:01:03.000
all the way from Triple A titles.

21
00:01:03.000 --> 00:01:06.000
Every single game you'll see will have procedurally

22
00:01:06.000 --> 00:01:09.000
generated textures, for example, all the way to

23
00:01:09.000 --> 00:01:12.000
indie titles like the Binding of Isaac or

24
00:01:12.000 --> 00:01:15.000
Nuclear Throne and things like No Man's

25
00:01:15.000 --> 00:01:18.000
Sky. Even the original elite on the BBC micro,

26
00:01:18.000 --> 00:01:21.000
used Procedural Generation to create the unverse. So, that's a

27
00:01:21.000 --> 00:01:24.000
really powerful tool, and Procedural Generation

28
00:01:24.000 --> 00:01:27.000
the Procedural Generation course, at udemy.com

29
00:01:27.000 --> 00:01:30.000
/proceduralgeneration, will teach you about that topic.

30
00:01:30.000 --> 00:01:33.000
And that's a really good way of expanding your

31
00:01:33.000 --> 00:01:36.000
game dev knowledge. Another great way is learning more about the physics,

32
00:01:36.000 --> 00:01:39.000
and that's where Ben's course comes in. It's a really cool course

33
00:01:39.000 --> 00:01:42.000
that teaches you more about physics. Do you want to say what's in the course, Ben?

34
00:01:42.000 --> 00:01:45.000
Yeah, I'm really excited about this one, because I think that learning

35
00:01:45.000 --> 00:01:48.000
physics and getting a grasp on it, through the medium of

36
00:01:48.000 --> 00:01:51.000
Unity, when you've got that rich 3D environment and you've got a computer

37
00:01:51.000 --> 00:01:54.000
doing all your calculatoins for you is amazing! So, what I've put together

38
00:01:54.000 --> 00:01:57.000
so far is Newtons first three laws. We're going to dive in

39
00:01:57.000 --> 00:02:00.000
and then teach you all about air resistance. We're going to build a better air

40
00:02:00.000 --> 00:02:03.000
resistance and drag model than Unity has. We're then going to go

41
00:02:03.000 --> 00:02:06.000
into gravity, and we're going to do a better job than Unity does with

42
00:02:06.000 --> 00:02:09.000
gravity, so that you can have multiple bodies orbiting each other,

43
00:02:09.000 --> 00:02:12.000
orbital mechanics, and basic things like that. So, at the

44
00:02:12.000 --> 00:02:15.000
end of that course, you will not only have a much better understanding of how

45
00:02:15.000 --> 00:02:18.000
Unity's Physics Engine works, and then hence better use it

46
00:02:18.000 --> 00:02:21.000
better, but you'll know when it's time to stop using it and then write

47
00:02:21.000 --> 00:02:24.000
your own Physics Engine from scratch. So, that's Game Physics

48
00:02:24.000 --> 00:02:27.000
101, at udemy.com/gamephysics!

49
00:02:27.000 --> 00:02:30.000
Awesome! We hope to see you in our courses!

