<<<<<<< HEAD:Unity/Section5/07-Colliders-Triggers-Collisions-in-Unity.srt
WEBVTT

1
00:00:03.500 --> 00:00:07.000
Hey. so in this video we're going to explore colliders in

2
00:00:07.000 --> 00:00:10.500
Unity. and let's get rid of the confusion. before it even starts!

3
00:00:10.500 --> 00:00:14.000
Just briefly. before I dive into the details of colliders. why do we even

4
00:00:14.000 --> 00:00:17.500
care about these things? Look they are a super handy part

5
00:00:17.500 --> 00:00:21.000
of Unity. These colliders allow us to

6
00:00:21.000 --> 00:00:24.500
trigger events. like maybe you walk over a door threshold and

7
00:00:24.500 --> 00:00:28.000
the automatic door opens for you. or we can

8
00:00:28.000 --> 00:00:31.500
simulate collisions. like a pool game. or in the case of

9
00:00:31.500 --> 00:00:35.000
Block Breaker the ball bouncing. It's really at the heart of all

10
00:00:35.000 --> 00:00:38.500
physical objects interacting with each other. So. colliders are super cool.

11
00:00:38.500 --> 00:00:42.000
they're super important. and I'm going to explain here

12
00:00:42.000 --> 00:00:45.500
the different types and how they talk to each other. So. as an overview.

13
00:00:45.500 --> 00:00:49.000
what we're going to talk about is if colliders overlap

14
00:00:49.000 --> 00:00:52.500
during a frame. then messages may be passed by the

15
00:00:52.500 --> 00:00:56.000
engine. And we're going to be talking about what message passing is

16
00:00:56.000 --> 00:00:59.500
and go into a little bit of detail about how

17
00:00:59.500 --> 00:01:03.000
all this works in Unity. So. what is message passing?

18
00:01:03.000 --> 00:01:06.500
When two GameObjects with colliders meet.

19
00:01:06.500 --> 00:01:10.000
the engine sends a message to those objects. we intercept those messages

20
00:01:10.000 --> 00:01:13.500
in a script. and then. our script decides what to do next.

21
00:01:13.500 --> 00:01:17.000
You can read more about message passing on Wikipedia. if you're

22
00:01:17.000 --> 00:01:20.500
having trouble getting to sleep. So firstly. what do we mean about two

23
00:01:20.500 --> 00:01:24.000
colliders meeting? Let's take a look at an example in Unity.

24
00:01:24.000 --> 00:01:27.500
Here I have a ball that has a circular collider on it. 2D

25
00:01:27.500 --> 00:01:31.000
circular collider. and here I have a Loose Collider

26
00:01:31.000 --> 00:01:34.500
at the bottom of my play space. which has a Box Collider. And if those two colliders were to

27
00:01:34.500 --> 00:01:38.000
overlap. so they're not touching now. but if the ball was a little

28
00:01:38.000 --> 00:01:41.500
bit lower. like this maybe. then they would overlap. If they overlap during

29
00:01:41.500 --> 00:01:45.000
a frame. and that is an important distinction. because if the ball

30
00:01:45.000 --> 00:01:48.500
is moving really really fast and it jumps right through this thing in a frame. there

31
00:01:48.500 --> 00:01:52.000
will be no collision message passed. But if

32
00:01:52.000 --> 00:01:55.500
there's an overlap during a frame. then a message may get

33
00:01:55.500 --> 00:01:59.000
passed. Why may get passed? Well. let's have a look at

34
00:01:59.000 --> 00:02:02.500
this table here! In most

35
00:02:02.500 --> 00:02:06.000
cases a message is passed. There are some white cells in my table. where

36
00:02:06.000 --> 00:02:09.500
the messages are not passed. Let's look at the general pattern of this table.

37
00:02:09.500 --> 00:02:13.000
Firstly. where did it come from? Well. Unity has this in their docs.

38
00:02:13.000 --> 00:02:16.500
under their Colliders Overview document. Let's take a look at it!

39
00:02:16.500 --> 00:02:20.000
Here it is. lots to read. again. if you're having trouble getting to

40
00:02:20.000 --> 00:02:23.500
sleep. And at the bottom of the page. you've got two tables.

41
00:02:23.500 --> 00:02:27.000
One about messages that are passed when a collision happens.

42
00:02:27.000 --> 00:02:30.500
And another about messages are passed when a trigger happens.

43
00:02:30.500 --> 00:02:34.000
But to me that's confusing. so what we've done is taken that table and

44
00:02:34.000 --> 00:02:37.500
that table. and we've put them on top of each other

45
00:02:37.500 --> 00:02:41.000
to give you that table. which I think is clearer.

46
00:02:41.000 --> 00:02:44.500
So. what I'm saying is that in some situations

47
00:02:44.500 --> 00:02:48.000
the engine will raise a message. and there's two different types of messages it can

48
00:02:48.000 --> 00:02:51.500
pass. One is for a collision. which only happens

49
00:02:51.500 --> 00:02:55.000
in the top-left of the table. where we have non-trigger

50
00:02:55.000 --> 00:02:58.500
colliders interacting with non-trigger colliders.

51
00:02:58.500 --> 00:03:02.000
None of these rows or columns. in the top-left. have the word trigger in them.

52
00:03:02.000 --> 00:03:05.500
The moment you add a trigger to the equation. you're dealing with triggers

53
00:03:05.500 --> 00:03:09.000
not collisions. You can take yourself down or to the right. or down

54
00:03:09.000 --> 00:03:12.500
and right. So. all of these other columns are where one

55
00:03:12.500 --> 00:03:16.000
or either of those objects have trigger set.

56
00:03:16.000 --> 00:03:19.500
What does that mean? Well. let's look in here! Let's look at the Loose

57
00:03:19.500 --> 00:03:23.000
Collider! If that checkbox is ticked. then we're in the territory

58
00:03:23.000 --> 00:03:26.500
of triggers. and if it's un-ticked.

59
00:03:26.500 --> 00:03:30.000
on there and un-ticked on the ball. then

60
00:03:30.000 --> 00:03:33.500
we may be in the territory of collisions.

61
00:03:33.500 --> 00:03:37.000
So. in this case. this is a collision. and the ball will actually.

62
00:03:37.000 --> 00:03:40.500
if it's started off higher. it will fall

63
00:03:40.500 --> 00:03:44.000
and stop when it hits that Loose Collider.

64
00:03:44.000 --> 00:03:47.500
OK. and the message that will get passed

65
00:03:47.500 --> 00:03:51.000
is one of these collision messages.

66
00:03:51.000 --> 00:03:54.500
When the collisions are happening. then physics

67
00:03:54.500 --> 00:03:58.000
is being calculated. Alright. so let's look at that

68
00:03:58.000 --> 00:04:01.500
in action a little bit more. What do we have here? We have a ball

69
00:04:01.500 --> 00:04:05.000
that has a Rigidbody on it. So.

70
00:04:05.000 --> 00:04:08.500
what do these rows and column headers mean? I've got a slide

71
00:04:08.500 --> 00:04:12.000
for you that's going to help disambiguate that!

72
00:04:12.000 --> 00:04:15.500
Here are the types of colliders! It's Static

73
00:04:15.500 --> 00:04:19.000
if it has a collider but no Rigidbody.

74
00:04:19.000 --> 00:04:22.500
The moment you add a Rigidbody. it's a Rigidbody. and if

75
00:04:22.500 --> 00:04:26.000
you make that Rigidbody Kinematic. i.e. it doesn't

76
00:04:26.000 --> 00:04:29.500
move on its own basically. We have to move it. Then. it becomes a Kinematic

77
00:04:29.500 --> 00:04:33.000
Rigidbody Collider. A rule of

78
00:04:33.000 --> 00:04:36.500
thumb is. if it's going to move during the game. slap a Rigidbody on it. and avoid

79
00:04:36.500 --> 00:04:40.000
moving Static Colliders.

80
00:04:40.000 --> 00:04:43.500
because it's very inefficient. So. that's what the rows and

81
00:04:43.500 --> 00:04:47.000
columns of this table mean. So. what do we have when our

82
00:04:47.000 --> 00:04:50.500
ball.. as we're setting it up in our game. falls? Well.

83
00:04:50.500 --> 00:04:54.000
the ball has a Rigidbody on it. and we want its physics to

84
00:04:54.000 --> 00:04:57.500
occur. but what it's going to hit is one of

85
00:04:57.500 --> 00:05:01.000
two things. depending on how we setup our Loose Collider. If our

86
00:05:01.000 --> 00:05:04.500
Loose Collider is a trigger. then it's a Static Trigger Collider. and this

87
00:05:04.500 --> 00:05:08.000
trigger message gets passed down here. And if we decide

88
00:05:08.000 --> 00:05:11.500
that our Trigger Collider is going to be static but not

89
00:05:11.500 --> 00:05:15.000
a trigger. then we get a collision up here.

90
00:05:15.000 --> 00:05:18.500
OK. so let's go back to Unity. Go to your Loose Collider.

91
00:05:18.500 --> 00:05:22.000
and we're going to need to add a component to it. Your ball. by the way.

92
00:05:22.000 --> 00:05:25.500
will be sitting in the middle of the play space.

93
00:05:25.500 --> 00:05:29.000
I just moved this for the sake of argument. So. there you go! You're looking like

94
00:05:29.000 --> 00:05:32.500
that with your ball there and your collider there. Add a component. a new script.

95
00:05:32.500 --> 00:05:36.000
and I'm just going to call it Loose Collider.

96
00:05:36.000 --> 00:05:39.500
Very imaginatively! Now. in that script. I'm going to pop it into

97
00:05:39.500 --> 00:05:43.000
the Scripts Folder. We're going to need to intercept

98
00:05:43.000 --> 00:05:46.500
one of two messages. Now. don't be scared about these message things. Let me

99
00:05:46.500 --> 00:05:50.000
show you a slide that explains how they work! They work very much like Start and

100
00:05:50.000 --> 00:05:53.500
Update!

101
00:05:53.500 --> 00:05:57.000
Here are the messages that are passed! If it's a collision. i.e. one of the blue

102
00:05:57.000 --> 00:06:00.500
things at the top-left. where physics is involved. then the

103
00:06:00.500 --> 00:06:04.000
message is void on CollisionEnter2D. and it is a

104
00:06:04.000 --> 00:06:07.500
Collision2D that is passed in. And I'm going

105
00:06:07.500 --> 00:06:11.000
to call that thing Collision. and it's an object. a green object comes in

106
00:06:11.000 --> 00:06:14.500
collision. If it's a trigger. then you use OnTriggerEnter2D and it's

107
00:06:14.500 --> 00:06:18.000
a collider. because there is no collision that gets passed in. And we don't

108
00:06:18.000 --> 00:06:21.500
have to take any notice of the green objects that are

109
00:06:21.500 --> 00:06:25.000
passed. but they're there for our information if we need them.

110
00:06:25.000 --> 00:06:28.500
So. these are very much like Start and Update. As I said. they are just

111
00:06:28.500 --> 00:06:32.000
methods that get called by the engine. They operate like

112
00:06:32.000 --> 00:06:35.500
normal methods in all other respects. So.

113
00:06:35.500 --> 00:06:39.000
let's take a look! Let's write both of these out. actually

114
00:06:39.000 --> 00:06:42.500
and jus log to the Console. So. I'll write one and you can

115
00:06:42.500 --> 00:06:46.000
write the other. void

116
00:06:46.000 --> 00:06:49.500
On... Let's go for. I don't know. Trigger first.

117
00:06:53.000 --> 00:06:56.500
...Enter2D. We're in 2D. you must have the 2D's. OnTriggerEnter

118
00:06:56.500 --> 00:07:00.000
2D. well what do we have a collider or a collision? It's got to be a collider.

119
00:07:00.000 --> 00:07:03.500
because there's no collision occurring

120
00:07:03.500 --> 00:07:07.000
with a trigger. And I just want to print

121
00:07:07.000 --> 00:07:10.500
("Trigger").

122
00:07:10.500 --> 00:07:14.000
That'll do! Now. what I want you to do is pause the video and

123
00:07:14.000 --> 00:07:17.500
write another method. directly under there. using the other signature which I shoed you

124
00:07:17.500 --> 00:07:21.000
in the slide. which is the OnCollisionEnter2D at the top.

125
00:07:21.000 --> 00:07:24.500
Go ahead and do that now.

126
00:07:24.500 --> 00:07:28.000
Cool! Alright. so this is just void On

127
00:07:28.000 --> 00:07:31.500
CollisionEnter2D. Now. you don't get any

128
00:07:31.500 --> 00:07:35.000
autocompletion help. you have to spell these messages properly. Once you spelled them

129
00:07:35.000 --> 00:07:38.500
right. you can intercept them. and you go

130
00:07:38.500 --> 00:07:42.000
(Collision2D collision)

131
00:07:42.000 --> 00:07:45.500
Now. you may have noticed my error in my function! I didn't

132
00:07:45.500 --> 00:07:49.000
bother putting the variable. So. what does all this stuff mean?

133
00:07:49.000 --> 00:07:52.500
void means that the method passes nothing

134
00:07:52.500 --> 00:07:56.000
back. OnTriggerEnter means that. that's the

135
00:07:56.000 --> 00:07:59.500
name of the method. Collider2D is the type of thing that

136
00:07:59.500 --> 00:08:03.000
is going to be passed in to us. from the engine.

137
00:08:03.000 --> 00:08:06.500
and then. we give that object a name. the instance a name.

138
00:08:06.500 --> 00:08:10.000
and that we're calling trigger. OK. so exactly

139
00:08:10.000 --> 00:08:13.500
the same pattern down here. We get a collision here.

140
00:08:13.500 --> 00:08:17.000
I'm just going to print

141
00:08:17.000 --> 00:08:20.500
("Collision"); OK cool. to the Console! Now. we can

142
00:08:20.500 --> 00:08:24.000
explore the difference between those two. over in Unity. So. if our Loose

143
00:08:24.000 --> 00:08:27.500
Collider has no trigger box on it. and our Ball

144
00:08:27.500 --> 00:08:31.000
has no trigger box. it's a collision. let's see what happens!

145
00:08:31.000 --> 00:08:34.500
So. you get a Collision logged out to the Console.

146
00:08:34.500 --> 00:08:38.000
which is fine. And actually. if you watch carefully.

147
00:08:38.000 --> 00:08:41.500
over in the Scene View the ball stops when it hits the collider. because

148
00:08:41.500 --> 00:08:45.000
the physics is being calculated. Now. let's go to the

149
00:08:45.000 --> 00:08:48.500
Loose Collider and make it a trigger. and watch what happens when

150
00:08:48.500 --> 00:08:52.000
we play.

151
00:08:52.000 --> 00:08:55.500
Two things are different there! Firstly. the ball passes straight through.

152
00:08:55.500 --> 00:08:59.000
because the trigger makes it ignore the physics.

153
00:08:59.000 --> 00:09:02.500
and secondly. we get a trigger logged out. So. hopefully

154
00:09:02.500 --> 00:09:06.000
now you understand the difference between these

155
00:09:06.000 --> 00:09:09.500
two messages that are passed. and you will be able to

156
00:09:09.500 --> 00:09:13.000
refer to Unity's docs or our documentation when

157
00:09:13.000 --> 00:09:16.500
it comes to this table here.

158
00:09:16.500 --> 00:09:20.000
Alright. that's it! You know

159
00:09:20.000 --> 00:09:23.500
how to do it. There are the different types of colliders. That's how you determine which row

160
00:09:23.500 --> 00:09:27.000
and column you're in. And I look forward

161
00:09:27.000 --> 00:09:30.500
to seeing you in the quiz. where I'm going to ask you to think about what

162
00:09:30.500 --> 00:09:34.000
each of the things in the scene are. the ball. the loose collider. etc.

163
00:09:34.000 --> 00:09:37.500
See how you can do in categorizing things yourself. OK.

164
00:09:37.500 --> 00:09:41.000
take care!

=======

1
00:00:03,500 --> 00:00:07,000
Hey, so in this video we're going to explore colliders in

2
00:00:07,000 --> 00:00:10,500
Unity, and let's get rid of the confusion, before it even starts!

3
00:00:10,500 --> 00:00:14,000
Just briefly, before I dive into the details of colliders, why do we even

4
00:00:14,000 --> 00:00:17,500
care about these things? Look they are a super handy part

5
00:00:17,500 --> 00:00:21,000
of Unity. These colliders allow us to

6
00:00:21,000 --> 00:00:24,500
trigger events, like maybe you walk over a door threshold and

7
00:00:24,500 --> 00:00:28,000
the automatic door opens for you, or we can

8
00:00:28,000 --> 00:00:31,500
simulate collisions, like a pool game, or in the case of

9
00:00:31,500 --> 00:00:35,000
Block Breaker the ball bouncing. It's really at the heart of all

10
00:00:35,000 --> 00:00:38,500
physical objects interacting with each other. So, colliders are super cool,

11
00:00:38,500 --> 00:00:42,000
they're super important, and I'm going to explain here

12
00:00:42,000 --> 00:00:45,500
the different types and how they talk to each other. So, as an overview,

13
00:00:45,500 --> 00:00:49,000
what we're going to talk about is if colliders overlap

14
00:00:49,000 --> 00:00:52,500
during a frame, then messages may be passed by the

15
00:00:52,500 --> 00:00:56,000
engine. And we're going to be talking about what message passing is

16
00:00:56,000 --> 00:00:59,500
and go into a little bit of detail about how

17
00:00:59,500 --> 00:01:03,000
all this works in Unity. So, what is message passing?

18
00:01:03,000 --> 00:01:06,500
When two GameObjects with colliders meet,

19
00:01:06,500 --> 00:01:10,000
the engine sends a message to those objects, we intercept those messages

20
00:01:10,000 --> 00:01:13,500
in a script, and then, our script decides what to do next.

21
00:01:13,500 --> 00:01:17,000
You can read more about message passing on Wikipedia, if you're

22
00:01:17,000 --> 00:01:20,500
having trouble getting to sleep. So firstly, what do we mean about two

23
00:01:20,500 --> 00:01:24,000
colliders meeting? Let's take a look at an example in Unity.

24
00:01:24,000 --> 00:01:27,500
Here I have a ball that has a circular collider on it, 2D

25
00:01:27,500 --> 00:01:31,000
circular collider, and here I have a Loose Collider

26
00:01:31,000 --> 00:01:34,500
at the bottom of my play space, which has a Box Collider. And if those two colliders were to

27
00:01:34,500 --> 00:01:38,000
overlap, so they're not touching now, but if the ball was a little

28
00:01:38,000 --> 00:01:41,500
bit lower, like this maybe, then they would overlap. If they overlap during

29
00:01:41,500 --> 00:01:45,000
a frame, and that is an important distinction, because if the ball

30
00:01:45,000 --> 00:01:48,500
is moving really really fast and it jumps right through this thing in a frame, there

31
00:01:48,500 --> 00:01:52,000
will be no collision message passed. But if

32
00:01:52,000 --> 00:01:55,500
there's an overlap during a frame, then a message may get

33
00:01:55,500 --> 00:01:59,000
passed. Why may get passed? Well, let's have a look at

34
00:01:59,000 --> 00:02:02,500
this table here! In most

35
00:02:02,500 --> 00:02:06,000
cases a message is passed. There are some white cells in my table, where

36
00:02:06,000 --> 00:02:09,500
the messages are not passed. Let's look at the general pattern of this table.

37
00:02:09,500 --> 00:02:13,000
Firstly, where did it come from? Well, Unity has this in their docs,

38
00:02:13,000 --> 00:02:16,500
under their Colliders Overview document. Let's take a look at it!

39
00:02:16,500 --> 00:02:20,000
Here it is, lots to read, again, if you're having trouble getting to

40
00:02:20,000 --> 00:02:23,500
sleep. And at the bottom of the page, you've got two tables.

41
00:02:23,500 --> 00:02:27,000
One about messages that are passed when a collision happens.

42
00:02:27,000 --> 00:02:30,500
And another about messages are passed when a trigger happens.

43
00:02:30,500 --> 00:02:34,000
But to me that's confusing, so what we've done is taken that table and

44
00:02:34,000 --> 00:02:37,500
that table, and we've put them on top of each other

45
00:02:37,500 --> 00:02:41,000
to give you that table, which I think is clearer.

46
00:02:41,000 --> 00:02:44,500
So, what I'm saying is that in some situations

47
00:02:44,500 --> 00:02:48,000
the engine will raise a message, and there's two different types of messages it can

48
00:02:48,000 --> 00:02:51,500
pass. One is for a collision, which only happens

49
00:02:51,500 --> 00:02:55,000
in the top-left of the table, where we have non-trigger

50
00:02:55,000 --> 00:02:58,500
colliders interacting with non-trigger colliders.

51
00:02:58,500 --> 00:03:02,000
None of these rows or columns, in the top-left, have the word trigger in them.

52
00:03:02,000 --> 00:03:05,500
The moment you add a trigger to the equation, you're dealing with triggers

53
00:03:05,500 --> 00:03:09,000
not collisions. You can take yourself down or to the right, or down

54
00:03:09,000 --> 00:03:12,500
and right. So, all of these other columns are where one

55
00:03:12,500 --> 00:03:16,000
or either of those objects have trigger set.

56
00:03:16,000 --> 00:03:19,500
What does that mean? Well, let's look in here! Let's look at the Loose

57
00:03:19,500 --> 00:03:23,000
Collider! If that checkbox is ticked, then we're in the territory

58
00:03:23,000 --> 00:03:26,500
of triggers, and if it's un-ticked,

59
00:03:26,500 --> 00:03:30,000
on there and un-ticked on the ball, then

60
00:03:30,000 --> 00:03:33,500
we may be in the territory of collisions.

61
00:03:33,500 --> 00:03:37,000
So, in this case, this is a collision, and the ball will actually,

62
00:03:37,000 --> 00:03:40,500
if it's started off higher, it will fall

63
00:03:40,500 --> 00:03:44,000
and stop when it hits that Loose Collider.

64
00:03:44,000 --> 00:03:47,500
OK, and the message that will get passed

65
00:03:47,500 --> 00:03:51,000
is one of these collision messages.

66
00:03:51,000 --> 00:03:54,500
When the collisions are happening, then physics

67
00:03:54,500 --> 00:03:58,000
is being calculated. Alright, so let's look at that

68
00:03:58,000 --> 00:04:01,500
in action a little bit more. What do we have here? We have a ball

69
00:04:01,500 --> 00:04:05,000
that has a Rigidbody on it. So,

70
00:04:05,000 --> 00:04:08,500
what do these rows and column headers mean? I've got a slide

71
00:04:08,500 --> 00:04:12,000
for you that's going to help disambiguate that!

72
00:04:12,000 --> 00:04:15,500
Here are the types of colliders! It's Static

73
00:04:15,500 --> 00:04:19,000
if it has a collider but no Rigidbody.

74
00:04:19,000 --> 00:04:22,500
The moment you add a Rigidbody, it's a Rigidbody, and if

75
00:04:22,500 --> 00:04:26,000
you make that Rigidbody Kinematic, i.e. it doesn't

76
00:04:26,000 --> 00:04:29,500
move on its own basically. We have to move it. Then, it becomes a Kinematic

77
00:04:29,500 --> 00:04:33,000
Rigidbody Collider. A rule of

78
00:04:33,000 --> 00:04:36,500
thumb is, if it's going to move during the game, slap a Rigidbody on it, and avoid

79
00:04:36,500 --> 00:04:40,000
moving Static Colliders,

80
00:04:40,000 --> 00:04:43,500
because it's very inefficient. So, that's what the rows and

81
00:04:43,500 --> 00:04:47,000
columns of this table mean. So, what do we have when our

82
00:04:47,000 --> 00:04:50,500
ball., as we're setting it up in our game, falls? Well,

83
00:04:50,500 --> 00:04:54,000
the ball has a Rigidbody on it, and we want its physics to

84
00:04:54,000 --> 00:04:57,500
occur, but what it's going to hit is one of

85
00:04:57,500 --> 00:05:01,000
two things, depending on how we setup our Loose Collider. If our

86
00:05:01,000 --> 00:05:04,500
Loose Collider is a trigger, then it's a Static Trigger Collider, and this

87
00:05:04,500 --> 00:05:08,000
trigger message gets passed down here. And if we decide

88
00:05:08,000 --> 00:05:11,500
that our Trigger Collider is going to be static but not

89
00:05:11,500 --> 00:05:15,000
a trigger, then we get a collision up here.

90
00:05:15,000 --> 00:05:18,500
OK, so let's go back to Unity. Go to your Loose Collider,

91
00:05:18,500 --> 00:05:22,000
and we're going to need to add a component to it. Your ball, by the way,

92
00:05:22,000 --> 00:05:25,500
will be sitting in the middle of the play space.

93
00:05:25,500 --> 00:05:29,000
I just moved this for the sake of argument. So, there you go! You're looking like

94
00:05:29,000 --> 00:05:32,500
that with your ball there and your collider there. Add a component, a new script,

95
00:05:32,500 --> 00:05:36,000
and I'm just going to call it Loose Collider.

96
00:05:36,000 --> 00:05:39,500
Very imaginatively! Now, in that script, I'm going to pop it into

97
00:05:39,500 --> 00:05:43,000
the Scripts Folder. We're going to need to intercept

98
00:05:43,000 --> 00:05:46,500
one of two messages. Now, don't be scared about these message things. Let me

99
00:05:46,500 --> 00:05:50,000
show you a slide that explains how they work! They work very much like Start and

100
00:05:50,000 --> 00:05:53,500
Update!

101
00:05:53,500 --> 00:05:57,000
Here are the messages that are passed! If it's a collision, i.e. one of the blue

102
00:05:57,000 --> 00:06:00,500
things at the top-left, where physics is involved, then the

103
00:06:00,500 --> 00:06:04,000
message is void on CollisionEnter2D, and it is a

104
00:06:04,000 --> 00:06:07,500
Collision2D that is passed in. And I'm going

105
00:06:07,500 --> 00:06:11,000
to call that thing Collision, and it's an object, a green object comes in

106
00:06:11,000 --> 00:06:14,500
collision. If it's a trigger, then you use OnTriggerEnter2D and it's

107
00:06:14,500 --> 00:06:18,000
a collider, because there is no collision that gets passed in. And we don't

108
00:06:18,000 --> 00:06:21,500
have to take any notice of the green objects that are

109
00:06:21,500 --> 00:06:25,000
passed, but they're there for our information if we need them.

110
00:06:25,000 --> 00:06:28,500
So, these are very much like Start and Update. As I said, they are just

111
00:06:28,500 --> 00:06:32,000
methods that get called by the engine. They operate like

112
00:06:32,000 --> 00:06:35,500
normal methods in all other respects. So,

113
00:06:35,500 --> 00:06:39,000
let's take a look! Let's write both of these out, actually

114
00:06:39,000 --> 00:06:42,500
and jus log to the Console. So, I'll write one and you can

115
00:06:42,500 --> 00:06:46,000
write the other. void

116
00:06:46,000 --> 00:06:49,500
On... Let's go for, I don't know, Trigger first.

117
00:06:53,000 --> 00:06:56,500
...Enter2D. We're in 2D, you must have the 2D's. OnTriggerEnter

118
00:06:56,500 --> 00:07:00,000
2D, well what do we have a collider or a collision? It's got to be a collider,

119
00:07:00,000 --> 00:07:03,500
because there's no collision occurring

120
00:07:03,500 --> 00:07:07,000
with a trigger. And I just want to print

121
00:07:07,000 --> 00:07:10,500
("Trigger").

122
00:07:10,500 --> 00:07:14,000
That'll do! Now, what I want you to do is pause the video and

123
00:07:14,000 --> 00:07:17,500
write another method, directly under there, using the other signature which I shoed you

124
00:07:17,500 --> 00:07:21,000
in the slide, which is the OnCollisionEnter2D at the top.

125
00:07:21,000 --> 00:07:24,500
Go ahead and do that now.

126
00:07:24,500 --> 00:07:28,000
Cool! Alright, so this is just void On

127
00:07:28,000 --> 00:07:31,500
CollisionEnter2D. Now, you don't get any

128
00:07:31,500 --> 00:07:35,000
autocompletion help, you have to spell these messages properly. Once you spelled them

129
00:07:35,000 --> 00:07:38,500
right, you can intercept them, and you go

130
00:07:38,500 --> 00:07:42,000
(Collision2D collision)

131
00:07:42,000 --> 00:07:45,500
Now, you may have noticed my error in my function! I didn't

132
00:07:45,500 --> 00:07:49,000
bother putting the variable. So, what does all this stuff mean?

133
00:07:49,000 --> 00:07:52,500
void means that the method passes nothing

134
00:07:52,500 --> 00:07:56,000
back. OnTriggerEnter means that, that's the

135
00:07:56,000 --> 00:07:59,500
name of the method. Collider2D is the type of thing that

136
00:07:59,500 --> 00:08:03,000
is going to be passed in to us, from the engine,

137
00:08:03,000 --> 00:08:06,500
and then, we give that object a name, the instance a name,

138
00:08:06,500 --> 00:08:10,000
and that we're calling trigger. OK, so exactly

139
00:08:10,000 --> 00:08:13,500
the same pattern down here. We get a collision here.

140
00:08:13,500 --> 00:08:17,000
I'm just going to print

141
00:08:17,000 --> 00:08:20,500
("Collision"); OK cool, to the Console! Now, we can

142
00:08:20,500 --> 00:08:24,000
explore the difference between those two, over in Unity. So, if our Loose

143
00:08:24,000 --> 00:08:27,500
Collider has no trigger box on it, and our Ball

144
00:08:27,500 --> 00:08:31,000
has no trigger box, it's a collision, let's see what happens!

145
00:08:31,000 --> 00:08:34,500
So, you get a Collision logged out to the Console,

146
00:08:34,500 --> 00:08:38,000
which is fine. And actually, if you watch carefully,

147
00:08:38,000 --> 00:08:41,500
over in the Scene View the ball stops when it hits the collider, because

148
00:08:41,500 --> 00:08:45,000
the physics is being calculated. Now, let's go to the

149
00:08:45,000 --> 00:08:48,500
Loose Collider and make it a trigger, and watch what happens when

150
00:08:48,500 --> 00:08:52,000
we play.

151
00:08:52,000 --> 00:08:55,500
Two things are different there! Firstly, the ball passes straight through,

152
00:08:55,500 --> 00:08:59,000
because the trigger makes it ignore the physics,

153
00:08:59,000 --> 00:09:02,500
and secondly, we get a trigger logged out. So, hopefully

154
00:09:02,500 --> 00:09:06,000
now you understand the difference between these

155
00:09:06,000 --> 00:09:09,500
two messages that are passed, and you will be able to

156
00:09:09,500 --> 00:09:13,000
refer to Unity's docs or our documentation when

157
00:09:13,000 --> 00:09:16,500
it comes to this table here.

158
00:09:16,500 --> 00:09:20,000
Alright, that's it! You know

159
00:09:20,000 --> 00:09:23,500
how to do it. There are the different types of colliders. That's how you determine which row

160
00:09:23,500 --> 00:09:27,000
and column you're in. And I look forward

161
00:09:27,000 --> 00:09:30,500
to seeing you in the quiz, where I'm going to ask you to think about what

162
00:09:30,500 --> 00:09:34,000
each of the things in the scene are, the ball, the loose collider, etc.

163
00:09:34,000 --> 00:09:37,500
See how you can do in categorizing things yourself. OK,

164
00:09:37,500 --> 00:09:41,000
take care!

>>>>>>> 1d882d5df15102d9c45644c583da4ffc34bcfea1:Unity/Section5/07-Colliders-Triggers-Collisions-in-Unity.srt
