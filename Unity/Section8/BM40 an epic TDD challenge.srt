Kind: captions
Language: en

00:00:00,000 --> 00:00:07,899
You're either gonna love me or you're
going to hate me by the time you've finished

00:00:07,899 --> 00:00:14,130
with this challenge. In this video there's
going to be an overview of the challenge

00:00:14,130 --> 00:00:19,939
and the delight ahead, we're gonna find and move
our score master test dot cs into the editor

00:00:19,939 --> 00:00:25,060
folder; temporarily disable our action
master tests; write a cumulative score in

00:00:25,060 --> 00:00:30,900
score master and then set the challenge so
let's get all the kind of administrative

00:00:30,900 --> 00:00:34,280
stuff out the way first and then I will
talk to you about the

00:00:34,280 --> 00:00:39,719
the final thing the challenge OK? So over in
unity I've got a red red error coming up

00:00:39,719 --> 00:00:44,989
now because between the videos all I've done
is I've popped a score master test dot cs

00:00:44,989 --> 00:00:49,700
script into the tests part of the start
pack so it's not in your start pack

00:00:49,700 --> 00:00:54,430
then you need to just go and re-download
the start packs from the assets at the very

00:00:54,430 --> 00:00:59,079
beginning of this section, your section
assets because it's only in the latest

00:00:59,079 --> 00:01:04,540
version of the start pack. OK so firstly
what's this all about why is there an error

00:01:04,540 --> 00:01:09,810
Well the error is because tests need to
be in the editor folder because they run

00:01:09,810 --> 00:01:15,040
in editor mode so drag from tests into
editor, right ok now that error goes away

00:01:15,040 --> 00:01:19,290
second thing go into your score master
tests, take a look at it most of the tests are

00:01:19,290 --> 00:01:22,439
commented out for now what you're going
to do is you're gonna go round uncommenting

00:01:22,439 --> 00:01:26,200
these tests and building score master
but before you can do that we need to

00:01:26,200 --> 00:01:31,729
do a couple of things firstly try and
compile code and you'll find it'll

00:01:31,729 --> 00:01:36,280
work fine but if you were to uncomment
one of the bottom tests then you'll find

00:01:36,280 --> 00:01:39,689
it won't work and that's because it's
making a call to something called

00:01:39,689 --> 00:01:45,540
score master cumulative here and we
don't have a score cumulative method yet

00:01:45,540 --> 00:01:50,460
so leave all your tests commented as
they were, it's just the top one I'm commenting.

00:01:50,460 --> 00:01:56,920
Go into your score master that we have
created before and let's just create this

00:01:56,920 --> 00:02:01,640
cumulative script so I'm gonna leave you
to do that as just a quick challenge

00:02:01,640 --> 00:02:08,300
it's just a cumulative scorer, it's just gonna
keep calling score frames and then

00:02:08,300 --> 00:02:11,599
keeping an internal track of the
cumulative score because remember that score frames

00:02:11,599 --> 00:02:16,830
frames that the major challenge that we're
gonna create just returns the list of

00:02:16,830 --> 00:02:21,000
frames scores it just doesn't add them
up so this is a simple loop and the

00:02:21,000 --> 00:02:25,870
and the signature of this method is is
as follows its public static list of int,

00:02:25,870 --> 00:02:31,310
score cumulative list of roles and it's just
going to make a call in to score frames

00:02:31,310 --> 00:02:35,209
let me take you a step further if you
need me to before the challenge so that

00:02:35,209 --> 00:02:39,989
you can see exactly what I'm going on
about and should be relatively easy for

00:02:39,989 --> 00:02:44,900
you to warm up your coding; roll up your
coding sleeves and get warm so

00:02:44,900 --> 00:02:48,250
remember this score frames; this is the
epic challenge writing that, I'll explained

00:02:48,250 --> 00:02:52,069
why it's epic in a minute but for now let's
just get you the signature of this thing

00:02:52,069 --> 00:03:03,150
sorted it's public static list of ints
score cumulative list - it's taking in

00:03:03,150 --> 00:03:08,560
a list of ints - rolls OK? And I'm going
to describe what both of these methods

00:03:08,560 --> 00:03:17,970
do in some comments this returns a list
of cumulative scores like a normal

00:03:17,970 --> 00:03:30,480
scorecard and this method here is going
to return a list of individual frame scores

00:03:30,480 --> 00:03:40,159
not like not cumulative ok now it turns
out it's easier, slightly easier I think

00:03:40,159 --> 00:03:43,830
to write score frames than it is to write
the cumulative version of it although

00:03:43,830 --> 00:03:49,629
frankly there's probably not alot in it
but I have done it this way, so as a

00:03:49,629 --> 00:03:53,750
little challenge for you what I want you
to write here is a simple method that

00:03:53,750 --> 00:03:59,220
calls into score frames regardless of
the fact we haven't written score frames

00:03:59,220 --> 00:04:05,170
yet as many times as it needs to to make
a list of running totals. So hopefully you

00:04:05,170 --> 00:04:10,500
understand now what the challenge is and
that's it; it's a little For Each loop, you can do this in about

00:04:10,500 --> 00:04:17,670
less than ten lines of code, have a go, warm
up your coding

00:04:17,670 --> 00:04:21,270
OK, so I'm just gonna tell you how I've done
that I'm gonna keep internal list of

00:04:21,270 --> 00:04:34,330
integers called cumulative scores and it's
a new list of integers and then

00:04:34,330 --> 00:04:38,180
eventually we're going to return just the job to
the bottom of method the cumulative

00:04:38,180 --> 00:04:43,700
scores . OK, fine, but what are we gonna do in
between? Well it's a for each loop, and it's for each int

00:04:43,700 --> 00:04:52,240
frame score in... now in what? In score
frames with the number of rolls now what's

00:04:52,240 --> 00:04:54,970
that? That's a bit functional isn't it? What's going on there?

00:04:54,970 --> 00:05:04,190
Well, when we call score frames with a
list of rolls, that has come into our

00:05:04,190 --> 00:05:10,670
cumulative method we just pass it
straight in here to score frames, score

00:05:10,670 --> 00:05:14,010
frames tells us what all the individual
frame scores are and now we just iterate

00:05:14,010 --> 00:05:20,580
through them. Running total... have we got a running
total? No we need a running total don't we?

00:05:20,580 --> 00:05:30,400
Simples... int running total better start at 0,
right? Cool, so running total + equals

00:05:30,400 --> 00:05:36,510
frame score and there's only one more line. The other
line is what, cumulative totals

00:05:36,510 --> 00:05:39,810
cumulative scores dot add, just add that to the list

00:05:39,810 --> 00:05:43,720
the running total. OK see what we're
doing here? This is just providing a

00:05:43,720 --> 00:05:47,650
wrapper that allows us our score master class
is going to have two ways of accessing it you

00:05:47,650 --> 00:05:53,360
can either query for cumulative scores
or for individual scores. So it turns out when

00:05:53,360 --> 00:05:57,510
you're building your test I find in the
beginning it was easier to... well let's do it

00:05:57,510 --> 00:06:02,240
actually let's uncomment the first test
which is score master score frames and

00:06:02,240 --> 00:06:07,610
its gonna pass in two bowls, two and
three and ist' expecting to get a

00:06:07,610 --> 00:06:12,380
score of just five out - an actual frame
score you know, not a cumulative score,

00:06:12,380 --> 00:06:16,200
which is of course the same with just one
frame and let's see what happens when we

00:06:16,200 --> 00:06:21,740
go in and try and run our tests and we
get and I'm gonna set my run on compile

00:06:21,740 --> 00:06:25,639
we get a failing test, good this is
where the challenge starts with this

00:06:25,639 --> 00:06:30,900
failing tests now just before I set you
the challenge I'm going to go into my

00:06:30,900 --> 00:06:35,639
action master test and I'm just gonna
comment out all the action master tests

00:06:35,639 --> 00:06:40,969
just for speed and come back to unity
and run all your tests and it would just

00:06:40,969 --> 00:06:44,050
mean, when it's finished compiling, that
you don't have to run all the action

00:06:44,050 --> 00:06:44,979
master tests every time

00:06:44,979 --> 00:06:51,340
OK we are there, we're at the frontier of something
that for me was absolutely epic writing

00:06:51,340 --> 00:06:58,029
score master sorry writing the
score master, yes the score frames method

00:06:58,029 --> 00:07:03,490
in here was completely epic for me at
one point my code had a hundred and

00:07:03,490 --> 00:07:08,349
forty lines and it still didn't work and
these are the tests I went through

00:07:08,349 --> 00:07:12,490
you've got exactly the same journey as
me as you start to uncomment these tests one

00:07:12,490 --> 00:07:13,419
by one

00:07:13,419 --> 00:07:18,159
I want you to strictly stick to the
red-green refactor loop and by the time

00:07:18,159 --> 00:07:24,050
you get down to about test number twenty
one we'd hope that you have working

00:07:24,050 --> 00:07:28,249
code and then after test number 21
I've labelled all the rest of these as

00:07:28,249 --> 00:07:32,550
verification tests and they're golden copy
tests; these are actual scorecards if you

00:07:32,550 --> 00:07:36,719
click on the URLs they'll take you to web
pages that will show you where I got it

00:07:36,719 --> 00:07:41,680
from that one came from that site that
one came from this site

00:07:41,680 --> 00:07:47,169
ok and it's it's kind of just tells you
the source but it's all written here, here

00:07:47,169 --> 00:07:51,969
are the rolls, here the totals, and it's a
complete test. Starts off working on

00:07:51,969 --> 00:07:56,389
individual scores then goes to cumulative, and the reason it was so epic for me is

00:07:56,389 --> 00:08:01,210
that I got to a hundred and forty lines
in here right in here where my code is and

00:08:01,210 --> 00:08:05,439
then I reduced it down to... I can't
remember how many to be honest with you

00:08:05,439 --> 00:08:09,360
but I think eighteen yeah I added 18
lines in the end and I could not believe

00:08:09,360 --> 00:08:13,589
that as I went from a hundred and forty
lines of code that just about worked

00:08:13,589 --> 00:08:16,379
down to 18 lines of code that works, or

00:08:16,379 --> 00:08:20,689
seems to work perfectly but it kept
working and it's so satisfying cos you

00:08:20,689 --> 00:08:24,719
build it up you build it up as the tests
come and then you start deleting and

00:08:24,719 --> 00:08:29,219
deleting and deleting code constantly
re-running your tests as you refactor and

00:08:29,219 --> 00:08:33,490
it's incredible how powerful a solution
you can come up with and I'm really really

00:08:33,490 --> 00:08:36,670
pleased with my solution now yours
doesn't have to be as short as 18 lines

00:08:36,670 --> 00:08:40,620
I think mine is really pretty and
I'm very very pleased with myself for

00:08:40,620 --> 00:08:45,170
doing it I nearly gave up I remember
sitting in the garden and nearly there

00:08:45,170 --> 00:08:49,630
on the brink of solving it and then I thought
Oh my god no I've got a problem that is gonna

00:08:49,630 --> 00:08:53,200
need me to start from the beginning and
instead of scrapping my code I just took yet

00:08:53,200 --> 00:08:57,460
another version so a tip for you, take
lots of snapshots use version control

00:08:57,460 --> 00:09:02,410
get source tree or something or just
take loads of zip files so that you can

00:09:02,410 --> 00:09:05,770
go back anyway I sat there
thinking oh my god I'm gonna need to

00:09:05,770 --> 00:09:09,090
start from the beginning but I went and had a bath
and in the bath I realised a simple

00:09:09,090 --> 00:09:12,930
solution to the final problem that meant
that I really was nearly there and I

00:09:12,930 --> 00:09:18,420
solved it and it worked. So your
challenge. Are you ready for it? Get

00:09:18,420 --> 00:09:25,520
Score Master dot cs working. This took me two full
days. It may take you much more time than

00:09:25,520 --> 00:09:28,460
that, it may take you a week don't spend
any longer than a week on it of like

00:09:28,460 --> 00:09:32,390
full-time work and I mean a week of
full-time work, like 40 hours. Yes, spend up to

00:09:32,390 --> 00:09:38,130
40 hours on this right because if you're
making progress and you're making more

00:09:38,130 --> 00:09:41,830
and more tests pass it's worth it. If
you spend more than a week or so just

00:09:41,830 --> 00:09:45,850
stop and and let me help you with the
solution because it's just not gelling

00:09:45,850 --> 00:09:49,070
for you and I haven't taught you well
enough and it's not a failing, ok, but i

00:09:49,070 --> 00:09:56,370
wanna give you the opportunity to have
that huge satisfaction ok and it may

00:09:56,370 --> 00:10:00,300
take you a lot less time, it might just be I'm
rubbish and you could just take you hours, let's

00:10:00,300 --> 00:10:05,900
see used the TDD test driven development
red green refactor loop strictly stick

00:10:05,900 --> 00:10:10,560
to it's your friend. If lots of tests start
failing just undo the new test you

00:10:10,560 --> 00:10:14,060
created revert your code to its previous
state and start again;

00:10:14,060 --> 00:10:21,720
Uncomment the tests one at a time and go
for it, just start making it working

00:10:21,720 --> 00:10:26,080
start with a small step you just need to
make it return five. You know if you

00:10:26,080 --> 00:10:31,630
want to start in score master by just
saying; make a new list and just

00:10:31,630 --> 00:10:37,290
return five that's fine because that
will make the test pass. If you get in a

00:10:37,290 --> 00:10:40,280
situation where you just want to write
special cases again and again and again

00:10:40,280 --> 00:10:44,550
and again for a while that's fine too
it'll help you spot patterns ok there's

00:10:44,550 --> 00:10:46,010
no wrong here

00:10:46,010 --> 00:10:47,260
just

00:10:47,260 --> 00:10:50,720
get it done and do your very best... sorry
I've just made some mistakes in the code

00:10:50,720 --> 00:10:53,870
ok just get it done so go ahead,

00:10:53,870 --> 00:10:59,140
pause the video for up to a week and I'm
serious in a way I hope it's not easy

00:10:59,140 --> 00:11:03,160
for you because it's so satisfying if
you struggle and struggle and struggle

00:11:03,160 --> 00:11:06,190
and then this works, so good luck and I'll see you soon.

