WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:08.109
Welcome back in this video were going to
be using on trigger exit again we're gonna

00:00:08.109 --> 00:00:12.230
recap the problem with the current setup
use on trigger exit for objects leaving

00:00:12.230 --> 00:00:18.410
colliders and then refactor PinSetter.cs
yes for the new paradigm. So the problem

00:00:18.410 --> 00:00:22.519
we have at the moment is if we start the
game and the ball ends up straight in

00:00:22.519 --> 00:00:27.529
the gutter for instance; that's an extreme
example, but the game will never reset because

00:00:27.529 --> 00:00:32.360
the ball never enters this PinSetter
collider down here. So rather than having

00:00:32.360 --> 00:00:36.329
an opt-in system where the ball has to
go into this collider I wanna create a new

00:00:36.329 --> 00:00:41.670
collider that's basically everywhere on
the lane but this so it basically is

00:00:41.670 --> 00:00:45.170
going to be a collider that starts down
the end of the lane there and extends

00:00:45.170 --> 00:00:51.030
all the way to about here and when the
ball leaves this new collider we want it

00:00:51.030 --> 00:00:55.559
to do exactly the same thing
that this collider currently does so

00:00:55.559 --> 00:00:59.670
it's just really making it an opt-out
system so I want you to do all that and

00:00:59.670 --> 00:01:05.920
see if you can make that paradigm shift.
Change ball entered box to ball left box in

00:01:05.920 --> 00:01:09.549
PinSetter.cs that's just a
change of the variable name; create a new

00:01:09.549 --> 00:01:15.200
lane collider as I described; connect a
GutterBall.cs script in there use

00:01:15.200 --> 00:01:18.130
on trigger exit to set the PinSetter's
new variable

00:01:18.130 --> 00:01:23.640
ball left box and then test it all works OK.
So go ahead pause the video and

00:01:23.640 --> 00:01:29.840
challenge yourself once more. Secret
sauce of this course; hey that rhymes. OK so welcome

00:01:29.840 --> 00:01:34.799
back let's get on with it now so what do we
want here? Well, first thing we'd better do

00:01:34.799 --> 00:01:38.689
is create the collider so I'm gonna
put it against the lane, I'm gonna make a

00:01:38.689 --> 00:01:47.149
new game object I'm gonna call it
something like... I dunno lane box

00:01:47.149 --> 00:01:54.360
something boring like that put it on the
on the lane itself ok so I've got an

00:01:54.360 --> 00:01:56.380
empty game object there, now I've
already got a

00:01:56.380 --> 00:02:00.079
collider and an object here of roughly the right
dimensions here with the PinSetter so

00:02:00.079 --> 00:02:03.460
I'm gonna copy the component the
transform component of the pin setter

00:02:03.460 --> 00:02:09.140
and past it onto the lane box as values.
That's about right

00:02:09.140 --> 00:02:12.920
possibly let's add a box collider make it a
trigger very important, we don't want

00:02:12.920 --> 00:02:18.510
physics. OK at least we've got something of
the right rough size now it's time to

00:02:18.510 --> 00:02:22.150
move to the left in fly through mode
which is where you hold the right mouse

00:02:22.150 --> 00:02:27.690
button and then use the WSAD keys
in order to move around now we need to

00:02:27.690 --> 00:02:35.560
rescale this guy so I think he needs to
be about 1829 long not the z

00:02:35.560 --> 00:02:42.090
position but the the length in z and
then we need to move it across this way

00:02:42.090 --> 00:02:47.850
using the blue arrow until this end this
right hand end doesn't intersect the

00:02:47.850 --> 00:02:51.390
front pin we want as soon as the ball
leaves this box we want it to start

00:02:51.390 --> 00:02:57.410
counting pins it's bound to have hit a pin
by the time it well it's bound to be on

00:02:57.410 --> 00:03:00.730
target to either hit a pin or miss by
the time it leaves the end of its box

00:03:00.730 --> 00:03:04.690
but certainly when it leaves this box in
any direction whether it's upwards

00:03:04.690 --> 00:03:08.620
downwards left or right we want to start
counting the effect on the pins

00:03:08.620 --> 00:03:11.340
The other thing we want to be a little bit
careful of is down this end of the

00:03:11.340 --> 00:03:14.959
ball we want to be a little bit careful
that the ball starts inside which it

00:03:14.959 --> 00:03:19.720
does so that looks ok and the final thing
is just as I said to make sure it's a

00:03:19.720 --> 00:03:26.220
trigger collider. Cool, so I'm gonna make a script on
here called GutterBall, well actually I told you

00:03:26.220 --> 00:03:30.980
to call it GutterBall but I'm going to
pick a more sensible name it's going to

00:03:30.980 --> 00:03:41.670
be lane box yeah lane box because it's
the behavior of the lane box, that

00:03:41.670 --> 00:03:45.970
makes more sense so let's call it lane
box. OK, fantastic so I'm gonna tidy

00:03:45.970 --> 00:03:51.430
my scripts up into the script folder and
then crack on with my necessary on

00:03:51.430 --> 00:03:56.950
trigger exit method that I challenge you
to do and hopefully you manage to do. So

00:03:56.950 --> 00:04:01.690
privately the lane box is gonna need some
concept of a PinSetter so a PinSetter

00:04:01.690 --> 00:04:09.760
class PinSetter instance like so then we'd
better go find it on the start, wish I had a pound

00:04:09.760 --> 00:04:14.910
for every time we do this type of thing.

00:04:14.910 --> 00:04:22.620
Find object of type PinSetter Great, so we've got
the PinSetter there, we don't need update but we do need

00:04:22.620 --> 00:04:27.270
void on trigger exit

00:04:27.270 --> 00:04:35.670
collider collider and then it's just a

00:04:35.670 --> 00:04:39.830
question of if now we want to check it's
the ball so collider dot

00:04:39.830 --> 00:04:43.060
game object name; I'm gonna do it by name, a

00:04:43.060 --> 00:04:46.820
little bit dangerous if we change the
name in the hierarchy of course if we

00:04:46.820 --> 00:04:48.790
were in unity change this name here

00:04:48.790 --> 00:04:52.140
of this ball then this will break but
that's ok

00:04:52.140 --> 00:04:56.030
ball should stay the same name and in this
instance we set PinSetter dot ball out

00:04:56.030 --> 00:04:57.020
of play

00:04:57.020 --> 00:05:01.840
equals true now of course ball out of
play is not going to work at the moment

00:05:01.840 --> 00:05:06.050
because it's not the name of the
variable over in PinSetter, so let's

00:05:06.050 --> 00:05:17.250
find the one that we were using ball
entered box and let's make it public and

00:05:17.250 --> 00:05:23.850
call it whatever I'm calling it in this
call - ball out of play

00:05:23.850 --> 00:05:30.090
OK, fantastic so we also ought to refactor ball
into the box into ball out of play

00:05:30.090 --> 00:05:33.930
everywhere that we see it so it won't
compile because we're just changing the

00:05:33.930 --> 00:05:36.800
variable name just because it does a
different thing now

00:05:36.800 --> 00:05:41.180
ok so what's going on here we're
starting off with the ball is not out of

00:05:41.180 --> 00:05:45.550
play and then the lane box is forcing
this ball out of play variable let's see

00:05:45.550 --> 00:05:52.289
if it works firstly. Click play, go off to the side.

00:05:52.289 --> 00:05:56.399
Is it working? Yeah, the ball does reset
I'd like some affordance here I'd like to

00:05:56.399 --> 00:06:02.919
know when the pin count starts so perhaps
we could make the text go red

00:06:02.919 --> 00:06:06.449
or something like that the moment that
the ball becomes out of play so if you

00:06:06.449 --> 00:06:14.819
look back over in the PinSetter in your
update method perhaps the moment that

00:06:14.819 --> 00:06:25.149
the ball goes out of play we go standing
display color equals color red and then

00:06:25.149 --> 00:06:31.559
when I bowl off to the side like this
it goes red, we know that we're waiting

00:06:31.559 --> 00:06:36.219
two or three seconds, and we reset
Fantastic so the other thing is the PinSetter

00:06:36.219 --> 00:06:39.800
we've got a collider on here, tempting
to just delete it but don't do that

00:06:39.800 --> 00:06:44.169
don't ever just delete a collider because
look, there's two scripts that use it you

00:06:44.169 --> 00:06:47.839
could disable it and see what the
effect is because it's very very easy to

00:06:47.839 --> 00:06:52.180
fix; now if you disable notice what
happens. You see the pins are no longer

00:06:52.180 --> 00:06:58.389
getting shredded because the shredder
script is using this collider so what we

00:06:58.389 --> 00:07:02.909
want to do is to consider whether we
still need the collider; well we do need

00:07:02.909 --> 00:07:08.009
because as I say the shredder is using it
but in the PinSetter script we have some

00:07:08.009 --> 00:07:12.959
code somewhere the OnTriggerEnter , we
don't need any of this stuff. Now why not?

00:07:12.959 --> 00:07:15.999
Just before i delete it let's look why not
because we have a PinSetter collider

00:07:15.999 --> 00:07:21.349
here, but now we also have a lane box
here, and it's the lane box, the big box

00:07:21.349 --> 00:07:25.419
that's going to do the triggering now, so
let's delete the OnTriggerEnter code

00:07:25.419 --> 00:07:28.199
from the PinSetter.cs

00:07:28.199 --> 00:07:34.839
leave the collider in place because the
shredder, remember needs it. Were also gonna

00:07:34.839 --> 00:07:37.330
have to have a quick look at PinSetter
because I think we're exposing too much

00:07:37.330 --> 00:07:40.349
publicly here so I'm going to take a
quick look through PinSetter and see if I can

00:07:40.349 --> 00:07:44.769
tidy it up so do we need the last 
standing count to be public?

00:07:44.769 --> 00:07:49.009
Not really, a bit of a strange thing to
have public you wouldn't want your

00:07:49.009 --> 00:07:52.759
designer fiddling with that so let's
make that private the standing display

00:07:52.759 --> 00:07:56.509
text we're going to connect through the
inspector, the pin set we're going to provide in the

00:07:56.509 --> 00:08:01.620
inspector ball out of play now that can
be a private as well now, we don't want that

00:08:01.620 --> 00:08:03.840
changed from the outside so that's fine

00:08:03.840 --> 00:08:07.550
the last standing count that's fine

00:08:07.550 --> 00:08:12.830
the ball yes because it finds the ball
here that's good actually the action the

00:08:12.830 --> 00:08:16.000
ball and the animator, because we find
them in start I wanna just put them

00:08:16.000 --> 00:08:22.760
together right here, right above
the start just for tidiness. Last change

00:08:22.760 --> 00:08:28.030
time and then action master is another
thing that we create so I'm just

00:08:28.030 --> 00:08:34.250
grouping my variables up here a little
bit so make this guy private there's a TODO

00:08:34.250 --> 00:08:39.820
here so I'm just trying up my code
that's all, so all this stuff the last settled

00:08:39.820 --> 00:08:42.839
count etc. feels to me like
it goes together and the last change

00:08:42.839 --> 00:08:48.440
time the action master is something that
we don't create on start but we use

00:08:48.440 --> 00:08:52.690
later on, do we need action master at
this level, at this scope? Let's have a

00:08:52.690 --> 00:08:53.240
look

00:08:53.240 --> 00:08:58.440
Let's do a find for action master. It's only used in pins
have settled you see so we got the scope

00:08:58.440 --> 00:09:01.990
of action master wrong and that's why
it's sitting out on a limb like this so

00:09:01.990 --> 00:09:07.570
let's just take action master out of
here and then go into pins have settled

00:09:07.570 --> 00:09:17.010
and create action master there. Perfect,
OK so ball out of play is inaccessible

00:09:17.010 --> 00:09:21.860
due to its protection level, so I've gone
slightly over the top with my tidying up

00:09:21.860 --> 00:09:28.190
we do need this ball out of play to be
public because it gets set from the

00:09:28.190 --> 00:09:31.920
outside or, or and I'll do it this way I'm
gonna show you the other option is you

00:09:31.920 --> 00:09:38.270
write a little method that just sets it.
So you make a method that is public void set

00:09:38.270 --> 00:09:46.190
ball out of play doesn't return anything
and then it simply just sets the

00:09:46.190 --> 00:09:51.370
variable.

00:09:51.370 --> 00:09:55.010
OK, so now we have a method to do it now we
can keep our ball out of play private

00:09:55.010 --> 00:10:00.180
and over in this instead of calling PinSetter
dot and then setting the variable

00:10:00.180 --> 00:10:07.200
we actually just call the method; set ball out of play
like that so now PinSetter's looking

00:10:07.200 --> 00:10:10.440
a lot better, we've got a public stuff a
private stuff the stuff we're about to

00:10:10.440 --> 00:10:15.980
find in start and we also moved the
scope of our action master right inside pins

00:10:15.980 --> 00:10:22.190
have settled Action Master's a bit big, if it got any bigger than this I would want to be

00:10:22.190 --> 00:10:26.320
putting it into a different method but
it's just about a screen full so I'm not

00:10:26.320 --> 00:10:29.350
gonna bother refactoring this at the
moment I'm just about happy

00:10:29.350 --> 00:10:32.900
with that. Alright so I've made quite a few
changes let's check that it all works

00:10:32.900 --> 00:10:37.870
first let's look at the PinSetter and see
that how much prettier it looks in inspector

00:10:37.870 --> 00:10:44.320
a lot less for your designer or the
designer in you to break, let's bowl the

00:10:44.320 --> 00:10:47.800
ball this is fine it's going off to the
side this goes red, starts waiting three

00:10:47.800 --> 00:10:53.170
seconds does a tidy which is what we
want even though we didn't touch

00:10:53.170 --> 00:10:57.060
anything we could have just clipped a
ball it doesn't know that and let's

00:10:57.060 --> 00:11:03.300
bowl again; let's see if I can clip something this time so
we should have a pinfall of one and an

00:11:03.300 --> 00:11:13.130
end turn. Interesting I got a Pin Fall
of one then a tidy there I did not

00:11:13.130 --> 00:11:16.500
get an end turn, I think that's a
mistake so I'm gonna write this down on

00:11:16.500 --> 00:11:22.040
a paper as a possible failing test. So I
went one and then my second bowl sorry I

00:11:22.040 --> 00:11:26.940
did 0 and then on the second bowl
the one should have been tidy -

00:11:26.940 --> 00:11:33.140
end turn rather,  and it was tidy. OK
well we'll put that in the tests in a

00:11:33.140 --> 00:11:36.780
moment. Let's justtake a third bowls if
there's anything else squiffy going on

00:11:36.780 --> 00:11:43.040
So I've missed there so it should be
pinfall 0 and tidy, that's right but

00:11:43.040 --> 00:11:50.940
I'm worried about this middle one that
should've been an end turn.

00:11:50.940 --> 00:11:57.500
So we have a pinfall of four there - it's
constantly only doing tidy now is this a

00:11:57.500 --> 00:12:01.990
problem due to the refactoring I just
did or is it out action master misbehaving

00:12:01.990 --> 00:12:05.050
now the great thing is we have test
driven development so we can immediately

00:12:05.050 --> 00:12:10.910
come in and we can make sure that the
condition I just created test number 13

00:12:10.910 --> 00:12:23.570
is that 0, 1 gives end turn and then we
bowl well I'm going to simplify this

00:12:23.570 --> 00:12:33.810
actually just gonna go action master the
instance one which is what we did and

00:12:33.810 --> 00:12:40.870
then we wanted an end turn to come out of
bowling another one in fact what I

00:12:40.870 --> 00:12:43.640
think I did is I bowled 0, didn't I? That's what
I've written on my piece of paper. I bowled

00:12:43.640 --> 00:12:48.340
0 and then a 1 and a good a tidy when I  should've got
an end turn. Let's try the test and see what the

00:12:48.340 --> 00:12:54.730
test says; because we don't know
at the moment whether the problem is

00:12:54.730 --> 00:13:01.040
with the; you see the problem isn't there so
by refactoring whatever I did in my

00:13:01.040 --> 00:13:09.380
overzealous refactoring of the PinSetter
I somehow made this misbehave and

00:13:09.380 --> 00:13:13.700
that is because I thought I was careless
with this scope so I said oh action

00:13:13.700 --> 00:13:19.500
master doesn't need to be anywhere
except for in the scope of pins have

00:13:19.500 --> 00:13:24.270
settled but of course we don't want a
new action master every time so I think

00:13:24.270 --> 00:13:27.440
this is what's caused the problem, really
good learning here. I moved it down

00:13:27.440 --> 00:13:31.380
because I said well the action
master only exists inside this method but

00:13:31.380 --> 00:13:35.300
we do not want to recreate it every time,
we want a consistent single action

00:13:35.300 --> 00:13:39.250
master instance so it can keep track
through the game so that's quite

00:13:39.250 --> 00:13:45.140
important so we do need to take action
master back up to the top level; and this

00:13:45.140 --> 00:13:51.470
would be a good time to comment and to
say we need it here as we want only one

00:13:51.470 --> 00:13:55.900
instance. I suspect that's a problem, now
you see how test driven development

00:13:55.900 --> 00:13:57.040
helped us there?

00:13:57.040 --> 00:14:01.329
We had a problem, the game wasn't
behaving properly, we stuck with testing

00:14:01.329 --> 00:14:05.130
we proved that action master itself
behaved right so you could tell that the

00:14:05.130 --> 00:14:07.940
problem is outside of the action master
script and it was more about the

00:14:07.940 --> 00:14:12.680
environment action master lives in and
and then I think we solved the problem

00:14:12.680 --> 00:14:16.360
I'm pretty sure that's going to the
issue I just created so let's just check

00:14:16.360 --> 00:14:20.529
a couple of bowls make sure they behave
properly see that we get the right pin

00:14:20.529 --> 00:14:25.529
falls and actions logged in then
crack on so what's this going to be? One

00:14:25.529 --> 00:14:32.480
It's given me 1 ball yeah that's worked out ok
nine and a tidy, ok now let's just do a

00:14:32.480 --> 00:14:35.319
gutter ball, off to the side

00:14:35.319 --> 00:14:40.230
crazy gutter ball, 0 end turn. Better, working
again so some really juicy lessons in

00:14:40.230 --> 00:14:44.230
there. Congratulations on getting this
far, the game's really shaping up and I

00:14:44.230 --> 00:14:44.709
will see you soon

