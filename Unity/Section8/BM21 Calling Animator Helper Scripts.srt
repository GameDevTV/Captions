Kind: captions
Language: en

00:00:00,000 --> 00:00:08,139
Hey, fantastic students, welcome back. Now we're gonna be calling some animator

00:00:08,139 --> 00:00:12,969
helper scripts to raise and lower our
pins so in this video we'll be adding

00:00:12,969 --> 00:00:15,799
temporary UI buttons for reset and
tidy,

00:00:15,799 --> 00:00:20,600
later those things will be done by the
scoring system. We'll be writing a raise

00:00:20,600 --> 00:00:26,150
pins method to lift up all the standing
pins. We'll write a lower pins method to

00:00:26,150 --> 00:00:30,130
lower them down again and then we'll
test it all works so back over in Unity

00:00:30,130 --> 00:00:34,670
first I want to note that I have updated
my version of Unity I'm currently on

00:00:34,670 --> 00:00:40,020
5.01 f1 so you wanna be at least that
version by the time you're watching this

00:00:40,020 --> 00:00:44,360
video you might well be on a much
later version. No problem. Another thing I

00:00:44,360 --> 00:00:49,450
want to say is that if when you first
install unity you like me

00:00:49,450 --> 00:00:55,360
renamed your unity folder to unity 5. Your
unity 5 folder to unity 5, then that may

00:00:55,360 --> 00:00:58,930
cause you a problem because when you
come to patch unity it's not gonna like

00:00:58,930 --> 00:01:02,620
that and it's going to try to reinstall
in a unity folder for a rather than a unity

00:01:02,620 --> 00:01:06,140
five so my recommendation is that you
keep unity four point six if you wanna

00:01:06,140 --> 00:01:10,780
keep it in a folder called unity 4.6
that you keep unity five in a folder

00:01:10,780 --> 00:01:15,430
just called unity so that it patches
properly. Fantastic, but that was an aside

00:01:15,430 --> 00:01:20,119
So the first thing we want to do is to
create a couple of buttons here, tidy and reset that we

00:01:20,119 --> 00:01:24,350
can click on and they're going to have
exactly the same effect as us clicking

00:01:24,350 --> 00:01:29,780
these animation state triggers in here so
that's the first objective for this

00:01:29,780 --> 00:01:35,439
video is simply that you can click on
tidy trigger and it will have exactly

00:01:35,439 --> 00:01:40,210
the same effect. Now if like you me
your animator has stalled, it's not running

00:01:40,210 --> 00:01:45,880
then I would suggest you go to this
transition from idle and remove your

00:01:45,880 --> 00:01:49,700
tidy trigger condition and just re-add it
and see if that fixes it

00:01:49,700 --> 00:01:54,630
often does for me that doesn't work try
cycling this has exit time toggle box

00:01:54,630 --> 00:02:02,310
out of play mode, and if that still doesn't fix it try turning auto live link off and back

00:02:02,310 --> 00:02:07,369
on again and hopefully your animator
will start springing into life. So even

00:02:07,369 --> 00:02:11,110
though I patched unity I'm still finding
minor problems with this but I find that

00:02:11,110 --> 00:02:14,470
if you just change some things that it
will suddenly start working so what

00:02:14,470 --> 00:02:17,860
we're trying to do is we're trying to put UI
buttons that simply do the same as

00:02:17,860 --> 00:02:22,349
clicking these buttons here in the
animator just as a piece of testing

00:02:22,349 --> 00:02:25,560
harness. So let's go ahead and just do
that first because there's nothing to prevent us

00:02:25,560 --> 00:02:29,840
so your challenge of course add two
buttons to your UI, connect them to the

00:02:29,840 --> 00:02:33,799
PinSetter game object and work out how
to trigger the animation states now be

00:02:33,799 --> 00:02:38,959
careful because the UI system will have
something called reset trigger and it's got

00:02:38,959 --> 00:02:43,170
nothing to do with our reset trigger so
take a look around see if you can work

00:02:43,170 --> 00:02:44,579
out how it works

00:02:44,579 --> 00:02:48,099
read the docs if necessary but just play
with things and see if you can get it

00:02:48,099 --> 00:02:51,950
working

00:02:51,950 --> 00:02:55,410
great-great-great so welcome back I'm
not going to spend too much time on how

00:02:55,410 --> 00:02:59,280
to do UI buttons right because we've done
this a billion times or at least once

00:02:59,280 --> 00:03:04,370
before so let's just quickly put a
UI button on the panel here make sure

00:03:04,370 --> 00:03:11,060
that it's subbed to the left panel
gonna call it tidy and gonna resize it

00:03:11,060 --> 00:03:15,709
because I know how to party and stick it
well just leave it there right in the

00:03:15,709 --> 00:03:21,370
centre why not, go to its text element
which is a sub-object here and just call it

00:03:21,370 --> 00:03:28,160
tidy. If I can type... perfect here we go, tidy
now that we've got a template duplicate

00:03:28,160 --> 00:03:35,370
that whole thing never renamed the
objects so I'm going to call that one tidy, that one

00:03:35,370 --> 00:03:40,940
reset rushing through this because I
hope you done it lots of times and

00:03:40,940 --> 00:03:45,150
change the text to reset and then we've
just got two buttons on top of each

00:03:45,150 --> 00:03:49,620
other so that should do it reset tidy it
doesn't matter which order they're in. Fantastic so

00:03:49,620 --> 00:03:54,130
now tying it up to the animator how do we
do that? Well we need to go and pick an object

00:03:54,130 --> 00:04:00,010
so on click, so we click the Reset button, we go down to the button script component

00:04:00,010 --> 00:04:03,860
on click Add an object. Now what are we
gonna find? Well, it's the PinSetter we want

00:04:03,860 --> 00:04:08,599
to talk to so find the PinSetter. Now what's
the function well we can talk to the

00:04:08,599 --> 00:04:12,870
animator but beware it's reset trigger
either takes a string or an int and it's

00:04:12,870 --> 00:04:16,780
nothing to do with our reset trigger, we just
happened to name it the same thing. What we

00:04:16,780 --> 00:04:18,959
actually want to do is set a trigger. What

00:04:18,959 --> 00:04:23,729
resetting a trigger does is kind of un-set the trigger so I know triggers unset

00:04:23,729 --> 00:04:26,970
themselves when they finish doing their
job but reset trigger would override that and do

00:04:26,970 --> 00:04:30,240
it immediately. We want to set a
trigger and we're gonna do with a string

00:04:30,240 --> 00:04:37,289
rather than an index. So we're setting a
trigger in this case called reset trigger.

00:04:37,289 --> 00:04:40,500
OK? I'm actually quite glad there's a naming clash because it makes you think

00:04:40,500 --> 00:04:44,630
carefully about what's going on and the
distinction so let's just test that, let's

00:04:44,630 --> 00:04:48,220
click reset and see if it has the same
effect as clicking reset down here click

00:04:48,220 --> 00:04:51,970
reset on your UI and it did

00:04:51,970 --> 00:04:55,760
perfect it's triggered the animator. Fantastic so we're pretty confident that

00:04:55,760 --> 00:04:58,699
tidy will work the same way right

00:04:58,699 --> 00:05:04,780
search for PinSetter. Choose the
animator to set a trigger by a string

00:05:04,780 --> 00:05:09,800
called tidy trigger. Now beware when you
do this you've now got information in two

00:05:09,800 --> 00:05:14,669
places. Yuck. You have a tidy trigger here and a tidy trigger here so if you rename this object

00:05:14,669 --> 00:05:18,440
you're gonna break these buttons but
these buttons are temporary anyway later

00:05:18,440 --> 00:05:22,110
the scoring system which is gonna be all on
the right hand side over here will be

00:05:22,110 --> 00:05:24,729
responsible for making the decision
about whether we are resetting or

00:05:24,729 --> 00:05:27,979
tidying but that's a little further down
the road so let's test that tidy button

00:05:27,979 --> 00:05:34,180
boom that works. Great so now we need to
get something in place for actually calling

00:05:34,180 --> 00:05:39,080
into the raise and lower script. So where
is the raise pins and lower pins

00:05:39,080 --> 00:05:43,729
information going to be? Where are we gonna call a method. Well it's the PinSetter's

00:05:43,729 --> 00:05:47,940
job surely to raise and lower pins. So
let's go to the PinSetter and lay the

00:05:47,940 --> 00:05:54,880
foundations for your coding challenge.
When it decides to open. Come on PinSetter

00:05:54,880 --> 00:05:59,800
Here you come. Sounds like a dog doesn't it? So firstly if we're gonna raise and lower pins by a

00:05:59,800 --> 00:06:04,599
certain amount in y why do we give in y, by y I mean the y direction why don't we

00:06:04,599 --> 00:06:09,490
give the designer or the designer part of
you control over that

00:06:09,490 --> 00:06:16,800
distanceToRaise and make it I don't
know 0.4, 40 centimetres? Well

00:06:16,800 --> 00:06:21,550
done if you spotted the error there so
this is a post-edit to the video Dondi has

00:06:21,550 --> 00:06:26,590
helpfully pointed out that if you you
try and use nought point four as your

00:06:26,590 --> 00:06:29,849
distance to raise then it's not gonna
work very well because of course we've

00:06:29,849 --> 00:06:34,819
decided for this game to make our world
units represent one centimeter rather

00:06:34,819 --> 00:06:38,699
than one meter so no point to have a
centimeter is only four millimeters and

00:06:38,699 --> 00:06:42,539
that's not gonna be far enough so you
need to be using a value here of forty

00:06:42,539 --> 00:06:46,880
we will fix it later in the course but
please just set this value to 40 now

00:06:46,880 --> 00:06:50,599
either in the script or over in the inspector
which will override the value in the

00:06:50,599 --> 00:06:59,020
script. Good luck. Is that enough well I don't know let's go have a look at the PinSetter, and

00:06:59,020 --> 00:07:05,039
look at the swiper - there it is, maybe scroll around a little bit. How tall is this guy? He is

00:07:05,039 --> 00:07:09,919
25 centimetres tall so if we take a pin
and we move it up forty centimeters

00:07:09,919 --> 00:07:14,990
should be plenty of room for the swiper to get underneath. Great so that seems like a

00:07:14,990 --> 00:07:19,860
reasonable instance variable to use
distanceToRaise and that's what we're

00:07:19,860 --> 00:07:24,880
going to do in our method which is going
to be called raise pins and lower pins so

00:07:24,880 --> 00:07:30,300
create yourself two new methods void public actually because we want access from outside, void

00:07:30,300 --> 00:07:42,319
RaisePins like so and this is going to raise
standing pins only by the distance we

00:07:42,319 --> 00:07:51,460
just talked about. Fantastic and then make
another method called LowerPins. Hopefully you can

00:07:51,460 --> 00:07:54,370
see where I'm going with this and that's
going to put the pins back down on the

00:07:54,370 --> 00:07:57,990
ground fantastic. So I'm gonna put a
couple of log entries in now just to get

00:07:57,990 --> 00:08:01,990
it all tied up and then you're gonna
write RaisePins and LowerPins

00:08:01,990 --> 00:08:08,599
Debug.Log raising pins, cryptically enough
and what do you think I'm gonna put in

00:08:08,599 --> 00:08:10,719
this other method what log entry

00:08:10,719 --> 00:08:11,680
can you guess

00:08:11,680 --> 00:08:16,190
Fantastic so we're lowering the pins
there so now that we have those Log entries

00:08:16,190 --> 00:08:20,330
we can do the final tying up in our
animator so raise pins does have a

00:08:20,330 --> 00:08:25,639
motion we created a motion if you didn't
make one now click onto the PinSetter in

00:08:25,639 --> 00:08:30,650
the animator and go to the raise motion for
a start and click the event button of

00:08:30,650 --> 00:08:32,089
course so were adding a raise

00:08:32,089 --> 00:08:36,240
event. Now it will list all methods on
all scripts that are on PinSetter and

00:08:36,240 --> 00:08:39,729
everything below it, which is why we made that architectural change. One of those is raise

00:08:39,729 --> 00:08:44,610
pins. Let's make sure that that method
actually does get called. Nowfor it to

00:08:44,610 --> 00:08:47,560
be called a few things need to be in
place; this raise state must have a motion

00:08:47,560 --> 00:08:51,760
and the motion must have an event
trigger on it. Now let's see if that's

00:08:51,760 --> 00:08:55,830
enough to make it work. So looking at the
console now which we can do we don't need to

00:08:55,830 --> 00:09:00,899
look into the animator we know that if
we do a tidy for instance that one of the things

00:09:00,899 --> 00:09:12,710
it would need to do is a raise. So click your tidy button

00:09:12,710 --> 00:09:18,360
and it's not logging out. OK so that's
strange why is this event not being

00:09:18,360 --> 00:09:22,050
called try setting it at a non-zero time. It doesn't have to raise the pins

00:09:22,050 --> 00:09:27,650
immediately try after say point three of
a second, see how get on then. So here we

00:09:27,650 --> 00:09:32,430
are you can look at the animator if you
want and use this tidy trigger button. We

00:09:32,430 --> 00:09:37,430
do a raise now what does the console say
raising pins better so that the knack

00:09:37,430 --> 00:09:41,910
here is to make sure that your event is
at a non-zero time. Events  that are precisely zero

00:09:41,910 --> 00:09:43,620
time doesn't like it

00:09:43,620 --> 00:09:47,070
alright cool so let's do the same for
the lower states. Just create yourself

00:09:47,070 --> 00:09:53,460
an event, link it to lower pins put it in a
non-zero time and then we're good to go

00:09:53,460 --> 00:09:57,230
So is there anything else left in the
animator we need to deal with?

00:09:57,230 --> 00:10:02,290
We have raising, swiping, lowering. Let's
look at the other state machine... renewing

00:10:02,290 --> 00:10:06,810
we need to renew the pins as well; well
why not pop over to the PinSetter and

00:10:06,810 --> 00:10:17,400
write that method while we're here. Public void RenewPins and makes new pins in fact you

00:10:17,400 --> 00:10:20,540
don't even need a comment because why
not just log a comment effectively

00:10:20,540 --> 00:10:27,650
works as both a log entry and a comment
doesn't it? Unless you wanna say more the y

00:10:27,650 --> 00:10:31,330
say more about the Y like the
standing pins only that's good enough so

00:10:31,330 --> 00:10:33,450
I want you to do the same thing for the renew now

00:10:33,450 --> 00:10:38,210
the renew motion needs to do exactly the same thing have an event method I'm gonna put

00:10:38,210 --> 00:10:43,120
it at point of a second and I'm gonna
renew pins. Fan-diddly-an-tastic. So

00:10:43,120 --> 00:10:51,620
let's check all this works look at your
console try a tidy. Raising pins, swiping

00:10:51,620 --> 00:10:59,250
you can see happening there and then
lowering pins. Won-diddly-on-derful. OK let's start

00:10:59,250 --> 00:11:07,360
again and try it with a reset. So a reset does what it swipes. Yep we can see it swiping and

00:11:07,360 --> 00:11:11,960
then it renews the pins and it lowers
them. Awesome. Of course, it doesn't do it yet because we haven't quite

00:11:11,960 --> 00:11:15,960
written the code to do it yet and guess who's going to be writing the code. So

00:11:15,960 --> 00:11:25,990
now we have laid the foundations you are
going to be able to write that code so

00:11:25,990 --> 00:11:31,400
guess what type of slide I'm about to
put up on the screen. A challenge slide

00:11:31,400 --> 00:11:35,210
of course and here it is. Finish raise
pins and lower pins flesh out these two

00:11:35,210 --> 00:11:39,550
methods in PinSetter.cs Create two
temporary UI buttons tidy and reset

00:11:39,550 --> 00:11:43,370
aren't I kind I've done that for you; and test
that the game is now fully playable

00:11:43,370 --> 00:11:47,600
basically if the tidy and reset work
properly then the game should be

00:11:47,600 --> 00:11:51,440
playable at the end of it so good luck
with that challenge.

00:11:51,440 --> 00:11:57,270
Of course there'll be no scoring but it should work. OK, you ready? Ready to see the solution or do you need more
missing the solution

00:11:57,270 --> 00:12:04,510
time you get the idea by now you pause
the video right? If you need more time. OK, fantastic so let's go

00:12:04,510 --> 00:12:06,960
into these scripts and take a look and
see what we gonna do

00:12:06,960 --> 00:12:11,000
firstly how's raise pins gonna work?
Well in simple terms it's gonna iterate

00:12:11,000 --> 00:12:15,140
over all the pins and see if
they're standing and lift them up if they

00:12:15,140 --> 00:12:19,060
are now you might say isn't that a bit
slow, well maybe it's a bit slow this

00:12:19,060 --> 00:12:23,620
remember this countStanding thing we did
that happens every single frame and it

00:12:23,620 --> 00:12:27,560
does a GameObject find objects of type Pin? and you might think every frame it's

00:12:27,560 --> 00:12:31,560
looking for every single pin. Isn't that
slow? Well maybe it's slow but you know

00:12:31,560 --> 00:12:35,050
what I'm gonna show you something really
briefly as a bonus in Unity 5 you don't

00:12:35,050 --> 00:12:40,280
need to guess, watch this. Play the game, go to window and profiler. First

00:12:40,280 --> 00:12:44,550
introduction to profile not really teaching it here but it's a quick aside for you OK?

00:12:44,550 --> 00:12:49,030
Now type PinSetter in this search box and
you can see that the PinSetter's update

00:12:49,030 --> 00:12:53,190
loop is taking less than a millisecond at the moment. You might say

00:12:53,190 --> 00:12:56,150
well let's ok but it doesn't start
really doing anything until the ball

00:12:56,150 --> 00:12:59,690
gets down the end of the game; down the
end of the play space and this figure

00:12:59,690 --> 00:13:03,100
starts updating true, let's do that, go

00:13:03,100 --> 00:13:06,890
back to your performance profiler while
it's running and watch how long this

00:13:06,890 --> 00:13:11,900
PinSetter update script's taken to run. Still negligible anything less than sort

00:13:11,900 --> 00:13:16,550
of 10 milliseconds for us at the moment
is fine. This is taking point one of a millisecond. A

00:13:16,550 --> 00:13:21,480
milliseconds a thousandth of a second so
I 10,000 or 20,000th of a second is taking

00:13:21,480 --> 00:13:23,040
no time to do that

00:13:23,040 --> 00:13:26,750
find find all objects so don't worry
about it so sometimes we think things

00:13:26,750 --> 00:13:31,080
are going to be slow they aren't and now
with the profiler we can start to look

00:13:31,080 --> 00:13:34,010
at that and we'll introduce the profiler more
love more and more now that it's in

00:13:34,010 --> 00:13:37,580
unity five. Cool, so I'm just gonna do
this the easy way not worrying about

00:13:37,580 --> 00:13:43,840
performance of the methods that I'm using. So how are we gonna raise the pins

00:13:43,840 --> 00:13:47,920
well we're just gonna borrow some
information from down here actually from

00:13:47,920 --> 00:13:52,450
the count standing for each pin. It's
very much like that and if we use this

00:13:52,450 --> 00:13:58,220
many more times we may refactor it
but in for each pin if it's standing so

00:13:58,220 --> 00:14:02,980
we want to raise the pin so the pins
transform; now you could go dot translate

00:14:02,980 --> 00:14:08,410
that's an easier way of doing things, and
what's that gonna take a Vector3 so

00:14:08,410 --> 00:14:12,150
we construct the Vector3 right in
here it's gonna have zero in the

00:14:12,150 --> 00:14:15,540
x-direction its gonna have distance to
raise in the y direction and zero in the

00:14:15,540 --> 00:14:17,390
z direction

00:14:17,390 --> 00:14:21,640
Oh, that's quite exciting does that work is
that really gonna raise the pins well no

00:14:21,640 --> 00:14:25,780
Because I've gone and put the code in the lower pins but who cares you copy and paste it into

00:14:25,780 --> 00:14:30,440
there so raise pins is simply going to iterate an entire pins array; again don't stress about the

00:14:30,440 --> 00:14:35,590
speed of this I've just show you it takes 20 thousandths of a second and we're only doing it

00:14:35,590 --> 00:14:40,960
once, so just let's have a look and see
if it works. What we're wanting to happen is

00:14:40,960 --> 00:14:44,840
that when we do a tidy for example we
raise the pins and it's raised most of

00:14:44,840 --> 00:14:49,130
the pins, has it raised them up? Let's just have a look and see what happened there tidy...

00:14:49,130 --> 00:14:56,500
So what is happening here let's look at
the end of the scene and click the tidy 7

00:14:56,500 --> 00:15:01,500
pins disappear 3 pins fall back down.

00:15:01,500 --> 00:15:04,710
Interesting, so we know why they're
falling down; they're  falling down because of

00:15:04,710 --> 00:15:13,970
gravity but why on earth do 7 pins disappear and
only three raise up? Well, i could just

00:15:13,970 --> 00:15:19,630
solve it for you or, you know what I'm
gonna do I'm going to ask you to find

00:15:19,630 --> 00:15:20,520
the bug.

00:15:20,520 --> 00:15:23,980
maybe there's more than one in the
system so save your work before you

00:15:23,980 --> 00:15:27,200
start fiddling if you're using code
control here then take a snapshot

00:15:27,200 --> 00:15:31,550
because in my experience when you start
trying to resolve bugs you mess around with things

00:15:31,550 --> 00:15:35,730
a lot and that's fine and that's great
but if you are not using code

00:15:35,730 --> 00:15:39,980
control then just save your Unity Project
Just close Unity is the

00:15:39,980 --> 00:15:45,670
safest way zip up the whole folder and
say before bug finding or something in a zip folder.

00:15:45,670 --> 00:15:49,030
If you're using code repository take
a snapshot in your repo and say

00:15:49,030 --> 00:15:53,120
about to squash this bug or something
like that then see if you can work out

00:15:53,120 --> 00:15:56,120
what the hell's is going on here. I can
tell you that there's at least one; at

00:15:56,120 --> 00:16:00,540
least two different simultaneous weird
things going on as I can guess what's

00:16:00,540 --> 00:16:04,840
happening here and then thirdly we will
address the debugging; I'll change that slide,

00:16:04,840 --> 00:16:11,120
strategy in the next video so
congratulations - not congratulations but good luck with

00:16:11,120 --> 00:16:12,440
finding that bug and I'll see you in the next video.

