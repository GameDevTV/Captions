WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:08.370
Hey! So, welcome to using BroadcastMessage! In this video, we are going to

00:00:08.370 --> 00:00:11.660
tell you how BroadcastMessage sends
down the Hierarchy. We'll be creating

00:00:11.660 --> 00:00:16.730
a natural parent radio system object,
creating a new child of player called

00:00:16.730 --> 00:00:23.519
InnerVoice, so that we can reduce ourselves to one AudioSource per game object, and also to

00:00:23.519 --> 00:00:28.859
play more with the concept of sending
messages. Now, you'll probably be thinking

00:00:28.859 --> 00:00:33.110
that the way that we are handling the
audio sources, at the moment, is a bit of

00:00:33.110 --> 00:00:37.010
a hack. Well, I think it is, if we look at
a couple of our scripts here. Do you remember

00:00:37.010 --> 00:00:42.480
that recently, we said that we would find
a particular AudioSource based on its

00:00:42.480 --> 00:00:47.489
priority? You see here in the player, because we have two audio sources on the player.

00:00:47.489 --> 00:00:51.710
Well, that's the sort of answer you'll
find on a forum on the Internet and

00:00:51.710 --> 00:00:56.020
that's fine, but it's actually indicative
of an architectural issue. And the

00:00:56.020 --> 00:01:01.260
architectural issue is that we have two
different audio sources on this game

00:01:01.260 --> 00:01:05.840
object. So, a slightly different way of
showing you things. Now, I'm going to be

00:01:05.840 --> 00:01:12.040
using Autodesk SketchBook, which is a
fantastic tool to compare the SendMessage,

00:01:12.040 --> 00:01:16.820
which you haven't seen yet, which
is the most local of these commands.

00:01:16.820 --> 00:01:20.950
So, we're going to look at SendMessage (), we're also going to look at SendMessage

00:01:20.950 --> 00:01:25.979
Upwards () again. We've already used SendMessageUpwards, we're just going to revise

00:01:25.979 --> 00:01:30.579
what that does, and I'll draw you a little picture, to explain how I see it visually.

00:01:30.580 --> 00:01:37.900
And then, I'm going to show you BroadcastMessage (), which can also be called

00:01:37.900 --> 00:01:41.840
SendMessage downwards, although that's not the method name in Unity, it kind of does

00:01:41.850 --> 00:01:47.860
what you'd expect, SendMessage downwards. OK, so how do these things work? Let me get myself

00:01:47.860 --> 00:01:51.799
a black pen out. By the way, tell me if you
like this style of presentation, in the

00:01:51.799 --> 00:01:54.970
discussions. I'd love to know, so send a
message. We're going to consider a parent

00:01:54.970 --> 00:02:00.210
GameObject, with a few child objects here. And I'm also for SendMessage () going to

00:02:00.210 --> 00:02:08.580
consider the Hierarchy of this game
object. So, here is the Inspector and the Hierarchy.

00:02:08.580 --> 00:02:11.730
So, on the right, you have the Inspector,
so it may have a transform and a

00:02:11.730 --> 00:02:16.690
renderer and my script A and my script
B, whatever. OK, all of these different

00:02:16.690 --> 00:02:23.240
components. And let's consider this GameObject here, and this is the Inspector

00:02:23.240 --> 00:02:28.380
of that particular GameObject. Now, let's
imagine that we use the SendMessage ()

00:02:28.380 --> 00:02:32.120
method in here, in one of the scripts on
this GameObject. What does it do?

00:02:32.120 --> 00:02:39.040
Well, SendMessage () will call the script that you specify, like on call

00:02:39.050 --> 00:02:42.900
helicopter or whatever you call it, whatever event you set up, on all of the

00:02:42.900 --> 00:02:48.140
other components of this object only, but
it is completely local to this GameObject.

00:02:48.140 --> 00:02:51.300
It's OK, the particular one we're on, it only goes across components of the

00:02:51.300 --> 00:02:54.930
existing GameObject, so it's very local. And of course, with any of these message

00:02:54.930 --> 00:02:57.850
broadcasting firstly, don't use them
every single frame, unless you really

00:02:57.850 --> 00:03:01.410
need to, and secondly, always use the most local scope you can. That's a general

00:03:01.410 --> 00:03:06.750
programming truth, if you like. So, that's
what SendMessage() does. Now, what does

00:03:06.750 --> 00:03:10.100
SendMessageUpwards() do? Well, we've
already used it, so you've probably got a

00:03:10.100 --> 00:03:13.600
feeling for what it does. I'm just going to
give you more of a diagrammatic feeling

00:03:13.600 --> 00:03:17.500
for what it does here. Let's say we have
three levels of nested GameObjects

00:03:17.500 --> 00:03:20.500
this time, like so. What SendMessageUpwards

00:03:20.500 --> 00:03:23.940
does for you is, if it's called on this GameObject, what does get the

00:03:23.940 --> 00:03:29.400
message called is the parent and then the
parent's parent. So, all the ancestors. OK,

00:03:29.400 --> 00:03:33.020
just as the manual says. And then,
Broadcast Message, what does that do?

00:03:33.020 --> 00:03:39.180
It's probably the least local of all of these, because it goes down to all of the child

00:03:39.190 --> 00:03:46.130
objects. So, let's imagine we have two
levels again, nested like that, and we

00:03:46.130 --> 00:03:51.610
call from here, the parent object. It will
call all of the children and all of the

00:03:51.610 --> 00:03:55.269
children's children. So, it needs to be used
sparingly, because it's a very busy

00:03:55.269 --> 00:03:58.570
little message broadcast. Probably why
they call it broadcast, because it's

00:03:58.570 --> 00:04:01.640
pretty pretty busy, sends to a lot of
different things.

00:04:01.640 --> 00:04:06.000
OK, so that's the comparison between a
very local SendMessage(), a lot less local

00:04:06.000 --> 00:04:11.880
SendMessageUpwards(), and the very global BroadcastMessage(). So, I'm going to just save that,

00:04:11.880 --> 00:04:15.549
so I can put it in the slides for you
later, and get ourselves a new one of

00:04:15.549 --> 00:04:19.370
these fancy slidy thingies. Tell me whether you like these, as I said, in the

00:04:19.370 --> 00:04:21.859
discussions. I'm really interested, I like being at a sketch and

00:04:21.859 --> 00:04:29.009
talk. So, how are we going to organize
then, to only have one AudioSource

00:04:29.009 --> 00:04:33.400
per GameObject? Well, we're going to have to change our ecosystem a little bit, so imagine

00:04:33.400 --> 00:04:41.460
that this now is a radio system, which
encompasses both the player and the

00:04:41.460 --> 00:04:46.780
helicopter, so I'm going to put the player
in here. Now, the player already has a

00:04:46.780 --> 00:04:49.300
couple of sub-components. We'll look at
those in a moment, but let's put the

00:04:49.300 --> 00:04:53.599
helicopter in. Now, is this physical? I said I wanted to keep this game as kind of

00:04:53.599 --> 00:04:56.750
physical as possible. It is, a radio system is distributed between the player

00:04:56.750 --> 00:05:01.229
and the helicopter. They both have two
different sides of the radio system, you know;

00:05:01.229 --> 00:05:04.509
they have a transceiver each, and
then, this represents kind of the air or the

00:05:04.509 --> 00:05:06.289
free space in between them.

00:05:06.289 --> 00:05:10.669
Alright, so how would this look in the
Hierarchy? Well, it's relatively simple,

00:05:10.669 --> 00:05:16.409
you would have the helicopter... Sorry, the
radio system number 1, at the top of

00:05:16.409 --> 00:05:20.300
the Hierarchy like that, and then, you
would have the player, which I'm going to leave some

00:05:20.300 --> 00:05:25.029
space, because we're going to do some other things as well and the helicopter. So, the player

00:05:25.029 --> 00:05:29.940
would be at number 2, in this instance, the
helicopter would be number 3, so we

00:05:29.940 --> 00:05:34.500
have 2 and 3. Now, we already have a
clear area under the player remember?

00:05:34.500 --> 00:05:39.800
We're also going to add a new thing under the player called inner voice. So, let's think

00:05:39.800 --> 00:05:43.979
about where the audio components are. We want the helicopter to only be giving off

00:05:43.979 --> 00:05:49.999
noise as an AudioSource. These blue
things are audio sources. OK, just call it audio, for now.

00:05:50.000 --> 00:05:52.720
It just wants to give off noise, we don't want it

00:05:52.729 --> 00:05:57.919
spitting out radio commands. The radio
system will be responsible as a 2D,

00:05:57.919 --> 00:06:06.779
for making the transmission sounds as a
2D AudioSource. This will be a 3D AudioSource.

00:06:06.780 --> 00:06:11.440
Now, the player has a couple of
different audio sources on him. He has

00:06:11.449 --> 00:06:16.900
things like footsteps. Now, that's a

00:06:16.900 --> 00:06:20.690
3D AudioSource, controlled by the First
Person Character Controller, so that

00:06:20.690 --> 00:06:24.300
you and other players can hear your own
footsteps, but what we need to do,

00:06:24.300 --> 00:06:30.590
underneath the player now, is create one
more sub-object called Inner Voice. OK, and

00:06:30.590 --> 00:06:35.370
that's going to be a child object of the
player like this, and that's going to be in

00:06:35.370 --> 00:06:42.699
terms of numbering here, it's going to be
like number 4. Probably use black to be consistent.

00:06:42.699 --> 00:06:49.259
It'll be a child object of the player, called Inner Voice, and it will have its own AudioSource

00:06:49.260 --> 00:06:53.480
on it, and it will just... I'm just going to call it voice for now, and that will be a 2D,

00:06:53.490 --> 00:06:55.210
because only we need to hear it.

00:06:55.210 --> 00:07:00.030
OK, so now we've got four different audio
sources, as we already do, but now they're split

00:07:00.030 --> 00:07:04.280
over four different game objects. A
helicopter makes wacky wacky sounds

00:07:04.280 --> 00:07:09.110
and things, the player has footsteps,
and then, off a new sub-object Inner Voice,

00:07:09.110 --> 00:07:14.729
the voice, and then the radio system. Then, what we can do is we can start saying: Well,

00:07:14.729 --> 00:07:20.660
when the player wants to send a message
to the helicopter, what it can do is, it can send a

00:07:20.660 --> 00:07:25.800
message up to the radio system, using SendMessageUpwards, which can then broadcast

00:07:25.800 --> 00:07:29.840
back down the Hierarchy into the
helicopter radio call.

00:07:29.840 --> 00:07:34.760
So, this type of architecture allows us to have one audio source per game object, and to

00:07:34.760 --> 00:07:39.669
frankly exercise or play with the broadcast system more, which is the point.

00:07:39.669 --> 00:07:44.970
OK, so I'm going to call this ecosystem and pop it in your slides for you later. Let's go over

00:07:44.970 --> 00:07:50.750
to Unity now and sort out the audio sources, as the end of this lecture. So, here we are

00:07:50.750 --> 00:07:55.490
in Unity, let's look at the player, firstly.
The player has two audio sources on them,

00:07:55.490 --> 00:07:59.060
this one here and then, there's one below. Now, which one is being used by the First

00:07:59.060 --> 00:08:04.960
Person Controller? ...It's the top one, because I saw "What Happened" come here, so I'm going to

00:08:04.960 --> 00:08:10.540
remove that "What Happened", or even just copy it. I'll copy it I think. Copy the

00:08:10.550 --> 00:08:15.010
component, then remove it, and then I'm
going to make this Inner Voice sub-object.

00:08:15.010 --> 00:08:22.880
create new child, Inner Voice. I like to put spaces in my GameObject names, I don't know why.

00:08:22.880 --> 00:08:27.440
And let's have a script, because we're bound to need that. And then, let's have an

00:08:27.440 --> 00:08:31.020
AudioSource, so we can paste the
component and then, it's going to keep

00:08:31.020 --> 00:08:35.780
the same properties as before, it's just a 2D AudioSource at the moment. I'm not going to configure

00:08:35.780 --> 00:08:40.140
these yet, I just want to set them up. So, the player has one for the footsteps and an Inner

00:08:40.150 --> 00:08:44.250
Voice with another, which we will later
program for the Inner Voice. Now, the

00:08:44.250 --> 00:08:49.460
helicopter also has two audio sources
doesn't it. Do we want it to have two audio sources?

00:08:49.460 --> 00:08:52.840
Well, we want it to have a helicopter sound that it plays on awake, but

00:08:52.840 --> 00:08:57.740
this top AudioSource, it must be the one
we're using for the radio and we don't

00:08:57.740 --> 00:09:03.150
want that. So, let's remove that, so
there's only one 3D AudioSource on the

00:09:03.150 --> 00:09:10.380
helicopter, and let's create a new empty
GameObject, called radio system. I'm going to reset the

00:09:10.380 --> 00:09:15.490
transform, it already was, and then, child
both the player and the helicopter to it.

00:09:15.490 --> 00:09:20.570
Why? So, that we can broadcast messages up and down as we said, and the radio system

00:09:20.570 --> 00:09:30.540
itself also needs a script, to control it, and it's also going to need an AudioSource. I'm just going to

00:09:30.540 --> 00:09:33.750
move this script down, because I prefer
to have scripts at the

00:09:33.750 --> 00:09:37.820
bottom. OK cool! So, this AudioSource is going to be for the radio and it's going to be

00:09:37.820 --> 00:09:42.180
a 2D AudioSource. So, now we have one
AudioSource there, one on the player for

00:09:42.180 --> 00:09:46.490
the footsteps, another on the player has
an Inner Voice, that only the player can hear,

00:09:46.490 --> 00:09:52.390
and then, a helicopter making wacky wacky noises. OK fantastic! So, now we have set

00:09:52.390 --> 00:09:56.800
it all up. I'm just going to tidy my scripts away, and also, address this error

00:09:56.800 --> 00:10:00.540
message I'm getting. What is the error
message? It's saying that the day cycle start

00:10:00.540 --> 00:10:05.090
rotation is never used. I think that's what
it said? And also, I've got a Null Reference

00:10:05.090 --> 00:10:11.560
Exception. So, let's tidy these up. We will have Null Reference Exceptions,

00:10:11.560 --> 00:10:15.920
because we have removed audio sources. So, we'll do that in the next lecture. I just

00:10:15.920 --> 00:10:20.080
want to sort out the previous warning I
had, which was for the day-night cycle.

00:10:20.080 --> 00:10:24.980
So, on the day cycle, I have this start
rotation, we never used any of that, so

00:10:24.980 --> 00:10:29.160
I'm just going to get rid of that lot in the day cycle. OK and then, in the next

00:10:29.160 --> 00:10:34.440
lecture, we will look at actually
refactoring all our code, for making this audio

00:10:34.440 --> 00:10:37.830
work, sending messages up and down the
Hierarchy, putting the appropriate delays

00:10:37.830 --> 00:10:41.340
in, recording a few more sounds, etc. It'll be fun! OK, see you soon!

