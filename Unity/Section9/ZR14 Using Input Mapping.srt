Kind: captions
Language: en

00:00:00,000 --> 00:00:07,920
Hey hey welcome back! Let's talk about user input mapping or using input

00:00:07,920 --> 00:00:12,620
mapping, even. So, we're going to be
talking about the Unity Input Manager.

00:00:12,620 --> 00:00:18,490
We'll create an input for the view zoom and we'll default that to V. We'll create an input for call helicopter

00:00:18,490 --> 00:00:23,260
and default it to H, and then, give both inputs basic placeholder behavior, as a default

00:00:23,260 --> 00:00:26,420
of V and H, because the whole point of
Input Mapping, as you'll see, is that we

00:00:26,420 --> 00:00:30,840
can allow the player to change
the key bindings, later. Although, we probably

00:00:30,840 --> 00:00:33,790
won't go as far as doing that, it does make it possible.

00:00:33,790 --> 00:00:36,960
OK cool! So, how do we do this? Well, the
first thing you need to do is go to

00:00:36,960 --> 00:00:41,930
the Input Manager, which is Edit, Project
Settings, and then, Input here. Take a

00:00:41,930 --> 00:00:46,579
look at my screen. Fantastic! So, that will give you an array of 18 default things, so

00:00:46,579 --> 00:00:52,039
let's make that 20 so that we have two
new things. One is going to be View Zoom

00:00:52,039 --> 00:00:59,980
or just Zoom, and we can give it a
descriptive name: Zoom the player's view

00:00:59,980 --> 00:01:03,739
.. or something like that. Now, we don't need a negative on here. It's asking for

00:01:03,739 --> 00:01:06,580
a descriptive name and a descriptive
negative, it's cut off, but that's what

00:01:06,580 --> 00:01:11,010
it says. We don't have a negative of Zoom, it's just going to be a whole Z or

00:01:11,010 --> 00:01:15,000
V to zoom in, and it's going to be let go
to zoom out, so we don't need a negative

00:01:15,000 --> 00:01:20,200
button, but it's going to be V to zoom
the view. So, let's emphasize that there,

00:01:20,200 --> 00:01:22,610
it could be Z, whatever you like.

00:01:22,610 --> 00:01:27,860
OK, and the other one that we're going to have is helicopter, so Call Heli, like that,

00:01:27,860 --> 00:01:34,990
Call the helicopter, and we're going to default that to H. So, in the Input Manager that's

00:01:34,990 --> 00:01:38,020
what we've done, we've set up two more
elements of the array called Zoom and

00:01:38,020 --> 00:01:43,100
Call Heli, with default keys of H and V, and
the names that you are going to need to refer to

00:01:43,100 --> 00:01:48,340
in code are these things, Zoom and Call Heli. So, I'm going to help you through the first one, the zooming in,

00:01:48,340 --> 00:01:53,760
and then, I'm going to ask you to use Input Mapping yourself, for the second one.

00:01:53,770 --> 00:01:59,509
So, let's go just have a little bit of tidy up first here in Unity. I'm going to make

00:01:59,509 --> 00:02:06,129
a folder for my scripts. I'm going to stick to this format, there's lots of ways you can organize your stuff.

00:02:06,130 --> 00:02:09,860
There's actually a Game Folder here, that's
already been created for us, with the Navmesh, so

00:02:09,860 --> 00:02:13,280
this time, I'm going to slightly break
the convention and put both the terrain

00:02:13,280 --> 00:02:16,849
in the Game Scene and the game. Just for
fun, just as a different way of

00:02:16,849 --> 00:02:20,590
doing things. Now, remember you can always search here and you can search by type here. So, if

00:02:20,590 --> 00:02:23,170
you're looking for scenes, you can click
Scene, and it will show you all your

00:02:23,170 --> 00:02:29,370
scenes here. OK, this will be from the
Standard Asset Pack, you can ignore that one. In fact,

00:02:29,370 --> 00:02:32,480
you can even delete the Tessellation Sample, if you like. I'm going to do that.

00:02:32,480 --> 00:02:36,800
Fantastic! Anyway, so we digress. Let's
think about how we're going to zoom in.

00:02:36,800 --> 00:02:41,580
So again, I need that scene, so let's go to
the game Scene. In the Game Scene, we have

00:02:41,580 --> 00:02:48,090
a player that has a camera, which I'm
going to rename to Eyes. OK, so I'm going to

00:02:48,090 --> 00:02:52,680
put a script on him called Eyes. OK, so it's a new script. Notice how I just typed

00:02:52,680 --> 00:02:55,580
the name of a script, that doesn't
exist, there, and it gives me a default,

00:02:55,580 --> 00:03:00,110
New Script, Create and Add. So, that's pretty efficient, right. Of course, what it hasn't

00:03:00,110 --> 00:03:05,049
done yet is put that into the Scripts Folder. Fine. So, let's go look at this

00:03:05,049 --> 00:03:08,390
Eyes Script and think about how we're going to do that. I'll get you going, and then, I'm going to

00:03:08,390 --> 00:03:11,650
challenge you to make that key do the
zoom. If you think you're confident stop

00:03:11,650 --> 00:03:15,269
now and go ahead and do it, otherwise, I'm
going to help you through. So, we're going to

00:03:15,269 --> 00:03:21,819
have a private camera called Eyes, so the
moment I've declared that, I want to go

00:03:21,819 --> 00:03:27,209
back to Unity and say, well here it's
going to start, in a minute, asking me for

00:03:27,209 --> 00:03:33,209
the Eyes, or is it? Why is it not asking me for the eyes?  Because I said private. Why did I

00:03:33,209 --> 00:03:35,109
say private? Good question!

00:03:35,109 --> 00:03:41,090
Well, there is only one camera in this
scene at the moment, and furthermore, the

00:03:41,090 --> 00:03:45,410
camera is on the same component. So, why would we try and drag that in? You'd be

00:03:45,410 --> 00:03:49,880
better off using GetComponent, so I
naturally went to private, and then, the

00:03:49,880 --> 00:03:54,540
next thing that would make sense to do
is to say that, eyes = GetComponent &lt;Camera&gt; ();

00:03:54,540 --> 00:03:58,380
on the same object, so you get the
camera and that's it. So then, the other

00:03:58,389 --> 00:04:04,520
things that we're going to need is, we're going to need a private float default field of view,

00:04:04,520 --> 00:04:07,380
which you're going to read at the start.
I'll leave that to you.

00:04:07,390 --> 00:04:11,069
I'm going to want a private

00:04:11,069 --> 00:04:16,519
bool called fade in. No no, to get that let's
just keep it simple, we're just going to

00:04:16,519 --> 00:04:20,519
have a private float default field of
view and then, when we click a button, we're going to

00:04:20,520 --> 00:04:26,340
zoom in. So, whatever field of view we set here, I want it to remember that, so

00:04:26,350 --> 00:04:30,320
the designer can set your field of view,
but when you zoom in, I want it to go one

00:04:30,320 --> 00:04:37,740
and a half times larger than it was
before. So, that's the idea.

00:04:37,740 --> 00:04:40,900
So, when I say one and a half times larger,
of course, I mean one and a half times

00:04:40,910 --> 00:04:45,900
more zoom, but that means a smaller field
of view. So look, let's challenge you to

00:04:45,900 --> 00:04:50,180
do this. I think you can do it. We're going to
trigger from the zoom input. Look in the docs,

00:04:50,180 --> 00:04:56,470
see if you can work out how to read that zoom input. Take a look for that, I think I've called it a capital

00:04:56,470 --> 00:04:59,810
Z, but you get the idea. Whatever you've called it in the Input Manager,

00:04:59,810 --> 00:05:04,370
When you push that key, change the field
of view of the Eyes to 1.5

00:05:04,370 --> 00:05:07,990
times smaller field of view, so you're zooming in, and then, revert back when the key is

00:05:07,990 --> 00:05:11,780
released. See if you can work that out, it's a
relatively simple bit of code, but there's a new method

00:05:11,780 --> 00:05:18,960
you need to find. Go ahead, pause the video and see if you can make the zoom keys zoom your view.

00:05:18,960 --> 00:05:24,040
Welcome back guys! OK, so how am I going to do this? Well, what I'm going to need to

00:05:24,040 --> 00:05:28,020
do is, I'm going to, at the start, need to get
that default field of view, so that the

00:05:28,020 --> 00:05:37,460
designer can change it. So, it's quite
common to go defaultFOV = eyes.fieldOfView; ...it's a

00:05:37,460 --> 00:05:42,560
property. Ok fantastic! And then, what we want to do on every update, is we want to say if... This is the

00:05:42,560 --> 00:05:52,810
method you need. if (Input.GetButton OK, and if that GetButton is ("Zoom" ) ... Now, let me

00:05:52,810 --> 00:05:59,660
just check back in Unity. Is that what I
called it? Project Settings, Input, Zoom

00:05:59,660 --> 00:06:09,220
here. Yes, it is. OK. If we get a zoom on
this frame, then we go eyes.fieldOfView = defaultFOV

00:06:09,220 --> 00:06:13,460
that we read at the start, so that the designer can offset all of this stuff.

00:06:13,460 --> 00:06:19,510
Divided by 1.5 is a float, so we're making it 1.5 times smaller; else if we're not reading

00:06:19,510 --> 00:06:27,570
that key on this frame, we make the field
of view the default field of view, so it goes back when

00:06:27,570 --> 00:06:32,950
you release the key. Does that make sense? Look for the key, set it, I'll release it.

00:06:32,950 --> 00:06:39,230
So, here we are in Unity. We've set a field of view on the camera, I'm going to leave mine at 60. If we then play,

00:06:39,230 --> 00:06:43,960
then we have compiler errors, so let's go have a look and see what the compiler errors are. So, I've

00:06:43,970 --> 00:06:49,760
just done a boo-boo, and that's that I've missed a closing bracket. Fantastic! So, let's try again.

00:06:49,760 --> 00:06:57,240
Fantastic! So, here I am looking around,
and I go V for the zoom. Ha, cunning hey! V works!

00:06:57,240 --> 00:07:03,120
Every time I press the V key, it zooms in. And there he comes, Ethan's pegging at me, and I can see. Fantastic!

00:07:03,120 --> 00:07:06,860
OK. And the benefit of this is that there
are methods that allow the player

00:07:06,860 --> 00:07:11,220
to change these input bindings at playtime. It also allows your designer

00:07:11,220 --> 00:07:15,800
to use the default buttons. Cool! So, what we're going to want to get you to do now, is using the Call Heli input,

00:07:15,800 --> 00:07:22,160
I want you to trigger a sound, some sort of sound. I'm going to say something like

00:07:22,170 --> 00:07:27,660
Rescue helicopter inbound, ETA five
minutes or something like that. And then, I'm

00:07:27,660 --> 00:07:31,810
just going to play that sound, that's all I'm going to do, when I've hit that button. So, that is your challenge,

00:07:31,810 --> 00:07:36,110
is to get the helicopter call behavior just
triggering.

00:07:36,110 --> 00:07:40,330
Create a CallHeli input, which we've done, and trigger the sounds when pressed, pretty simple. You've also got to

00:07:40,330 --> 00:07:47,529
decide where these scripts are going to go. OK, see you soon.

00:07:47,529 --> 00:07:52,219
Hey hey, so we don't have a helicopter do we? We don't have a helicopter in the scene.

00:07:52,219 --> 00:07:58,629
We don't have a helicopter prefab. We will
bring in a helicopter in a bit, but right

00:07:58,629 --> 00:08:03,289
now, it's not the job we need to do. We
just need to think about what game

00:08:03,289 --> 00:08:06,599
object, when there's no helicopter in the
scene, what game object is going to be

00:08:06,599 --> 00:08:10,929
responsible for receiving this helicopter call. Well, there's a couple of ways

00:08:10,929 --> 00:08:14,179
you could do this. You could have a game
manager, of some sort, that would instantiate

00:08:14,179 --> 00:08:18,879
helicopter, or we're trying to keep it as
real as possible here, you could actually

00:08:18,879 --> 00:08:22,599
just have a helicopter that's over the mountain somewhere and out of sight, because that's what's

00:08:22,599 --> 00:08:25,769
really going to happen. So, that's what I'm
going to do, I'm going to make an empty

00:08:25,769 --> 00:08:30,889
GameObject for now, completely empty. I'm going to call it the helicopter, and later,

00:08:30,889 --> 00:08:35,149
we'll build this up to be the actual
helicopter. And I'm going to put it outside the game

00:08:35,149 --> 00:08:39,189
world, just sitting down here somewhere.
Let's take a look at my Y position.

00:08:39,200 --> 00:08:44,959
My Y position should probably be around 0, and there he is, just looks a bit funny,

00:08:44,959 --> 00:08:48,790
I'm just trying to see where that is in
3D space. Ah that's why, you see I've just got myself a

00:08:48,790 --> 00:08:52,870
perspective issue. It's over here. That's
absolutely fine, being over there. I just needed

00:08:52,870 --> 00:08:56,420
to know where it was. So, that helicopter is hidden from view and any way, it's nothing,

00:08:56,420 --> 00:08:59,910
it's just an empty transform, but crucially we now have a GameObject that we

00:08:59,910 --> 00:09:07,610
can add the script to. So, I can now
simply say Helicopter. I can't type Helicopter, but I

00:09:07,610 --> 00:09:12,050
can say Helicopter. [Laughs] There you go. So, there is the Helicopter Script. So, now the

00:09:12,050 --> 00:09:16,970
Helicopter Script can actually listen
for that key press, right. Pretty cool!

00:09:16,970 --> 00:09:22,390
So, what it can do every frame... In fact,
why don't we just barrow what we did in Eyes,

00:09:22,390 --> 00:09:31,060
every frame we can say something like this. If we hear CallHeli, then there's probably a few

00:09:31,069 --> 00:09:34,300
things we need to do, which we can sort
out in a future script, but I think

00:09:34,300 --> 00:09:39,720
I'm going to want to do at least this. A private bool, inbound, or something like that,

00:09:39,720 --> 00:09:44,500
or called = false, and when I call the heli, I'm going to want to

00:09:44,500 --> 00:09:52,460
say called = true; and then, I'm also going to want to play a sound.

00:09:52,460 --> 00:09:56,390
So, to meet the results of the challenge, you do need to trigger a sound. So, we're

00:09:56,390 --> 00:10:08,580
going to need to publicly expose public
audio. Now what is it? AudioClip, so we'll have this

00:10:08,580 --> 00:10:12,080
AudioClip patched in, but let's just check
that this key binding is working. So, I'm

00:10:12,080 --> 00:10:17,970
just going to print "Helicopter called" to the console, for the moment, and set that

00:10:17,970 --> 00:10:23,880
boolean. Let's just check that work. So, play the game, we can still zoom in with V,

00:10:23,880 --> 00:10:29,120
we look at the console, and if I hit H now,
we get helicopter call. Now, we've got it called a lot

00:10:29,120 --> 00:10:34,950
of times, but that is just because the key is just repeating, when it's held

00:10:34,950 --> 00:10:40,360
down. OK, so you could use a different
method. I'm going to move the script across.

00:10:40,360 --> 00:10:42,730
You could use a slightly different method,
which will help before we solve the

00:10:42,730 --> 00:10:46,550
problem, along the way. Let's just say GetButtonDown. So, try now, you'll see that

00:10:46,550 --> 00:10:51,460
GetButtonDown just responds a little
bit differently. So, you push it now, and

00:10:51,460 --> 00:10:56,170
you just get one call. That's much better
right. You can still push it multiple times,

00:10:56,170 --> 00:11:01,620
so let's suppress that, straight away. So, we don't want to respond more than once,

00:11:01,620 --> 00:11:12,060
so if we push the Call Heli and not
called, then we do this. So, we should just do it

00:11:12,060 --> 00:11:17,700
once, because we set call to true. Cool! So, let's try again. So now, H can only call a heli once. At first, we

00:11:17,700 --> 00:11:21,920
sorted out the button repeat issue, and now we're sorting out the logic, so that we can call the helicopter,

00:11:21,920 --> 00:11:26,320
just once. And however many times I'm pressing the H key, I'm pushing it frantically now, it only gets called once.

00:11:26,320 --> 00:11:30,960
Fantastic! So, the helicopter now has a
state, which is that it's in a called state,

00:11:30,960 --> 00:11:33,940
and that's absolutely fine. So, how are we
going to get this AudioClip on there?

00:11:33,940 --> 00:11:37,240
Well, that is going to be the subject of the
next lecture, where we're going to deal

00:11:37,240 --> 00:11:41,540
with actually putting in the 3D sound.
But this is good enough, that you have

00:11:41,540 --> 00:11:45,800
the helicopter called, and it's in a called
state, so a slightly different result of

00:11:45,800 --> 00:11:48,850
the challenge that I gave you. If you've gone ahead and gotten as far as the sound, well

00:11:48,850 --> 00:11:51,820
done. If you're struggling with the sound,
well then I'm going to show you in the

00:11:51,820 --> 00:11:55,070
next lecture, all about 3D sounds. So,
congratulations and see you soon!

