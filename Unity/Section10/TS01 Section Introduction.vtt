WEBVTT
Kind: captions
Language: en

00:00:01.030 --> 00:00:04.680
Hey guys and girls and welcome to a brand
new section! In this section we're going to

00:00:04.680 --> 00:00:10.769
be looking at 2.5D games. Now, what does that
mean? Well, imagine games like Trials Fusion,

00:00:10.769 --> 00:00:18.050
you know the motorbike game, or Oddworld or
Limbo or Trine. These games, well, I don't

00:00:18.050 --> 00:00:22.040
know about Limbo actually, that might be purely
2D but certainly all of the others, Trine,

00:00:22.040 --> 00:00:27.420
Oddworld, Trials Fusion, have 3D environments,
but where the player's movement is constrained

00:00:27.420 --> 00:00:33.289
to 2 dimensions. So, think of say Trials Fusion
motorbike game, you are in a proper 3D world,

00:00:33.289 --> 00:00:38.539
but you are going down a track that you can't
deviate left and right from, at least not

00:00:38.539 --> 00:00:43.320
until you fall off your bike. When you fall
off your bike, that particular game allows

00:00:43.320 --> 00:00:47.879
the full 3 dimensional movement, and I really
like that. So, I'm going to be encouraging

00:00:47.879 --> 00:00:54.569
us to use that sort of thing, to use the constraint
functionality in Unity 5's physics to constrain

00:00:54.569 --> 00:00:59.600
our movement, not allowing movement in the
Z, but maybe just maybe when we mess up and

00:00:59.600 --> 00:01:04.720
when the player loses control, maybe we re-enable
that movement, so the Physics Engine can take

00:01:04.720 --> 00:01:09.380
over and create some havoc. So, that's the
main thing we're going to be covering in this

00:01:09.380 --> 00:01:14.950
game. We're also going to be putting in World
Space UI, so that you actually put User Interface

00:01:14.950 --> 00:01:21.219
right inside the game world. We will be looking
at UI anchors in a little bit more detail,

00:01:21.219 --> 00:01:26.770
just to make sure you really know how to make
a game flex and flow on different mobile screen

00:01:26.770 --> 00:01:31.450
aspect ratios. We're going to be looking at
saving your game state, this time, and we're

00:01:31.450 --> 00:01:35.590
going to save it to player preferences. Brice
is going to be showing you, in the next section,

00:01:35.590 --> 00:01:41.799
which he promises to do, how to save to disk
and also how to be doing network gaming, but

00:01:41.799 --> 00:01:47.429
I'm going to show you a way of saving your
game state to the Player Prefs but via an

00:01:47.429 --> 00:01:52.479
API or an interface that is going to be compatible
with saving to disk or indeed talking to the

00:01:52.479 --> 00:01:57.229
network. So, we're going to be doing that
and a few other things as we go through. So,

00:01:57.229 --> 00:02:02.770
the main thing is that it's a 2.5D game. Now,
it's going to be more of a Sandbox this section,

00:02:02.770 --> 00:02:07.640
than a complete game. What I'm trying to do
is wean you off just copying the game clones

00:02:07.640 --> 00:02:12.260
that I'm making and encourage you to start
really thinking of your own ideas and implementing

00:02:12.260 --> 00:02:16.959
them. So, what I want you to do, at the start
of this section, is to think what 2.5D game

00:02:16.959 --> 00:02:21.980
you want to make. Now, if you don't have your
own game idea, just pick one. Pick Odworld,

00:02:21.980 --> 00:02:28.069
pick a Limbo, pick a Trine, pick a Trials
Fusion, pick any 2.5D game that floats your

00:02:28.069 --> 00:02:31.950
boat, and as we go through the section, I'm
going to be teaching you the methodologies

00:02:31.950 --> 00:02:36.310
for doing it, and then, I want you to apply
it to the game and share in the discussions,

00:02:36.310 --> 00:02:41.970
as you go. Now, one of the things about Unity
that makes it so powerful is its ability to

00:02:41.970 --> 00:02:45.530
deliver a game to multiple different platforms,
and we're going to be doing that right from

00:02:45.530 --> 00:02:51.000
the start, looking at the Cross Platform Input
Manager Module and really looking at the Virtualization

00:02:51.000 --> 00:02:55.360
Layer that you can get between your controllers,
whether it's one of these things, which is

00:02:55.360 --> 00:02:59.909
obviously a Playstation 4 Controller or an
Xbox controller or whether it's mouse and

00:02:59.909 --> 00:03:03.739
keyboard or whether you're playing it on a
touch screen; we're going to organize the

00:03:03.739 --> 00:03:08.269
game, so that when you change the target build
platform then, everything changes for you

00:03:08.269 --> 00:03:12.260
and pretty fluidly. So, that's going to be
a lot of fun. The other thing you can do with

00:03:12.260 --> 00:03:16.260
a Virtualization Layer, so you have your physical
controls up here, you've got your mouse and

00:03:16.260 --> 00:03:20.720
keyboard or you've got your touchscreen joysticks
or you've got your gamepad or whatever, if

00:03:20.720 --> 00:03:24.760
you have a Virtualization Layer called the
Cross Platform Input Manager here, then when

00:03:24.760 --> 00:03:29.579
you make your calls through that there's two
advantages. One is when you switch platforms,

00:03:29.579 --> 00:03:33.860
it still works, as I just mentioned, but the
other thing is with Virtual Controls in this

00:03:33.860 --> 00:03:40.040
middle layer we can us that to record player
game play and even play it back. So, this

00:03:40.040 --> 00:03:45.060
can be for rolling demos or for replays, etc.
So, that's pretty cool, because we can feed

00:03:45.060 --> 00:03:49.579
by software, into the virtual layer, and then,
the game doesn't really know the difference

00:03:49.579 --> 00:03:53.439
as to whether it's a player up here manipulating
controls or whether it's your software feeding

00:03:53.439 --> 00:03:58.519
a stream of events into the virtual layer.
So, lots of things to explore in this section.

00:03:58.519 --> 00:04:02.290
I'd love your feedback as we go through. I
will steer the section to your needs as we

00:04:02.290 --> 00:04:06.239
go. It can be more of a Sandbox, but there's
going to be a huge amount of learning in here,

00:04:06.239 --> 00:04:07.560
and I look forward to seeing you on the other
side.

