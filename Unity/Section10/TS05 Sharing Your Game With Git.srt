Kind: captions
Language: en

00:00:01,810 --> 00:00:05,130
Hey guys! So, hopefully you've had a little
look at Git. So, in this video we're going

00:00:05,130 --> 00:00:09,680
to talk about how Git can help you share your
project, not your final game yet, but just

00:00:09,680 --> 00:00:13,940
your project state, how we use it for the
course, what's different about how you may

00:00:13,940 --> 00:00:20,939
use it, and also worth reading this blog post
by Dan. Dan the man! So, we have Dan Reilly

00:00:20,939 --> 00:00:25,490
here, he's written a really cool blog post.
There's a few posts on here, actually talking

00:00:25,490 --> 00:00:33,640
about how to use GitHub with Unity. Alright,
so let's get on with that, so I want to firstly

00:00:33,640 --> 00:00:38,390
show you how we use it. So, you've seen that
we have all of these different repos; well,

00:00:38,390 --> 00:00:44,140
I'm going to show you setting up a repo firstly.
This is the remote version of things; we will

00:00:44,140 --> 00:00:48,870
talk about your local software in a little
bit, but I'm going to just set up a remote

00:00:48,870 --> 00:00:53,630
repo here. I'm going to call it 10 TwinStick,
because that's the section I'm about to work

00:00:53,630 --> 00:00:58,540
on, and it's a... What should we call it?
Oh, here you go, I've typed it before! "A

00:00:58,540 --> 00:01:03,010
cross-platform, twin stick control game set
in 2.5D as part of The Complete Unity Developer."

00:01:03,010 --> 00:01:07,869
Fantastic! So, I'm going to make it public.
If you want to make things private on GitHub,

00:01:07,869 --> 00:01:11,719
you actually have to pay, and I'm going to
leave out the readme file, just for now, and

00:01:11,719 --> 00:01:14,700
I will show you what the readme file does
in a second, and I will put a read me in.

00:01:14,700 --> 00:01:19,200
Cool! So, now we have a repository for Twin
Sticks, so when you watch the video you will

00:01:19,200 --> 00:01:25,119
actually see that, but there is no readme
File and there's no commits to it yet. If

00:01:25,119 --> 00:01:31,749
you look at Zombie Runner, then it has this
readme file .md. So, we'll be doing that shortly,

00:01:31,749 --> 00:01:35,979
sorting out readme files, but Twin Sticks
has nothing. Alright, fantastic! So, what

00:01:35,979 --> 00:01:42,270
I do when I make these courses is, I already
have a local repository for Twin Sticks, and

00:01:42,270 --> 00:01:46,729
all I've done on it is some prototyping.
So, I have an initial commit, and then, I

00:01:46,729 --> 00:01:50,539
have this PT branch, which I've just done
very little; I've just had a quick play before,

00:01:50,539 --> 00:01:55,100
actually getting on with recording the section.
But this is just local to my machine, so what

00:01:55,100 --> 00:01:59,060
I'm going to do is I'm going to connect that,
and again, you don't need to do any of this.

00:01:59,060 --> 00:02:02,319
What I'm doing is I'm doing this, so that
the challenge I'm going to give you in a minute

00:02:02,319 --> 00:02:05,649
will actually work. Your challenge is going
to be very simple. You're just going to go

00:02:05,649 --> 00:02:10,310
to the GitHub website and download this prototype.
OK, but I've got to get it there, and to get

00:02:10,310 --> 00:02:14,970
it there, I may as well show you how I'm getting
it there. So, I have a local databases on

00:02:14,970 --> 00:02:18,680
my machine, that's what you're looking at,
and it has a couple of changes that I've tracked

00:02:18,680 --> 00:02:22,349
and it's just sitting on my machine, so how
do I get it to the Web. Well, I make a local

00:02:22,349 --> 00:02:26,180
repository, which I've already done, and I'm
just going to go and find it now, because

00:02:26,180 --> 00:02:29,700
it's already connected to my GitHub account,
this piece of software. This is called SourceTree;

00:02:29,700 --> 00:02:35,840
we'll look at that later, as well. And if
I call this 10... I think I named them differently

00:02:35,840 --> 00:02:40,640
actually? Oh no, hang on. The remote name
is going to be GitHub, because that's the

00:02:40,640 --> 00:02:45,810
name of the remote thing that I'm sending
this to, so there we go. So, all I've done

00:02:45,810 --> 00:02:51,220
is just connected my local database to the remote
database. Now, if I do this push thingy here

00:02:51,220 --> 00:02:58,510
and I say I want to push the prototype branch
to GitHub, remember the diagram from the last video. What's

00:02:58,510 --> 00:03:05,719
happening is it's just sending my game state
and all of the snapshots through time, up

00:03:05,719 --> 00:03:09,980
to GitHub. Now, it's very clever with the
way it deals with snapshots, it only takes

00:03:09,980 --> 00:03:15,030
extra space to record differences, it doesn't
take like a snapshot of your entire project

00:03:15,030 --> 00:03:19,280
for every single state that you take. So,
it's a very conservative backup like that.

00:03:19,280 --> 00:03:24,110
It's like a differential backup, it's pretty
cool; in other words, incremental you data

00:03:24,110 --> 00:03:29,689
people will tell me I'm sure. Some sys. admin
will come on and tell me whether it's incremental

00:03:29,689 --> 00:03:33,239
or what. So, it's just pushing, obviously
it's taking a little while. Why is it taking

00:03:33,239 --> 00:03:38,329
so long? Because when I did this prototyping,
I imported a lot of packages. You can see

00:03:38,329 --> 00:03:42,670
it's sneaking it's little head here, and the
first thing that I did was import a bunch

00:03:42,670 --> 00:03:45,930
of packages and they're quite big, they're
hundreds of megabytes. So, right now, while

00:03:45,930 --> 00:03:51,329
I'm speaking it's pushing hundreds of megabytes
to that remote repository, but when it's finished,

00:03:51,329 --> 00:03:55,849
you will actually be able to do the challenge
and just go and download my repository, at

00:03:55,849 --> 00:04:00,579
that point in time. And this will server two
purposes, one you will be able to download

00:04:00,579 --> 00:04:04,930
our repositories from any previous point in
time for any section of this course and any

00:04:04,930 --> 00:04:09,890
future section of this course or any other
course I make. But also, as you start to use

00:04:09,890 --> 00:04:12,909
Version Control for your games, you will be
able to say to your friends, hey check out

00:04:12,909 --> 00:04:17,430
my game as it was here, or if you're trying
to get help, inside maybe Unity answers or

00:04:17,430 --> 00:04:22,419
something, you can give people a link that
will allow them to download your project or

00:04:22,419 --> 00:04:28,669
bits of your project and it's pretty cool!
Once you're under Version Control, and you understand it.it's incredibly

00:04:28,669 --> 00:04:34,080
powerful, you won't feel right doing any project
without the help of Version Control, from

00:04:34,080 --> 00:04:37,940
that point. So, I'm just going to wait for
this to finish pushing to GitHub. There we

00:04:37,940 --> 00:04:43,800
go, that was good timing. And let's go back
to the website now, refresh this page, go

00:04:43,800 --> 00:04:48,789
into Twin Stick, and here it shows me the
current state. Now, this is at the end of

00:04:48,789 --> 00:04:53,370
the journey; there's three things I did, but
this is the current state alright, of the

00:04:53,370 --> 00:04:57,110
prototype branch. And that's cool, because
what anybody can do now at the bottom right,

00:04:57,110 --> 00:05:02,169
is they can download a .zip, so if you go
to a repository and you just download .zip,

00:05:02,169 --> 00:05:06,220
your downloading the latest version. If you
want to get a version at a previous point

00:05:06,220 --> 00:05:10,069
in time, you click into Commit, so I'll just
go back and show you, where that was here,

00:05:10,069 --> 00:05:13,990
three commits. And then, you choose your branch,
we only have a prototype at the moment, and

00:05:13,990 --> 00:05:17,729
then, you use this little guy here. Browse
the Repository at this point in time, and

00:05:17,729 --> 00:05:22,280
we can go back in time, and it looks very
similar, but it's how it was back at that

00:05:22,280 --> 00:05:25,550
commit and you just download it. So, that's
going to be your challenge now, I just want

00:05:25,550 --> 00:05:30,639
you to go and download what I've just done.
So, go to Complete Unity Developer, find the

00:05:30,639 --> 00:05:35,729
Twin Stick Repo, download the latest commit
from the pt branch, there's only a pt branch

00:05:35,729 --> 00:05:39,660
so just download it basically, use that Download
Zip button, and then, open the project in

00:05:39,660 --> 00:05:43,720
Unity and just make sure that it works. You'll
have a ball flying along a little kind of

00:05:43,720 --> 00:05:47,630
line, it'll be very simple. OK, pause the
video and make sure that you can download

00:05:47,630 --> 00:05:51,430
things from GitHub. Now, you don't even need
a GitHub account to do this, but if you've

00:05:51,430 --> 00:05:59,069
got one it will work just as well. Coolio!
Welcome back! So, this is how you would do

00:05:59,069 --> 00:06:03,639
it. I will assume you are logged into Git,
it'll be very similar whether you are or aren't.

00:06:03,639 --> 00:06:07,240
If you want the latest commit, then you just
go back to the main repo here, or you manually

00:06:07,240 --> 00:06:12,879
go and find the latest thing, but anyway all
you basically do is come here: CompleteUnityDeveloper/10-TwinStick,

00:06:12,879 --> 00:06:19,539
go to the bottom right, Download Zip. Download
a Zip file of the project, which is going

00:06:19,539 --> 00:06:25,009
to be quite big, and then, all you do is open
the .zip file. When I say open the .zip ,

00:06:25,009 --> 00:06:30,849
of course you're having to open the scene,
the Unity scene, so you'd go into Assets,

00:06:30,849 --> 00:06:36,330
and then, you will find a .unity file, like
this game.unity. Open that and the game will

00:06:36,330 --> 00:06:40,530
open. I'll let you open that. It's not a game
really, it's 5 minutes of me playing around

00:06:40,530 --> 00:06:45,009
just so that you've got something to download.
So, here it is, you would have a .zip file

00:06:45,009 --> 00:06:50,819
like that, it would unzip itself into a folder,
and then, inside that folder you'll see something

00:06:50,819 --> 00:06:57,889
like this. Go to Assets and then find a .unity
file, double click it, Unity will open up

00:06:57,889 --> 00:07:03,400
like so. it may have a funny code on the end,
that's just GitHub's way of tracking this

00:07:03,400 --> 00:07:09,479
particular snapshot, that's what that massive
commit idea is. And then Unity will take a moment

00:07:09,479 --> 00:07:13,909
to open. The reason it takes a while to open,
it's opening in the background now, is because

00:07:13,909 --> 00:07:20,110
we'll see in a future video how we exclude
the Library Folder, when we keep things under

00:07:20,110 --> 00:07:25,069
Version Control. The Library Folder in Unity
is a bit this guy here and the Project Temp

00:07:25,069 --> 00:07:29,949
Folder are like cache folders, they're things
that Unity can recreate, so I actually don't

00:07:29,949 --> 00:07:33,069
upload them. We keep it simple, and there
it is! That's what we've got! And if you hit

00:07:33,069 --> 00:07:37,039
play, you can probably use A and D just to
move this ball around, and I don't think it

00:07:37,039 --> 00:07:41,220
does much else. In fact, in this particular
version we haven't even got a cube on there,

00:07:41,220 --> 00:07:45,110
so very boring, but I just wanted to show
you that you can pick up a project at any

00:07:45,110 --> 00:07:50,400
state using GitHub. So, that's cool! So, moving
forward it's going to be a very useful thing

00:07:50,400 --> 00:07:55,080
to store your code in GitHub, so that if you
get in trouble you can go back, so that you

00:07:55,080 --> 00:08:00,669
can see you're own progress, so that you can
save the state of your game, as you go. If

00:08:00,669 --> 00:08:05,099
we look at Block Breaker here, you'll see
that here are all the videos for Blocker Breaker,

00:08:05,099 --> 00:08:10,129
but you'll also see that if I show all the
branches that we had a lot of fun prototyping,

00:08:10,129 --> 00:08:15,280
playing, fixing, and we will later be talking
to you about how you would use this in your

00:08:15,280 --> 00:08:19,110
game. You would come along with a game like
this, and you would go ooh, I'm going to create

00:08:19,110 --> 00:08:22,860
some sort of a side feature and then, what
you would do in making a game rather than

00:08:22,860 --> 00:08:27,879
a course, is you would merge this side feature
back into your game. We never merge in the

00:08:27,879 --> 00:08:31,389
course, because what's happening here is,
I'm doing something, doing something, doing

00:08:31,389 --> 00:08:34,990
something, then saying ah, I need to think
ahead, so I do some prototyping, but then

00:08:34,990 --> 00:08:40,000
of course, because you need to see the progress,
I need to go back here and start afresh. So,

00:08:40,000 --> 00:08:43,669
this is what is different about how we use
GitHub and when you see our repositories to

00:08:43,669 --> 00:08:48,670
how you would use it, is that we never merge
back in. All of our branches terminate like

00:08:48,670 --> 00:08:54,290
this, because we need to go back in time and
show you the process, whereas if it was a

00:08:54,290 --> 00:08:58,310
kind of normal piece of software, it would
look something more like this. Let me show

00:08:58,310 --> 00:09:02,850
you a piece of like commercial software, that
I've downloaded. If I can find something,

00:09:02,850 --> 00:09:07,470
software, here we go Subler, here you go.
So, these are merging back in here, this guy

00:09:07,470 --> 00:09:14,290
here, so if we look down further down the
repository somebody has come along and they've

00:09:14,290 --> 00:09:18,410
been in parallel building some side features,
and at some time they've decided to merge

00:09:18,410 --> 00:09:21,970
this back in, and say OK, let's take everything
we've developed plus all the things we've

00:09:21,970 --> 00:09:26,630
developed on the side and put them together.
And that's how you would normally use things,

00:09:26,630 --> 00:09:30,649
but we don't do it in a course like that,
as I said, because it just doesn't make sense.

00:09:30,649 --> 00:09:33,970
Once we've prototyped something, we actually
have to go back in time and show you what

00:09:33,970 --> 00:09:38,620
we did, so making a course is very different
and leads to all of these unattached ends.

00:09:38,620 --> 00:09:43,660
So, that's it! I hope you've got some sort
of overview of how this Version Control works.

00:09:43,660 --> 00:09:48,220
It's massively useful and you can even later,
when you go back to Dan Reilly's blog that

00:09:48,220 --> 00:09:55,779
I gave you that link to, you can even use
Version Control like this to host your game,

00:09:55,779 --> 00:10:00,250
as an alternative to bitbucket, if you wanted,
but we'll talk about that later in the section.

00:10:00,250 --> 00:10:03,760
Cool! So, good luck with GitHub, and I will
see you in the next video, where we'll show

00:10:03,760 --> 00:10:05,690
you how to setup this software, so you can
use it yourself.

