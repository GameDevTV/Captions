WEBVTT
Kind: captions
Language: en

00:00:04.860 --> 00:00:08.940
Time to start getting a little
animated lizard dude and our background

00:00:08.940 --> 00:00:14.440
level canvas talking to each other. So
previously we set the level canvas to a

00:00:14.440 --> 00:00:19.010
screen space overlay but we actually
want it to be a world space canvas

00:00:19.010 --> 00:00:23.200
because the grass is actually part of
the world space and we want them to

00:00:23.200 --> 00:00:27.300
integrate together so set your canvas
to world space and then what we're gonna

00:00:27.300 --> 00:00:32.809
work towards is a situation where each of
these square grass blocks are perfectly

00:00:32.809 --> 00:00:38.400
square have one world unit per block. and
a nice coordinate system where the

00:00:38.400 --> 00:00:46.340
bottom left grass square on an iPad is
at coordinate 1. 1 and then we go up in a

00:00:46.340 --> 00:00:51.590
standard coordinate system up to 9. 1 and 9. 5
up here. That's what we're working towards.

00:00:51.590 --> 00:00:56.180
The way we're gonna do it is we're gonna change
to a world space canvas as we just did;

00:00:56.180 --> 00:01:01.800
adjust the grass tiling. add a temporary
core game panel; translate and scale the

00:01:01.800 --> 00:01:06.799
whole level canvas and then adjust and
prefab so that it's alright fo the future. So

00:01:06.799 --> 00:01:11.140
what are we gonna do? How are we gonna get
this grass tiling exactly right? We did it

00:01:11.140 --> 00:01:15.520
roughly right before. now let's get it
exactly right. So what we gonna do is

00:01:15.520 --> 00:01:21.540
take a look at the grass and then ask
yourself the question well how many

00:01:21.540 --> 00:01:25.369
times do we want this to repeat? Well
take a look at this slide. so according to

00:01:25.369 --> 00:01:31.330
our GDD we want nine columns. or nine
tiles wide as an absolute minimum

00:01:31.330 --> 00:01:38.610
and our minimum aspect ratio is 4:3. So how
many would we have when we have a 16:9

00:01:38.610 --> 00:01:44.650
aspect ratio screen and we've got more
width? Well 9/3 times 4. we would have 12

00:01:44.650 --> 00:01:49.320
wide. So we'd have an extra 3 or an extra one
and a half tiles on either side of the

00:01:49.320 --> 00:01:54.409
screen when we have that extra width. Now
there are two grass squares per tile. let's

00:01:54.409 --> 00:01:59.420
just look at that. make sure you're clear
why. Here's our grass tile on my screen

00:01:59.420 --> 00:02:03.979
and if you look at it - it's a bit small now. just
look at it in unity - have a look. there's one

00:02:03.979 --> 00:02:08.929
square but either side of that square
there's half a square. so actually in

00:02:08.929 --> 00:02:13.200
total it's two squares wide.

00:02:13.200 --> 00:02:20.110
therefore we want the width the. UVW
value to be 12/2 that six tilles wide.

00:02:20.110 --> 00:02:27.739
6 tiles gives us 12 squares. OK so
let's set that first. go to your grass and

00:02:27.739 --> 00:02:31.980
look at your W and it actually is
correct. it's 6. any more than six and we

00:02:31.980 --> 00:02:37.340
would have too many tiles and any less and
we would have too few so six is good but what we

00:02:37.340 --> 00:02:41.700
never did before was actually make sure
that these things were square. So let's

00:02:41.700 --> 00:02:45.459
have a think about how we're gonna get our
tiles exactly right and perfectly square.

00:02:45.459 --> 00:02:51.319
Remember that the tile that we have provided
you. the tile texture. consists of two

00:02:51.319 --> 00:02:55.519
squares and if you look carefully on the
left hand side of this slide you'll see

00:02:55.519 --> 00:02:59.579
that there's one grass square in the
middle of the tile and then exactly half

00:02:59.579 --> 00:03:04.660
a grass square either side and the same
thing happens vertically. so one tile as in

00:03:04.660 --> 00:03:09.989
texture tile is two grass squares. So starting
with a. we know from the definition of

00:03:09.989 --> 00:03:15.489
our game we want nine grass squares wide
in 4:3. that's the minimum. the narrowest

00:03:15.489 --> 00:03:20.370
aspect ratio for example an iPad. So
moving on to b. if we divide that nine

00:03:20.370 --> 00:03:24.739
squares by four. which is the width ratio.
and then multiply out by three. the height

00:03:24.739 --> 00:03:30.489
ratio we find out that we have
6.75 grass squares tall and that's fine. we

00:03:30.489 --> 00:03:33.600
only need five for our play space and that
leaves a little bit of room for our user

00:03:33.600 --> 00:03:40.930
interface. So of course in 16:9. moving on
to Part C. we still have 6.75 squares

00:03:40.930 --> 00:03:45.109
so the only thing that changes is the
number of squares wide. so casting your eye

00:03:45.109 --> 00:03:51.190
down to point D we have to do the same
aspect conversion again. 6.75 squares

00:03:51.190 --> 00:03:57.060
tall. divided by 9. the height ratio times sixteen.
the width ratio tells us that we end up with

00:03:57.060 --> 00:04:03.410
twelve squares wide in 16:9. so basically
going from nine squares to 12 squares

00:04:03.410 --> 00:04:07.510
depending on our device. In the widest
device like an iPhone 5 we would have 12

00:04:07.510 --> 00:04:11.340
squares wide and in the narrowest device
in terms of aspect we would have nine

00:04:11.340 --> 00:04:17.049
squares wide. and in all cases we would have a
fixed height of 6.75. So there are

00:04:17.049 --> 00:04:21.790
squares wide in both aspects it's 6.75
grass squares tall.

00:04:21.790 --> 00:04:26.750
remembering that there are two grass
quest per tile that gives us a W value

00:04:26.750 --> 00:04:35.330
a width of six tiles wide and a height of
6.75 over two which is 3.375 tiles high.

00:04:35.330 --> 00:04:38.920
If you want to find out more about UV mapping then
there's the Wikipedia article there. it

00:04:38.920 --> 00:04:49.600
basically is talking about how we map
our image texture onto our play space.

00:04:49.600 --> 00:04:54.060
So a minor tweak then. the result of all of
that is that the height of the UV rect

00:04:54.060 --> 00:05:00.900
wants to be 3.375 I wanted to show you the logic
for that. Now all these squares are well.

00:05:00.900 --> 00:05:04.390
perfectly square which is great alright.
Now I want to show you something really

00:05:04.390 --> 00:05:07.930
quickly. you might wonder what this set
native size button is. Well hopefully your

00:05:07.930 --> 00:05:13.270
grass is set to 1600 900 pixels that's
our target resolution if we click Set

00:05:13.270 --> 00:05:18.080
native size its gonna get a whole lot
bigger because our grass tiles are

00:05:18.080 --> 00:05:24.090
actually 512 by 512 that's not the size
of the image on our desk the size of the

00:05:24.090 --> 00:05:29.210
image on the disc that we provided is
actually bigger it's 600 by 599 but

00:05:29.210 --> 00:05:34.830
Unity has snapped that to the nearest what we
call power of 2. and it's snapped it to 512 by

00:05:34.830 --> 00:05:39.110
512 the reason for that is that it can do
something called molto in parvum. which is

00:05:39.110 --> 00:05:42.630
its ability to quickly scale down the
texture as we look at it from a further

00:05:42.630 --> 00:05:50.000
distance very fast like that so we have
more than enough pixels but thats fine

00:05:50.000 --> 00:05:52.580
there's no harm in having more we're not
gonna cause a significant performance

00:05:52.580 --> 00:05:58.080
problem so let's have 1600 by 900.
more pixels than we need we've

00:05:58.080 --> 00:06:03.910
got six by 3.375 so the squares. the
grass squares are perfectly square now. Great.

00:06:03.910 --> 00:06:08.960
so we're currently focusing on getting our
grass right. Back to the slide deck for

00:06:08.960 --> 00:06:09.650
guidance.

00:06:09.650 --> 00:06:16.780
Next adjust the temporary... add a temporary
core game panel so the core game is

00:06:16.780 --> 00:06:22.360
going to be in the middle of the screen
so translating 1600 pixels wide to 4:3 you

00:06:22.360 --> 00:06:28.940
get 1.200 pixels wide. That should cover
nine columns per the GDD and five rows

00:06:28.940 --> 00:06:33.610
high leaving some space. Centre it on the
screen and this will be our world space

00:06:33.610 --> 00:06:37.570
coordinate system. What the hell does
all that mean? Let me show you. Add yourself a

00:06:37.570 --> 00:06:43.900
GameObject UI panel. call it core game.
This is just for you to see where your

00:06:43.900 --> 00:06:49.520
call game focuses fantastic. I'm going to reset its
transform altogether and then make

00:06:49.520 --> 00:06:56.540
it's width 1200. so now we need to work
out the height of this guy so firstly let's

00:06:56.540 --> 00:07:03.090
centre him. position 0 X. position 0 Y. and
then say well how do we translate 1200

00:07:03.090 --> 00:07:07.780
width to height when we're going through the 16:9
aspect ratio? It must have the same aspect

00:07:07.780 --> 00:07:14.490
ratio as the screen this little bit. Well
we go 1200 divided by sixteen. times nine

00:07:14.490 --> 00:07:21.000
and we get 675 high. All right we're well
on the way. look our core game area is looking

00:07:21.000 --> 00:07:27.410
about right apart from we have about 5 -
1. 2. 3. 4. 5 - but it's not mapped quite right. so

00:07:27.410 --> 00:07:32.160
how do we change the mapping? Well that's
back at the grass. and then the y value

00:07:32.160 --> 00:07:37.430
of the grass needs to shift until it
lines up perfectly. See that? We just need

00:07:37.430 --> 00:07:42.630
to move the y value of the grass until
our core game area - there we go. the bottom and

00:07:42.630 --> 00:07:49.330
the top of the core game area just need
to line up nicely. Great. so now what we

00:07:49.330 --> 00:07:53.130
have is we have a kind of iPad core
gameplay area

00:07:53.130 --> 00:07:57.100
showing here under core game; and
that's where all the action's going to

00:07:57.100 --> 00:08:02.140
happen; these are our lanes and our
columns. Now over in the game tab

00:08:02.140 --> 00:08:06.330
hopefully your build settings are webplayer by
the way. if they're not web player you'll

00:08:06.330 --> 00:08:09.530
have a different set of aspect ratios
here. you change to webplayer under

00:08:09.530 --> 00:08:14.590
build settings. web player. switch
platform if you need to. So let's just take a look. we

00:08:14.590 --> 00:08:19.310
can choose between 4:3 and 16:9. that's the
whole point. We want to be able to play the

00:08:19.310 --> 00:08:25.830
game in this outer white box here. this
one that's showing. this level canvas.

00:08:25.830 --> 00:08:30.820
or all the way out to the full width. the
difference being iPhone to iPad and

00:08:30.820 --> 00:08:35.650
everything in between including all the
Android devices. Fantastic so we have

00:08:35.650 --> 00:08:41.690
that core game area showing there and
that works absolutely fine. what we

00:08:41.690 --> 00:08:46.250
finally need to do is translate and scale
whole level canvas so that we get a nice

00:08:46.250 --> 00:08:50.320
coordinate system. well 1 grass square.  let's
make it one metre in the world. that

00:08:50.320 --> 00:08:54.320
seems about right and let's call
one metre one world unit. Well if the

00:08:54.320 --> 00:08:59.560
width of the whole world is 1600 pixels
and thats 12 units wide. this entire width

00:08:59.560 --> 00:09:06.030
here is 12 wide.  9 and then one and a half on
either end gives you 12. then the pixels per

00:09:06.030 --> 00:09:12.270
world unit we're gonna be using for this
game is 133.33.... OK so to scale your canvas

00:09:12.270 --> 00:09:17.900
it needs to be a tiny fraction of
its current size right down to 0.0075. so scale

00:09:17.900 --> 00:09:24.040
the entire level canvas. here once it's
width and height are right. first get its

00:09:24.040 --> 00:09:31.040
width to 1600 and its height to 900 so it's the same
size as the grass. now scale it down to 0.0075

00:09:31.040 --> 00:09:39.980
in X and Y and it doesn't need any Z scale. Now let's
go into a level canvas. Still

00:09:39.980 --> 00:09:43.660
looks the same but look at our lizard
now. Let's find our lizard. reset his

00:09:43.660 --> 00:09:52.090
transform. go over to the lizard's
sprite sheet here and just set 133.33333

00:09:52.090 --> 00:09:57.660
just a few threes pixels per unit and
apply that. Now the lizard's not visible. why's

00:09:57.660 --> 00:10:05.590
the lizard not visible? Change the order
in layer of the lizard to 1 and if you

00:10:05.590 --> 00:10:09.010
still can't see him it's because your
lizard's in one part of the scene and

00:10:09.010 --> 00:10:12.550
your level canvas is in the other you
see the position of the level canvas? We want 0. 0.

00:10:12.550 --> 00:10:18.420
Now we have the lizard and the
camera all in the middle of the scene

00:10:18.420 --> 00:10:23.290
and crucially if we grab the lizard and
move him around you'll notice that when

00:10:23.290 --> 00:10:28.370
he's one unit to the right he's in that
square... 2. 3. 4 get it? so one world unit

00:10:28.370 --> 00:10:33.030
now is precisely one grass square. Worth all the effort.

00:10:33.030 --> 00:10:36.700
One more thing. I want the origin of the
game space to be here where my mouse

00:10:36.700 --> 00:10:40.840
is. just to the left of the word
lose condition. so that this point here

00:10:40.840 --> 00:10:46.170
is 1.1 1.2 1.3 et cetera. So how am I gonna
make that happen? Well I go to the level

00:10:46.170 --> 00:10:51.660
canvas and I just move it. knowing that
this camera is at the

00:10:51.660 --> 00:10:56.780
origin you could also put the lizard at
the origin if you wanted. So you get to your

00:10:56.780 --> 00:11:02.760
level canvas. you drag it. you can see that
is going to have to be five World units in X

00:11:02.760 --> 00:11:09.470
and then you drag the Y and you can see that's
going to need to be three units in Y. So. if

00:11:09.470 --> 00:11:14.800
your level canvas is sitting at 5. 3 1600
by 900 is all correct. correct scale it's a

00:11:14.800 --> 00:11:19.440
world space render mode. we'll worry about the
camera in a second. we're nearly there

00:11:19.440 --> 00:11:23.000
let's just take a look. let's put our
lizard... say we want to put our lizard here

00:11:23.000 --> 00:11:30.480
where is this? Well this is at position 1. 2. 3. 4
by 1. let's see if that works.

00:11:30.480 --> 00:11:35.460
position 4 in X. 1 in Y. great. How about
if I want to put him at the top right? Well that would

00:11:35.460 --> 00:11:43.030
be 9 by 5. right? So we have
a coordinate system that's super simple

00:11:43.030 --> 00:11:46.370
when we come to coding up positions of
enemies and everything later isn't going

00:11:46.370 --> 00:11:49.840
to be easy if we just say we want it
at position 9. 5. What would the middle of the

00:11:49.840 --> 00:11:57.750
game space be? What you set you co-ordinates to?
for the middle of the game space? 5. 3 yeah you

00:11:57.750 --> 00:11:58.190
get it

00:11:58.190 --> 00:12:01.190
ok that's really nice. so here's our
origin. that's what we've decided.

00:12:01.190 --> 00:12:05.900
Fantastic so the final thing we need to
do then is to get the camera working

00:12:05.900 --> 00:12:10.420
right. where is this damn camera now? It's all over
the place. if we're go into

00:12:10.420 --> 00:12:15.340
the 3d mode the camera's an orthographic
camera on the wrong side of the play space.

00:12:15.340 --> 00:12:18.720
well it's actually the right side but it's just not right

00:12:18.720 --> 00:12:22.910
So let's get this camera right; firstly
let's give it a position in the negative

00:12:22.910 --> 00:12:30.010
Z direction that's a minus ten 10 metres.
10 world units away like so. Fine. It

00:12:30.010 --> 00:12:35.400
can still be an orthographic camera. how
big should it be? Well that's a good

00:12:35.400 --> 00:12:36.420
question;

00:12:36.420 --> 00:12:40.620
the size; the height. we've covered this
before. but half the vertical height in

00:12:40.620 --> 00:12:41.420
world units.

00:12:41.420 --> 00:12:47.610
So what is the vertical height of our
space 1. 2. 3. 4. 5. 6. 7 world units so we want a

00:12:47.610 --> 00:12:53.840
height of 3.5 OK is that working? Not at
all at the moment. so you need to

00:12:53.840 --> 00:12:58.880
continue to adjust your camera until we
get it in exactly the right place . So we can go

00:12:58.880 --> 00:13:03.030
back to 2D. Now the problem with the
camera now it's not sitting over the

00:13:03.030 --> 00:13:06.700
middle square where the lizard is. where's
the lizard at 5. 3 so the camera wants to

00:13:06.700 --> 00:13:14.290
be over 5. 3. Now the camera's bang over
the middle of the game space. so the easiest way

00:13:14.290 --> 00:13:19.470
to get this camera size exactly right
is to understand that the size is half

00:13:19.470 --> 00:13:24.630
the vertical height. so what is the
height of our game space? Well it's going

00:13:24.630 --> 00:13:32.240
to be 12 world units wide. divided by
sixteen. times nine get you 6.75 world

00:13:32.240 --> 00:13:36.910
units high in total and we have about six
point seven five grass squares divide that by

00:13:36.910 --> 00:13:44.140
two and you get 3.375. That is your correct vertical size
of your camera. There it is look. perfect

00:13:44.140 --> 00:13:49.210
Now over in game if we're set to 4:3 then our
camera is perfectly showing what the

00:13:49.210 --> 00:13:52.930
iPad would show and as we go up through
the aspect ratios look what happens we

00:13:52.930 --> 00:13:58.680
just reveal more grass to the sides...
that's really nice. it's exactly what we

00:13:58.680 --> 00:14:02.000
want. Very graceful changing resolution right?

00:14:02.000 --> 00:14:07.840
Well aspect ratio perfect! So our camera's good to
go now. let's now attach this camera to

00:14:07.840 --> 00:14:11.990
the... well let's prefab the camera first
actually cuz we've got a good camera

00:14:11.990 --> 00:14:17.930
Call it game camera rather than main camera .
prefab it. Now that it's prefabbed. let's

00:14:17.930 --> 00:14:23.480
drag it into the event camera and the
point of that is that now when we click

00:14:23.480 --> 00:14:28.020
lose or win condition the UI knows where
we're clicking. it understands how to interpret

00:14:28.020 --> 00:14:32.660
our position in the game world. Now that
our level canvas is good let's re-

00:14:32.660 --> 00:14:39.080
prefab the whole level canvas ok? So you
can drag it down here and it'll create

00:14:39.080 --> 00:14:42.760
you a new level canvas prefab. let's just
do that completely. so here's a brand new

00:14:42.760 --> 00:14:47.780
level canvas prefab. Final thing to do is
good each of your scenes. starting at level one. each of your

00:14:47.780 --> 00:14:52.010
game scenes and make sure that you've
got the game camera in it and the

00:14:52.010 --> 00:14:52.510
level canvas.

00:14:52.510 --> 00:14:55.780
Obviously everyone does cause we've been
working on it. level 2 well just

00:14:55.780 --> 00:15:01.610
delete the main camera and the level canvas
and just drop them back in from the

00:15:01.610 --> 00:15:02.430
prefab

00:15:02.430 --> 00:15:07.610
so level two is set up and that's the
great thing about the prefabs now that

00:15:07.610 --> 00:15:11.470
we have both the camera and the level
canvas prefabs any changes we make to

00:15:11.470 --> 00:15:17.490
those later will come across. so put your level canvas and your camera prefab in every level. Awesome. so we have multiple

00:15:17.490 --> 00:15:19.290
levels all set up properly

00:15:19.290 --> 00:15:25.090
all gonna be running beautifully on
iPhone and iPad and Android devices so

00:15:25.090 --> 00:15:29.890
congratulations on getting this far and
hopefully you understand a lot more now

00:15:29.890 --> 00:15:35.100
about how you choose your resolutions
and pixels for these world spaces. Just

00:15:35.100 --> 00:15:39.490
as a quick note by the way for you. one
centimeter is basically one pixel if you

00:15:39.490 --> 00:15:47.670
look at your guy here he has a pixel per
unit of 133. well he's about 1.3 meters

00:15:47.670 --> 00:15:51.760
high that seems perfectly reasonable. so
there you go. Well done on getting this far and I

00:15:51.760 --> 00:15:52.510
shall see you soon.

