1
00:00:00,000 --> 00:00:06,666
Hey! In this video we're going to learn a
lot more about these wonderful if statement

2
00:00:06,666 --> 00:00:11,866
things, so let's get on and do it by example.
Firstly, I want to explain a little bit about

3
00:00:11,866 --> 00:00:16,699
indentation. So, this Start function, every
single statement within the Start function,

4
00:00:16,700 --> 00:00:21,566
is indented by the same amount. It's four
spaces but actually don't use spaces please, use

5
00:00:21,566 --> 00:00:26,832
a tab. So, there's a tab, it just happens
to be four characters in front of absolutely

6
00:00:26,833 --> 00:00:31,066
everything, so that indicates that all these
things are inside the Start function. So,

7
00:00:31,066 --> 00:00:34,199
let's look at that Update function. In the
Update function, all of these statements are

8
00:00:34,200 --> 00:00:38,900
at that level of indentation as well. See
how easy it is for the eye to follow. Similarly

9
00:00:38,900 --> 00:00:43,733
inside the if statement, all of its statements,
that it's going to run inside the code block

10
00:00:43,733 --> 00:00:47,499
inside the curly brackets, will also be at
this level of indentation.

11
00:00:47,500 --> 00:00:51,500
The beady-eyed among you may have noticed that it doesn't matter whether you put the curly brackets

12
00:00:51,500 --> 00:00:55,500
here or not, but please DO continue to use to use them. The reason

13
00:00:55,500 --> 00:00:59,500
is that if you don't and you accidentally add a 2nd statement in

14
00:00:59,500 --> 00:01:03,500
this if statement perhaps under the word print("Up arrow pressed");

15
00:01:03,500 --> 00:01:07,500
if you add another line of code there without the curly braces, that won't be executed

16
00:01:07,500 --> 00:01:11,500
which is very confusing. So keep the curly braces in. They cause something called a 

17
00:01:11,500 --> 00:01:14,766
code block, and they keep all the statements inside your if statement together.

18
00:01:14,766 --> 00:01:23,299
So, to give you
an example, I'm going to print and then ("Example");
OK, now because I want to be consistent I'm

19
00:01:23,300 --> 00:01:27,033
going to take that space away, so let's just
save that. What's it going to give when I

20
00:01:27,033 --> 00:01:31,899
push key down? Think about what it's going
to give, in the Console. OK, let's have a

21
00:01:31,900 --> 00:01:35,933
look and see what happens. When I push key
down, what do we get? Down arrow pressed.

22
00:01:35,933 --> 00:01:40,966
When I push key up, what do I get? Up arrow
pressed and Example. I hope that makes sense,

23
00:01:40,966 --> 00:01:43,866
if you're in Collapse Mode you're going to
get something slightly different, when you

24
00:01:43,866 --> 00:01:47,799
continue to press keys, because what it's
going to do is it's going to just layer the

25
00:01:47,800 --> 00:01:51,266
same things on top of each other, so every
time it logs the same thing it just increments

26
00:01:51,266 --> 00:01:57,899
the number, as previously explained. Alright
fantastic! So, that explains what indentation

27
00:01:57,900 --> 00:02:02,333
does. Any other statements we put inside this
if statement, we would put at this level of

28
00:02:02,333 --> 00:02:06,666
indentation. Cool! I'm going to get rid of
that example line now for you. Alright, so

29
00:02:06,666 --> 00:02:11,566
here's a simple challenge for you then. We
want to add a third if statement, which responds

30
00:02:11,566 --> 00:02:17,399
to the Enter key and logs the words I "Won!"
to the console. Third if statement, responding

31
00:02:17,400 --> 00:02:24,233
to the Enter key and logs the words "I Won!"
Go ahead and do that now please. OK, so this

32
00:02:24,233 --> 00:02:30,299
is how I'm doing it, I'm copying what's there.
I am going to guess that it's KeyCode.Enter.

33
00:02:30,300 --> 00:02:37,766
I don't think it is, because it's come up
in red, so I'm going to try one other thing,

34
00:02:37,766 --> 00:02:41,499
by hacking away until I go and look at the
docs. I'm going to try ("Enter") like that.

35
00:02:41,500 --> 00:02:45,933
It's looking promising, let's try it, because
I haven't got anything gone red. OK, so I

36
00:02:45,933 --> 00:02:51,699
just want it to say "I won". OK, now let's
save and try it, see if we've got the right

37
00:02:51,700 --> 00:03:00,066
key code. Play...Input name key code. What's
it saying? Let's pause, click on the error,

38
00:03:00,066 --> 00:03:06,599
and you can expand out the window if you want.
Key Enter is unknown. OK, it doesn't understand

39
00:03:06,600 --> 00:03:10,066
Enter, so we've got to go and find out what
the Enter key code is. So, there are a few

40
00:03:10,066 --> 00:03:13,966
ways of doing it. We may as well stay in the
safety of the Unity docs for a minute, so

41
00:03:13,966 --> 00:03:18,332
I'm going to go Input.GetKeyDown. I'm going
to go Command and Apostrophe or Control and

42
00:03:18,333 --> 00:03:24,366
Apostrophe on a PC. It's just the way of looking
up the docs for the currently selected word.

43
00:03:24,366 --> 00:03:30,532
Go into Input.GetKeyDown and let's see if
we can find ourselves a list of all of the

44
00:03:30,533 --> 00:03:35,399
key codes. Here we go, key code here. Now,
do we have Enter somewhere? I'm going to do

45
00:03:35,400 --> 00:03:43,433
an in page search, in my browser, for keypad
Enter, that's possible we could use Keypad

46
00:03:43,433 --> 00:03:47,099
Enter. I think I really mean Return, so you've
got to be careful about your keyboard, you've

47
00:03:47,100 --> 00:03:51,633
got Enter and Return, and they're two different
keys. I really mean Return, so I'm going to

48
00:03:51,633 --> 00:03:56,066
use Return, and here you go. And what is that?
It's KeyCode.Return. Alright, so that's a

49
00:03:56,066 --> 00:03:59,599
typical thing you're going to go off and do,
is have a little nosy and find out what you

50
00:03:59,600 --> 00:04:03,000
should be using, and I think what we should
be using is KeyCode.Return, like that. So,

51
00:04:03,000 --> 00:04:11,733
let's just save and test. Now, if I push Enter
or Return, it says "I won!". Perfect! And

52
00:04:11,733 --> 00:04:15,733
then, it keeps logging "I won!", every time
I hit it. Well, that's great! Alright, so

53
00:04:15,733 --> 00:04:20,499
we can go up and down. Well, if I'm click
in the Game Window, remember. Up Arrow Pressed,

54
00:04:20,500 --> 00:04:26,100
Down Arrow Pressed, "I Won!" if you hit Return.
Good, good, good, good! OK, so the only other

55
00:04:26,100 --> 00:04:31,966
thing that's not fantastic here is that, if
I was to push two keys at the same time, like

56
00:04:31,966 --> 00:04:36,166
up and down, look what it does. It logs both
Up and Down, at the same time or Down and

57
00:04:36,166 --> 00:04:40,432
Return, and actually I want it to only log
one key. So, the way we're going to do that

58
00:04:40,433 --> 00:04:45,066
is use something called an else if. So currently
we're doing this if, and then, it immediately

59
00:04:45,066 --> 00:04:50,232
checks the next condition and if the Down
Key, the Up Arrow Key rather is still down

60
00:04:50,233 --> 00:04:53,499
when I push the Down Arrow Key, then it's
going to do both of those things. I want it

61
00:04:53,500 --> 00:04:57,666
to exclusively check to see which of the keys
is pressed, not all of them, and the way we

62
00:04:57,666 --> 00:05:06,766
do this is we just say I put else here. And
then, I delete back, so that it says else

63
00:05:06,766 --> 00:05:13,932
if like that. OK, that's the format. Let's
just do it again, else OK, and then, the same

64
00:05:13,933 --> 00:05:20,499
for the Return Key. Now, it's only very subtly
different behavior. Let's save and look at

65
00:05:20,500 --> 00:05:24,733
it, it should still operate in the same way,
Up and Down and Return, but if you do Up and

66
00:05:24,733 --> 00:05:29,066
Down at the same time, it'll just pick which
ever one you pushed first, most of the time.

67
00:05:29,066 --> 00:05:33,166
It depends how fast the frame rate is, actually.
It may actually... your key may be down for

68
00:05:33,166 --> 00:05:38,232
two frames, in which case it is actually going
to still log both, but generally you'll get

69
00:05:38,233 --> 00:05:43,233
one or the other. OK, so that's just an introduction
really, the main purpose of this is an introduction

70
00:05:43,233 --> 00:05:47,533
to the else if statement. So, that's it now,
hopefully you understand a lot more about

71
00:05:47,533 --> 00:05:50,433
if statements, not a huge amount more you
ever need to know about them, by the way.

72
00:05:50,433 --> 00:05:52,566
So, congratulations! See you soon!

