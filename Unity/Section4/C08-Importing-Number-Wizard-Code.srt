
1
00:00:03,000 --> 00:00:06,000
Hello, and welcome

2
00:00:06,000 --> 00:00:09,000
back! In this video, we're going to be importing our Number Wizard

3
00:00:09,000 --> 00:00:12,000
code and turning our existing Number Wizard frame-

4
00:00:12,000 --> 00:00:15,000
work into an actual Number Wizard game, because right now it has not behavior,

5
00:00:15,000 --> 00:00:18,000
we can just move between scenes, and that's not sufficient to make a

6
00:00:18,000 --> 00:00:21,000
game. So, we're going to add some code from our previous Number Wizard

7
00:00:21,000 --> 00:00:24,000
game, and we're going to add some win and lose conditions. So,

8
00:00:24,000 --> 00:00:27,000
let's get started. So, I'm

9
00:00:27,000 --> 00:00:30,000
here in my Unity Editor, I'm on the Game Scene.

10
00:00:30,000 --> 00:00:33,000
I've got the Game Scene selected. There's currently nothing but the

11
00:00:33,000 --> 00:00:36,000
Lose and Win stuff and the Level Manager in there.

12
00:00:36,000 --> 00:00:39,000
What I want to do is I want to add my code from my previous

13
00:00:39,000 --> 00:00:42,000
game, so how do I do that. Well, let's take a look at

14
00:00:42,000 --> 00:00:45,000
our Finder. We've got the Finder right here, and that's your

15
00:00:45,000 --> 00:00:48,000
file browser, and I'm now browsing here in my

16
00:00:48,000 --> 00:00:51,000
previous Number Wizard game. And you have a scripts directory,

17
00:00:51,000 --> 00:00:54,000
and inside of there, you have a Number Wizard

18
00:00:54,000 --> 00:00:57,000
script, in there. So, what I want to do is, I want to copy

19
00:00:57,000 --> 00:01:00,000
this script across, into my new game, so I'm going to click

20
00:01:00,000 --> 00:01:03,000
and drag it into my new game in

21
00:01:03,000 --> 00:01:06,000
the Project Pane, at the bottom. And you should

22
00:01:06,000 --> 00:01:09,000
see it come up in the Assets, and I've now got a Number Wizards

23
00:01:09,000 --> 00:01:12,000
script, with an S, so I'm going to change that

24
00:01:12,000 --> 00:01:15,000
S. It's annoying me a little bit, so I'm going to just

25
00:01:15,000 --> 00:01:18,000
change it right now, take out the last S, and

26
00:01:18,000 --> 00:01:21,000
now, it's called Number Wizard. Now, I'm going to

27
00:01:21,000 --> 00:01:24,000
need to change the script, because if we take a look at the script right now

28
00:01:24,000 --> 00:01:27,000
it's really the old code, and that's not going to

29
00:01:27,000 --> 00:01:30,000
be good enough for this game, we need to change it to reflect what we have now.

30
00:01:30,000 --> 00:01:33,000
Also, you'll notice that my Number Wizard script file

31
00:01:33,000 --> 00:01:36,000
is NumberWizard and my class is NumberWizards, with an

32
00:01:36,000 --> 00:01:39,000
S, and that cannot be done. You can't have the file

33
00:01:39,000 --> 00:01:42,000
name and the class being different, so I'm going to change the class

34
00:01:42,000 --> 00:01:45,000
to reflect the file name and save straight

35
00:01:45,000 --> 00:01:48,000
away. So cool! So, this is our old code

36
00:01:48,000 --> 00:01:51,000
and fundamentally, what we want to do is change the

37
00:01:51,000 --> 00:01:54,000
keyboard input we have, in the updates right here, so whenever

38
00:01:54,000 --> 00:01:57,000
we press an Up, Down, and Return key, instead of doing

39
00:01:57,000 --> 00:02:00,000
that, we want to change that to button presses, which means we need

40
00:02:00,000 --> 00:02:03,000
to publicly expose some methods, we're

41
00:02:03,000 --> 00:02:06,000
going to be doing that now, to allow buttons

42
00:02:06,000 --> 00:02:09,000
to call the methods, whenever they're clicked. So, that's what we're going

43
00:02:09,000 --> 00:02:12,000
to do, and really the ones we're going to start with, we want

44
00:02:12,000 --> 00:02:15,000
the Up, so guess higher guess lower

45
00:02:15,000 --> 00:02:18,000
are going to be our first two methods and they're going to replace the Up

46
00:02:18,000 --> 00:02:21,000
and Down Arrow Keys. So, let's get started. So firstly,

47
00:02:21,000 --> 00:02:24,000
these methods should be public, because they're going to be

48
00:02:24,000 --> 00:02:27,000
accessed outside of Number Wizard. So,

49
00:02:27,000 --> 00:02:30,000
I'm going to have a public method. It's not going to return any value, so it's going

50
00:02:30,000 --> 00:02:33,000
to be void, and then, it's going to be guess

51
00:02:33,000 --> 00:02:36,000
Higher. So, that means that's the equivalent

52
00:02:36,000 --> 00:02:39,000
of pressing the Up Arrow, so whatever this method is called, I want to

53
00:02:39,000 --> 00:02:42,000
do exactly the same thing I did before, when I was pressing the Up Arrow.

54
00:02:42,000 --> 00:02:45,000
So, I can just copy and paste this code, right

55
00:02:45,000 --> 00:02:48,000
here, so I'm copying this code. I'm putting it and moving it into

56
00:02:48,000 --> 00:02:51,000
my guess higher function.

57
00:02:51,000 --> 00:02:54,000
I really no longer need this GetkeyDown,

58
00:02:54,000 --> 00:02:57,000
I can get rid of that. I'm no longer driving my game

59
00:02:57,000 --> 00:03:00,000
using keys. Now, feel free to keep it, if you want,

60
00:03:00,000 --> 00:03:03,000
but if you're going to keep it, instead of having this

61
00:03:03,000 --> 00:03:06,000
code duplicated in two places, make sure that this

62
00:03:06,000 --> 00:03:09,000
is GuessHigher instead. So, you're going

63
00:03:09,000 --> 00:03:12,000
to do GuessHigher.

64
00:03:12,000 --> 00:03:15,000
[Laughs] I cannot

65
00:03:15,000 --> 00:03:18,000
type today, so it's going to be GuessHigher ();

66
00:03:18,000 --> 00:03:21,000
instead, and you'll notice that, that's actually equivalent code. There's

67
00:03:21,000 --> 00:03:24,000
no difference here, except that we have packaged all

68
00:03:24,000 --> 00:03:27,000
the things we do, whenever we guess higher, into a method that

69
00:03:27,000 --> 00:03:30,000
we're calling. Now, I'm just going to remove it, because I don't need it, but feel free

70
00:03:30,000 --> 00:03:33,000
to keep it in your code for debugging, if you want.

71
00:03:33,000 --> 00:03:36,000
So, I'm going to do the same thing here,Â I'm going to take this out and move it

72
00:03:36,000 --> 00:03:39,000
into a new function called, Guess

73
00:03:39,000 --> 00:03:42,000
Lower. Whenever we press the Down Arrow, that's kind of what we're talking about

74
00:03:42,000 --> 00:03:45,000
here. So, I'm going to go void, and that's public

75
00:03:45,000 --> 00:03:48,000
void rather, so public void

76
00:03:48,000 --> 00:03:51,000
GuessLower(){}

77
00:03:51,000 --> 00:03:54,000
[Typing Sound]

78
00:03:54,000 --> 00:03:57,000
Cool! So, now I can put the code in, and that will do exactly

79
00:03:57,000 --> 00:04:00,000
the same thing as before, except now, it's packaged in a

80
00:04:00,000 --> 00:04:03,000
tidy function instead. And I can remove that stuff

81
00:04:03,000 --> 00:04:06,000
to. Cool! And finally it comes down

82
00:04:06,000 --> 00:04:09,000
to the case of what do we do when

83
00:04:09,000 --> 00:04:12,000
we win, when the player

84
00:04:12,000 --> 00:04:15,000
successfully

85
00:04:15,000 --> 00:04:18,000
or rather the computer successfully picks

86
00:04:18,000 --> 00:04:21,000
a number. When the player actually looks at the computer,

87
00:04:21,000 --> 00:04:24,000
finds an number that the player guessed,

88
00:04:24,000 --> 00:04:27,000
what happens then? Well, that will

89
00:04:27,000 --> 00:04:30,000
not be handled here. In fact, it will be handled by pressing the

90
00:04:30,000 --> 00:04:33,000
Correct Button, so whenever we say correct, the button will then

91
00:04:33,000 --> 00:04:36,000
then change the scene to the computer winning

92
00:04:36,000 --> 00:04:39,000
and the player losing. So, that's what happens, so we don't need

93
00:04:39,000 --> 00:04:42,000
to handle it in the Number Wizard anymore, because we're going to be handling it

94
00:04:42,000 --> 00:04:45,000
with our scene flow instead, so we can remove

95
00:04:45,000 --> 00:04:48,000
this stuff completely, because it's not going to be handled there

96
00:04:48,000 --> 00:04:51,000
at all. That leaves our update function empty, and I don't

97
00:04:51,000 --> 00:04:54,000
like empty functions, so it's going away. Bye update function!

98
00:04:54,000 --> 00:04:57,000
And finally, we want to remove this

99
00:04:57,000 --> 00:05:00,000
stuff we have, that's in strings. We don't need to print stuff

100
00:05:00,000 --> 00:05:03,000
out to the Console anymore,  because it's all going to be very visual,

101
00:05:03,000 --> 00:05:06,000
so we don't want to do that. So, let's take those things out,

102
00:05:06,000 --> 00:05:09,000
to start with, and that will leave

103
00:05:09,000 --> 00:05:12,000
kind of the outline

104
00:05:12,000 --> 00:05:15,000
the bare bones of our Number Wizard game.

105
00:05:15,000 --> 00:05:18,000
And what we'll need to do now is set

106
00:05:18,000 --> 00:05:21,000
up the win and lose conditions. So, what are the win and lose

107
00:05:21,000 --> 00:05:24,000
conditions and who's winning and who's losing? So, there are two players in this game.

108
00:05:24,000 --> 00:05:27,000
There's the computer and there's the player, the human player,

109
00:05:27,000 --> 00:05:30,000
and so the human player wins, if the computer cannot guess

110
00:05:30,000 --> 00:05:33,000
the number after a certain number of

111
00:05:33,000 --> 00:05:36,000
tries, and the computer player wins if he can guess

112
00:05:36,000 --> 00:05:39,000
the human number, after

113
00:05:39,000 --> 00:05:42,000
in a certain number of tries. So, we need the idea of a certain

114
00:05:42,000 --> 00:05:45,000
number of tries, and I'm going to call this integer

115
00:05:45,000 --> 00:05:48,000
max guesses. So, int

116
00:05:48,000 --> 00:05:51,000
maxGuesses

117
00:05:51,000 --> 00:05:54,000
Allowed, and I'm going to set that to

118
00:05:54,000 --> 00:05:57,000
10 for now. That's

119
00:05:57,000 --> 00:06:00,000
something you can tune, you can fine tune and pick yourself.

120
00:06:00,000 --> 00:06:03,000
I'm just going to say 10 guesses is the maximum the computer is allowed to

121
00:06:03,000 --> 00:06:06,000
do. So, how do we keep track of this? Well, whenever

122
00:06:06,000 --> 00:06:09,000
we create a new guess, the computer

123
00:06:09,000 --> 00:06:12,000
will have to reduce the number of

124
00:06:12,000 --> 00:06:15,000
guesses, so we can do maxGuessesAllowed

125
00:06:15,000 --> 00:06:18,000
is maxGuessesAllowed

126
00:06:18,000 --> 00:06:21,000
-1 right. So, now we're reducing the

127
00:06:21,000 --> 00:06:24,000
guesses allowed every time, and we need to handle whenever they

128
00:06:24,000 --> 00:06:27,000
reach 0. So, we do if (maxGuesses

129
00:06:27,000 --> 00:06:30,000
Alllowed less than or equal to

130
00:06:30,000 --> 00:06:33,000
0, so whenever they reach 0 basically or

131
00:06:33,000 --> 00:06:36,000
get underneath, then we want to do something like,

132
00:06:36,000 --> 00:06:39,000
well we want to jump to the Win or the Lose Screen right.

133
00:06:39,000 --> 00:06:42,000
That would be the Win Screen. The player

134
00:06:42,000 --> 00:06:45,000
has now picked a number, that the computer

135
00:06:45,000 --> 00:06:48,000
has not been able to guess in 10 tries, so that

136
00:06:48,000 --> 00:06:51,000
would be the win screen, and to move between scenes

137
00:06:51,000 --> 00:06:54,000
we can go Application

138
00:06:54,000 --> 00:06:57,000
dot, and that's load level.

139
00:06:57,000 --> 00:07:00,000
Not loadedLevel, be careful because those two functions

140
00:07:00,000 --> 00:07:03,000
can sometimes clash in the AutoComplete;

141
00:07:03,000 --> 00:07:06,000
loadLevel and we want to load the

142
00:07:06,000 --> 00:07:09,000
Win Screen. Alright, that's the player winning

143
00:07:09,000 --> 00:07:12,000
because he's picked a number that the computer could not guess in 10 tries.

144
00:07:12,000 --> 00:07:15,000
And we save that, and that

145
00:07:15,000 --> 00:07:18,000
could be, actually needs to be

146
00:07:18,000 --> 00:07:21,000
a capital letter. That's LoadLevel with a capital L,

147
00:07:21,000 --> 00:07:24,000
at the beginning. Cool! So, now we have a game

148
00:07:24,000 --> 00:07:27,000
that lets us pick numbers, and whenever we

149
00:07:27,000 --> 00:07:30,000
pick a number that the computer cannot guess in 10

150
00:07:30,000 --> 00:07:33,000
tries, the human player wins, which is exactly what we want.

151
00:07:33,000 --> 00:07:36,000
And that's going to be the way we move from the

152
00:07:36,000 --> 00:07:39,000
Game Scene to our Win Screen. The way we move

153
00:07:39,000 --> 00:07:42,000
our Game Scene to our Lose Screen, is going to be whanever we

154
00:07:42,000 --> 00:07:45,000
press correct right. Whenever we say, yes computer, you have found

155
00:07:45,000 --> 00:07:48,000
my number, well done! That's going to be whenever we move

156
00:07:48,000 --> 00:07:51,000
to the Lose Screen, and that's going to be handled by

157
00:07:51,000 --> 00:07:54,000
the button itself, not in the Number Wizard Script. So,

158
00:07:54,000 --> 00:07:57,000
cool! Awesome! We have this Number Wizard Script! That's great,

159
00:07:57,000 --> 00:08:00,000
we have a game! Now, how does it interact with the rest of the world?

160
00:08:00,000 --> 00:08:03,000
Let's jump back into Unity and look at our

161
00:08:03,000 --> 00:08:06,000
world. We have a script right here, but it's not even included in our

162
00:08:06,000 --> 00:08:09,000
scene right now. So, the first thing we're going to do

163
00:08:09,000 --> 00:08:12,000
is we're going to create a new empty object,

164
00:08:12,000 --> 00:08:15,000
and that's just going to be empty object. And we're going to call this guy Number

165
00:08:15,000 --> 00:08:18,000
Wizard. And that's

166
00:08:18,000 --> 00:08:21,000
to keep track, keep hold of our script that's going to be doing the functionality

167
00:08:21,000 --> 00:08:24,000
in there. So, we click the Number Wizard Script

168
00:08:24,000 --> 00:08:27,000
and we're going to add it into our Number Wizard

169
00:08:27,000 --> 00:08:30,000
Object, in the Inspector, by clicking and dragging

170
00:08:30,000 --> 00:08:33,000
the script into the object only Inspector.

171
00:08:33,000 --> 00:08:36,000
Right, so now we have a script and it's attached to an object, so it's actually

172
00:08:36,000 --> 00:08:39,000
going to run, because if it's not attached to an object it'll not run.

173
00:08:39,000 --> 00:08:42,000
How do we get it to interact with the rest of the world? Well, right

174
00:08:42,000 --> 00:08:45,000
now we have nothing on our scene to interact with, so let's

175
00:08:45,000 --> 00:08:48,000
create something that the Number Wizard

176
00:08:48,000 --> 00:08:51,000
Script can actually interact with. So, I'm going to

177
00:08:51,000 --> 00:08:54,000
go into my Canvas, select my Canvas, go Game Object,

178
00:08:54,000 --> 00:08:57,000
UI, and add a text object.

179
00:08:57,000 --> 00:09:00,000
And this text object is going to be my guess, that's the thing that the

180
00:09:00,000 --> 00:09:03,000
Number Wizard UI Script is going

181
00:09:03,000 --> 00:09:06,000
to intereact with. Notice, I've just put it in UI

182
00:09:06,000 --> 00:09:09,000
Mode, I've removed it from Normal Mode

183
00:09:09,000 --> 00:09:12,000
to UI Mode, using the buttons on the top left.

184
00:09:12,000 --> 00:09:15,000
And I'm going to change this text to be 500,

185
00:09:15,000 --> 00:09:18,000
as a placeholder number, that's going to be my initial guess,

186
00:09:18,000 --> 00:09:21,000
but that should be changed by the Number Wizard when we get to it.

187
00:09:21,000 --> 00:09:24,000
And I'm going to change some styles, make it white

188
00:09:24,000 --> 00:09:27,000
to pop out and also increase

189
00:09:27,000 --> 00:09:30,000
the Font Size. Alright, I want a big guess!

190
00:09:30,000 --> 00:09:33,000
Alright, big guess, I think that's about right.

191
00:09:33,000 --> 00:09:36,000
Looks good to me. That will be good

192
00:09:36,000 --> 00:09:39,000
enough. So, that's my guess, and let's make sure that

193
00:09:39,000 --> 00:09:42,000
the name of this object reflects what it is.

194
00:09:42,000 --> 00:09:45,000
We'll call it guess, press return, and now we have

195
00:09:45,000 --> 00:09:48,000
a guess in our scene. So, how do we get the

196
00:09:48,000 --> 00:09:51,000
Number Wizard code to change the guess? Well, we've already

197
00:09:51,000 --> 00:09:54,000
done this. We did this in our very first

198
00:09:54,000 --> 00:09:57,000
text adventure game, the one we

199
00:09:57,000 --> 00:10:00,000
did just before this. So, the very first visual game we ever built, we

200
00:10:00,000 --> 00:10:03,000
got that going, so let's do that again. So, we jump

201
00:10:03,000 --> 00:10:06,000
into our Number Wizard code, we jump at the top,

202
00:10:06,000 --> 00:10:09,000
and we'll create a public variable.

203
00:10:09,000 --> 00:10:12,000
It is the text itself, so

204
00:10:12,000 --> 00:10:15,000
public

205
00:10:15,000 --> 00:10:18,000
Text. And you'll notice it doesn't come up in the Auto-Complete,

206
00:10:18,000 --> 00:10:21,000
if you look down here. If I press

207
00:10:21,000 --> 00:10:24,000
space, it'll automatically complete it to something else. Now,

208
00:10:24,000 --> 00:10:27,000
that's weird! Why is it doing that? Well, that's because there are no

209
00:10:27,000 --> 00:10:30,000
text objects or classes

210
00:10:30,000 --> 00:10:33,000
defined in my code, right now.  Alright, text doesn't

211
00:10:33,000 --> 00:10:36,000
exist, and that's because it doesn't belong to any of those

212
00:10:36,000 --> 00:10:39,000
name spaces. Right now, we're importing two name spaces,

213
00:10:39,000 --> 00:10:42,000
UnityEngine and System.Collections. For Text, we'll

214
00:10:42,000 --> 00:10:45,000
need to import another one. So, we do using

215
00:10:45,000 --> 00:10:48,000
UnityEngine.UI;

216
00:10:48,000 --> 00:10:51,000
and now, our text will turn blue,

217
00:10:51,000 --> 00:10:54,000
when we create it.

218
00:10:54,000 --> 00:10:57,000
So cool! So now, we have a public Text text; and let's remember

219
00:10:57,000 --> 00:11:00,000
what that means. We have a Text variablle

220
00:11:00,000 --> 00:11:03,000
of type Text, so capital T is the type of the

221
00:11:03,000 --> 00:11:06,000
variable and text is the name.

222
00:11:06,000 --> 00:11:09,000
And I'm going to deliberately call it text,

223
00:11:09,000 --> 00:11:12,000
because you need to be able to read this and understand

224
00:11:12,000 --> 00:11:15,000
which bits are which, depending on the context in which they are.

225
00:11:15,000 --> 00:11:18,000
So, I'm going to name these things the same, and in fact, it's

226
00:11:18,000 --> 00:11:21,000
going to be named the same as something else.

227
00:11:21,000 --> 00:11:24,000
So, to get you in the practice of understanding what these things

228
00:11:24,000 --> 00:11:27,000
mean, based on how they're called and how they're invoked.

229
00:11:27,000 --> 00:11:30,000
So right now, let's remember, remind ourselves what we have.

230
00:11:30,000 --> 00:11:33,000
We have a variable of the NumberWizard class,

231
00:11:33,000 --> 00:11:36,000
whose name is text and type is

232
00:11:36,000 --> 00:11:39,000
Text with a capital T. Cool! So, that's the

233
00:11:39,000 --> 00:11:42,000
text we're going to be representing, and whenever we change

234
00:11:42,000 --> 00:11:45,000
the guess, whenever we do guess = (max + min) over

235
00:11:45,000 --> 00:11:48,000
2, we're going to change the text itself.

236
00:11:48,000 --> 00:11:51,000
So, that we can do by selecting our variable, right

237
00:11:51,000 --> 00:11:54,000
here, so that's the variable in the NumberWizard Class, and changing

238
00:11:54,000 --> 00:11:57,000
one of its attributes. Right, the variable has attributes,

239
00:11:57,000 --> 00:12:00,000
and the attributes we're going to be changing is text.

240
00:12:00,000 --> 00:12:03,000
Whoa, that's confusing right, text.text of type text! Ooh!

241
00:12:03,000 --> 00:12:06,000
That's a bit weird, but this will actually take a

242
00:12:06,000 --> 00:12:09,000
string. So basically, this represents the text

243
00:12:09,000 --> 00:12:12,000
itself, that's stored in the object that you

244
00:12:12,000 --> 00:12:15,000
see on the screen, with 500 on it, and that can be changed

245
00:12:15,000 --> 00:12:18,000
by changing the text attribute of that object.

246
00:12:18,000 --> 00:12:21,000
Now, notice I could have called this guy anything. I could have called it

247
00:12:21,000 --> 00:12:24,000
foobar. Alright, if I called it foobar, then in that

248
00:12:24,000 --> 00:12:27,000
case I would have done foobar.text. So,

249
00:12:27,000 --> 00:12:30,000
this, I've got control of what this is called. This I don't,

250
00:12:30,000 --> 00:12:33,000
this is actually the attribute of the Text

251
00:12:33,000 --> 00:12:36,000
type, and you can check what those things are, by jumping to the

252
00:12:36,000 --> 00:12:39,000
documentation in your browser. So, if you

253
00:12:39,000 --> 00:12:42,000
use a shortcut or just do a search in the documentation,

254
00:12:42,000 --> 00:12:45,000
you'll find this page here and you'll have the Text Object.

255
00:12:45,000 --> 00:12:48,000
And if you click here, you'll find

256
00:12:48,000 --> 00:12:51,000
that you'll see where it's coming from. As well, you'll see

257
00:12:51,000 --> 00:12:54,000
the Namespace. The Namespace will actually be highlighted, so it's

258
00:12:54,000 --> 00:12:57,000
showing you text comes from

259
00:12:57,000 --> 00:13:00,000
UnityEngine.UI, so you'll not be abel to use Text

260
00:13:00,000 --> 00:13:03,000
unless you use this Namespace, as well.

261
00:13:03,000 --> 00:13:06,000
And in this description, you'll find it has

262
00:13:06,000 --> 00:13:09,000
a variable called text,

263
00:13:09,000 --> 00:13:12,000
which is the string value this text will display,

264
00:13:12,000 --> 00:13:15,000
so by changing the

265
00:13:15,000 --> 00:13:18,000
text, you can change what's actually showed on screen.

266
00:13:18,000 --> 00:13:21,000
I hope that's not too confusing, it's kind of

267
00:13:21,000 --> 00:13:24,000
deliberate. Try and get your head around it. I'm going to remove foobar

268
00:13:24,000 --> 00:13:27,000
and pull it back to text. It's

269
00:13:27,000 --> 00:13:30,000
so you can understand the different contexts, in which

270
00:13:30,000 --> 00:13:33,000
the variables are used. So, this is the variable that's

271
00:13:33,000 --> 00:13:36,000
referenced within the NumberWizard class. This is an attribute of

272
00:13:36,000 --> 00:13:39,000
that variable, and this is the type of that variable.

273
00:13:39,000 --> 00:13:42,000
Alright, so anyway, more

274
00:13:42,000 --> 00:13:45,000
to the point, we want to change what the text

275
00:13:45,000 --> 00:13:48,000
is playing to be the new guess, and we can do that by picking

276
00:13:48,000 --> 00:13:51,000
the guess and turning it into a string.

277
00:13:51,000 --> 00:13:54,000
And that's a method called on

278
00:13:54,000 --> 00:13:57,000
the guess itself. So, we're going to do guess

279
00:13:57,000 --> 00:14:00,000
.ToString(); that's going to create a string

280
00:14:00,000 --> 00:14:03,000
with a number in it, and then, we're going to set this string to

281
00:14:03,000 --> 00:14:06,000
be the text that we show on the screen. Oh OK!

282
00:14:06,000 --> 00:14:09,000
I think that's pretty much all the most difficult bit of the code so far,

283
00:14:09,000 --> 00:14:12,000
but don't worry too much about it and let's get

284
00:14:12,000 --> 00:14:15,000
to wiring this up, in the scene itself. So now, we have this

285
00:14:15,000 --> 00:14:18,000
public text variable. Let's jump into our scene.

286
00:14:18,000 --> 00:14:21,000
And we should be able to click on our NumberWizard and

287
00:14:21,000 --> 00:14:24,000
see that there is now a slot missing for our Text right

288
00:14:24,000 --> 00:14:27,000
here. So now, if I click on my guess

289
00:14:27,000 --> 00:14:30,000
and drag it into my

290
00:14:30,000 --> 00:14:33,000
Text, now we will...

291
00:14:33,000 --> 00:14:36,000
...now, we will reference the guess itself

292
00:14:36,000 --> 00:14:39,000
and we'll be changing the guess Text. Cool!

293
00:14:39,000 --> 00:14:42,000
So, what's missing now? Well, we're missing two things, well, three

294
00:14:42,000 --> 00:14:45,000
things really. Three buttons, we need three additional buttons for

295
00:14:45,000 --> 00:14:48,000
higher, lower, and correct.

296
00:14:48,000 --> 00:14:51,000
Correct is always going to be going to the Lose Screen, so

297
00:14:51,000 --> 00:14:54,000
I'm going to keep my Lose Button, and simply change

298
00:14:54,000 --> 00:14:57,000
the Text to Correct.

299
00:14:57,000 --> 00:15:00,000
That's going to be my Correct Button. Now, Win Screen

300
00:15:00,000 --> 00:15:03,000
doesn't exist anymore. Let's do it,

301
00:15:03,000 --> 00:15:06,000
change the pivot, the Pivot Point. I don't want

302
00:15:06,000 --> 00:15:09,000
to do that. So, this little round circle,

303
00:15:09,000 --> 00:15:12,000
I don't know whether you can see it, but the circle at

304
00:15:12,000 --> 00:15:15,000
the center of my object. If I

305
00:15:15,000 --> 00:15:18,000
select them in UI

306
00:15:18,000 --> 00:15:21,000
Mode, you can see the circle, you can actually move it around. This is the

307
00:15:21,000 --> 00:15:24,000
Pivot Point; this is where the scaling occurs from,

308
00:15:24,000 --> 00:15:27,000
and I really want this to keep this in the middle. Just a little side note

309
00:15:27,000 --> 00:15:30,000
to show you what I did wrong there. OK. So, back here, we

310
00:15:30,000 --> 00:15:33,000
don't want a Win Button. This is

311
00:15:33,000 --> 00:15:36,000
no longer a success button. I'm going to turn this into my Guess

312
00:15:36,000 --> 00:15:39,000
Higher Button, so I'm going to name it

313
00:15:39,000 --> 00:15:42,000
Guess Higher.

314
00:15:42,000 --> 00:15:45,000
I'm going to say, Higher on the

315
00:15:45,000 --> 00:15:48,000
Text, and instead of calling my LevelManager,

316
00:15:48,000 --> 00:15:51,000
I'm going to change the object, of course,

317
00:15:51,000 --> 00:15:54,000
to be my NumberWizard. So,

318
00:15:54,000 --> 00:15:57,000
drag and drop my NumberWizard, and instead of calling no functions,

319
00:15:57,000 --> 00:16:00,000
I'm going to call my NumberWizard Guess Higher () function,

320
00:16:00,000 --> 00:16:03,000
and that takes no argument. Now, that's pretty simple and

321
00:16:03,000 --> 00:16:06,000
we've got a Higher Button, that calls NumberWizard to guess higher.

322
00:16:06,000 --> 00:16:09,000
We also want to duplicate this guy and create a

323
00:16:09,000 --> 00:16:12,000
Guess Lower Button,

324
00:16:12,000 --> 00:16:15,000
that lowers the guess right. Guess Lower

325
00:16:15,000 --> 00:16:18,000
and this guy is going to have the text.

326
00:16:18,000 --> 00:16:21,000
Lower, it's going to be

327
00:16:21,000 --> 00:16:24,000
below the correct object the correct

328
00:16:24,000 --> 00:16:27,000
element in our UI, and I'm also going to

329
00:16:27,000 --> 00:16:30,000
be calling a different function. I'm going to call

330
00:16:30,000 --> 00:16:33,000
GuessLower (). Not Send

331
00:16:33,000 --> 00:16:36,000
Message (). Let's get this right, Guess

332
00:16:36,000 --> 00:16:39,000
Lower (). Cool! So now, if I press play, what

333
00:16:39,000 --> 00:16:42,000
happens? Let's take a look at what happens. If I press

334
00:16:42,000 --> 00:16:45,000
Higher, I guess higher and higher and higher and higher and higher

335
00:16:45,000 --> 00:16:48,000
and higher and higher and higher and higher

336
00:16:48,000 --> 00:16:51,000
and correct. Awesome!

337
00:16:51,000 --> 00:16:54,000
So now, we have a game! Right, we have a game

338
00:16:54,000 --> 00:16:57,000
that works, and we had to do almost nothing.

339
00:16:57,000 --> 00:17:00,000
So, let's take another look and try it from the beginning. Let's jump

340
00:17:00,000 --> 00:17:03,000
into our start and see whether everything hangs

341
00:17:03,000 --> 00:17:06,000
together. So, let's press play!

342
00:17:06,000 --> 00:17:09,000
To start, now let's say I pick the number

343
00:17:09,000 --> 00:17:12,000
645, so

344
00:17:12,000 --> 00:17:15,000
645, 6

345
00:17:15,000 --> 00:17:18,000
45

346
00:17:18,000 --> 00:17:21,000
and

347
00:17:21,000 --> 00:17:24,000
here we go, correct! And the computer tells

348
00:17:24,000 --> 00:17:27,000
me I was "no match for his silicon brain!" and

349
00:17:27,000 --> 00:17:30,000
no problem. Now, let's go back and click to try

350
00:17:30,000 --> 00:17:33,000
again, and this time I'm going to change the number of

351
00:17:33,000 --> 00:17:36,000
guesses allowed, to just five.

352
00:17:36,000 --> 00:17:39,000
I'm just going to go back in my code and change that to 5,

353
00:17:39,000 --> 00:17:42,000
and I'm also going to make this guy public, so we can change it from within

354
00:17:42,000 --> 00:17:45,000
the Inspector. We don't want to jump back into the code, every time we want to

355
00:17:45,000 --> 00:17:48,000
change the difficulty of the game. That seems a little bit silly, so

356
00:17:48,000 --> 00:17:51,000
I'm going to make this public, so we can change it in the Inspector. I'm going to put a default of

357
00:17:51,000 --> 00:17:54,000
of 5. I jump back in. In my game

358
00:17:54,000 --> 00:17:57,000
what I'm testing here, I want to know

359
00:17:57,000 --> 00:18:00,000
whether the computer can lose the game, so I'm going to press 1,

360
00:18:00,000 --> 00:18:03,000
2, 3, 4, 5, and the

361
00:18:03,000 --> 00:18:06,000
the computer indeed does lose the game, after a certain number of guesses.

362
00:18:06,000 --> 00:18:09,000
So cool! Awesome!  So, we'll Return to Start,

363
00:18:09,000 --> 00:18:12,000
and now we have a game! So, what's your

364
00:18:12,000 --> 00:18:15,000
task now? Well, let's take a look at our Game Scene.

365
00:18:15,000 --> 00:18:18,000
I think our Game Scene, if we take a look at the Game Preview,

366
00:18:18,000 --> 00:18:21,000
looks pretty dull and horrible, so your task is to

367
00:18:21,000 --> 00:18:24,000
spice it up. So, spice up the Game Scene, and I will see you

368
00:18:24,000 --> 00:18:27,000
in another video, with a spiced up Game Scene, to

369
00:18:27,000 --> 00:18:30,000
finish and polish this Number Wizard game. So, well done for

370
00:18:30,000 --> 00:18:33,000
getting this far, and I'll see you in another video! Bye for now!

