
1
00:00:03,000 --> 00:00:06,000
Hey, welcome to Object Orientation

2
00:00:06,000 --> 00:00:09,000
Basics! So, what is an object? What is a

3
00:00:09,000 --> 00:00:12,000
class? What is an instance? Well, let's use Lego

4
00:00:12,000 --> 00:00:15,000
through this series, as an example. This Lego here

5
00:00:15,000 --> 00:00:18,000
is an object or it's an instance, and

6
00:00:18,000 --> 00:00:21,000
the mold that made it back in the Lego factory is a

7
00:00:21,000 --> 00:00:24,000
class, a template that says how to make these things.

8
00:00:24,000 --> 00:00:27,000
And each instance has a couple of things about it. Firstly, it has

9
00:00:27,000 --> 00:00:30,000
properties, like this guy is blue, and it has eight

10
00:00:30,000 --> 00:00:33,000
studs on it, and it also has methods right, Brice,

11
00:00:33,000 --> 00:00:36,000
which are functions. Yeah, so for example, this particular Lego block

12
00:00:36,000 --> 00:00:39,000
would have a click method, when you click it with something else. So,

13
00:00:39,000 --> 00:00:42,000
in your Unity, you use methods and functions already

14
00:00:42,000 --> 00:00:45,000
and you could simply say click with this

15
00:00:45,000 --> 00:00:48,000
block, and the function would be ClickWith and then, you would pass it

16
00:00:48,000 --> 00:00:51,000
another block. That would be an example of a method on that

17
00:00:51,000 --> 00:00:54,000
particular object. And these are very simple

18
00:00:54,000 --> 00:00:57,000
objects, these blocks, but Lego goes all the way up to Mind

19
00:00:57,000 --> 00:01:00,000
Storms, and here I have a Mind Storms motor. So, if this

20
00:01:00,000 --> 00:01:03,000
was a class, it would have a lot more going for it.

21
00:01:03,000 --> 00:01:06,000
You can literally see here that the

22
00:01:06,000 --> 00:01:09,000
object has more places where you can plug stuff in,

23
00:01:09,000 --> 00:01:12,000
it has more method, it has more functions on the object itself.

24
00:01:12,000 --> 00:01:15,000
This block has only eight on the

25
00:01:15,000 --> 00:01:18,000
front and eight at the back, but this has significantly more,

26
00:01:18,000 --> 00:01:21,000
as well as a bunch of moving parts, for example.

27
00:01:21,000 --> 00:01:24,000
Yeah, and there's a lot you could do with this. So, one of it's methods would be

28
00:01:24,000 --> 00:01:27,000
RotateClockwise(deg) by two degrees, it would also do that! It also

29
00:01:27,000 --> 00:01:30,000
has return values. One of it's methods would be

30
00:01:30,000 --> 00:01:33,000
what angle am I at, compared to where I started, to when I was born, when I

31
00:01:33,000 --> 00:01:36,000
was instantiated? What angle is that? So, it would then

32
00:01:36,000 --> 00:01:39,000
return a value in degrees. So, that is a much more complicated

33
00:01:39,000 --> 00:01:42,000
template, and these guys are

34
00:01:42,000 --> 00:01:45,000
really simple object templates. So, the three key

35
00:01:45,000 --> 00:01:48,000
takeaways are, classes are templates

36
00:01:48,000 --> 00:01:51,000
that create instances of the instances, and

37
00:01:51,000 --> 00:01:54,000
instances are what we call objects. A particular Lego block

38
00:01:54,000 --> 00:01:57,000
is an instance of a class, and if you

39
00:01:57,000 --> 00:02:00,000
think of classes, what you write in your editor, as this is the

40
00:02:00,000 --> 00:02:03,000
template for the things that are going to be created in my game,

41
00:02:03,000 --> 00:02:06,000
you won't go as far wrong. Absolutely, so your class

42
00:02:06,000 --> 00:02:09,000
here could be six blocks, for instance. This is

43
00:02:09,000 --> 00:02:12,000
duplo, so it could just be called six block, and then, when you actually

44
00:02:12,000 --> 00:02:15,000
instantiate it, you may say SixBlock.Color =

45
00:02:15,000 --> 00:02:18,000
Blue or SixBlock.SetColor. And then, you would give it

46
00:02:18,000 --> 00:02:21,000
blue. As it was, this guy, when he was instantiated, you might

47
00:02:21,000 --> 00:02:24,000
say that that's the same thing as, instead of SixBlock, but it's red, so there's an example

48
00:02:24,000 --> 00:02:27,000
for you. So, that's it! Really, a

49
00:02:27,000 --> 00:02:30,000
class is a set of properties, like number of

50
00:02:30,000 --> 00:02:33,000
studs, color, etc., and methods like

51
00:02:33,000 --> 00:02:36,000
ClickTogether, like Rotate, like ReadRotation

52
00:02:36,000 --> 00:02:39,000
and those sorts of things. Hopefully that analogy makes it a little bit clearer for you.

