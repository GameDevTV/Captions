1
00:00:02,033 --> 00:00:04,133
Hey guys, welcome to this

2
00:00:04,133 --> 00:00:08,133
video! We're going to be talking about normals here, so normal means

3
00:00:08,133 --> 00:00:12,133
90 degrees like this, think of a capital T! What do normals mean

4
00:00:12,133 --> 00:00:16,133
in Blender, Mikey? Well normals are used to describe lots of things,

5
00:00:16,133 --> 00:00:20,133
including the face direction. So if my hand was

6
00:00:20,133 --> 00:00:24,133
a face then that is the normal to it coming out, and this

7
00:00:24,133 --> 00:00:28,133
is the other side of the face. So if you look at a complex model with

8
00:00:28,133 --> 00:00:32,133
lots of faces on the outside of it, you can think of those like little elements of skin,

9
00:00:32,133 --> 00:00:36,133
and the normals should all be sticking outwards, just like the hairs on your skin should all be sticking

10
00:00:36,133 --> 00:00:40,133
outwards we hope. We don't want any ingrowing normals here! No! So

11
00:00:40,133 --> 00:00:44,133
that's what you need to remember for now, get the normals around the right way. Michael will show you, in the video, how

12
00:00:44,133 --> 00:00:48,133
to tell just in the Scene View, whether a normal is around the right way or the wrong way. So

13
00:00:48,133 --> 00:00:52,133
that's really important! Why is it important, Mikey, that the normals are outwards?

14
00:00:52,133 --> 00:00:56,133
Have you ever played a game where you stick your head through a piece of a wall or

15
00:00:56,133 --> 00:01:00,133
you're exploring the level, and suddenly you see through the level? Well that's

16
00:01:00,133 --> 00:01:04,133
something called Backface Culling. Normals are very important because it tells

17
00:01:04,133 --> 00:01:08,133
something that's rendering your model which way to actually render.

18
00:01:08,133 --> 00:01:12,133
So normals talk about how light interacts with the surface. Now we're going into more

19
00:01:12,133 --> 00:01:16,133
detail about that later, but it basically means that as a light

20
00:01:16,133 --> 00:01:20,133
ray comes in, it has a reference angle to work out how it's going to bounce, or if it doesn't

21
00:01:20,133 --> 00:01:24,133
bounce, how brightly it's going to illuminate the surface. Light glancing a surface,

22
00:01:24,133 --> 00:01:28,133
if the surface is pretty dark. Light hitting the surface square on,

23
00:01:28,133 --> 00:01:32,133
the surface diffuses light very brightly. So then we're going to go into the details of

24
00:01:32,133 --> 00:01:36,133
that in your later study of rendering. Backface Culling is very common in game

25
00:01:36,133 --> 00:01:40,133
engines and in other places. Actually, you'll notice that Blender

26
00:01:40,133 --> 00:01:44,133
renders both sides of a face by default, so it doesn't use something called Backface

27
00:01:44,133 --> 00:01:48,133
Culling, unless you turn it on. But if you export your model to something like say Unity,

28
00:01:48,133 --> 00:01:52,133
a popular game engine, and the normals are around the wrong way, the

29
00:01:52,133 --> 00:01:56,133
faces that are back to front will just be invisible. So in fact, if you had every normal

30
00:01:56,133 --> 00:02:00,133
the wrong way around, for whatever reason, your model would actually be invisible

31
00:02:00,133 --> 00:02:04,133
when you imported it into another package. From the outside and visible from the inside.

32
00:02:04,133 --> 00:02:08,133
Invisible, yes! And then, 3D printing is another application where it's important that you have a closed model with all

33
00:02:08,133 --> 00:02:12,133
the normals pointing outwards. So there's an introduction to normals! I don't know

34
00:02:12,133 --> 00:02:16,133
if they need to know anymore today. No not at the moment. In the next lecture we'll show you how to

35
00:02:16,133 --> 00:02:19,966
work out normals in Blender! Fantastic!
