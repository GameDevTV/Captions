1
00:00:06,900 --> 00:00:10,900
Welcome! In this lecture we are going to be sorting out scoring so that you can

2
00:00:10,900 --> 00:00:14,900
actually shoot these baskets and successfully detect

3
00:00:14,900 --> 00:00:18,900
what is and what isn't a basket, what is and what isn't going through

4
00:00:18,900 --> 00:00:22,900
that hoop. So very exciting! Let's jump right

5
00:00:22,900 --> 00:00:23,866
in!

6
00:00:23,866 --> 00:00:27,866
In the last lecture I was a little naughty, because I didn't actually complete all of the challenge.

7
00:00:27,866 --> 00:00:31,866
What I was supposed to do is also delete these Targets

8
00:00:31,866 --> 00:00:35,866
here. So hopefully you did that, I kind of missed that!

9
00:00:35,866 --> 00:00:39,866
Sorry my bad! Now, if we play,

10
00:00:39,866 --> 00:00:43,866
there is a notable ommision, and that is that there is no way, currently,

11
00:00:43,866 --> 00:00:47,866
to score, especially if we remove those triggers. So what we want to do is figure out

12
00:00:47,866 --> 00:00:51,866
a way of turning a basket, like I luckily just managed to get in there,

13
00:00:51,866 --> 00:00:55,866
into a score! So

14
00:00:55,866 --> 00:00:59,866
what we want to do is no longer have a collider, because we don't want the objects to

15
00:00:59,866 --> 00:01:03,866
bounce off. What we have, instead, in Unity is something called a Trigger

16
00:01:03,866 --> 00:01:07,866
Volume, which is basically an area that triggers a

17
00:01:07,866 --> 00:01:11,866
notification when an object passes through it. So how can we create one of

18
00:01:11,866 --> 00:01:15,866
these Trigger Volumes? Well let's go into our RingBoard and click and

19
00:01:15,866 --> 00:01:19,866
Create a new Empty object, which I'm going to call the

20
00:01:19,866 --> 00:01:23,866
GoalTrigger. And I'm going to add a component

21
00:01:23,866 --> 00:01:27,866
to this, and I'm just going to add the standard Box Collider.

22
00:01:27,866 --> 00:01:31,866
Now, if you check the Is Trigger box, then that

23
00:01:31,866 --> 00:01:35,866
will make it behave like a trigger, so it will mean that

24
00:01:35,866 --> 00:01:39,866
we can pass through it. Now, we're going to have to

25
00:01:39,866 --> 00:01:43,866
change the location of this trigger, because it's a little bit far

26
00:01:43,866 --> 00:01:47,866
down. So I'm just going to bring it up, and I'm also going to bring it across, pretty much,

27
00:01:47,866 --> 00:01:51,866
to be in the basket area.

28
00:01:51,866 --> 00:01:55,866
But I want to make it a bit bigger than this! I want to make it so that it

29
00:01:55,866 --> 00:01:59,866
covers the area, or just about. So you can hit the Edit Collider button in

30
00:01:59,866 --> 00:02:03,866
the Inspector, and then, you have these handles on the green

31
00:02:03,866 --> 00:02:07,866
trigger. It's very faint, very hard to see, but on your screen it might be slightly

32
00:02:07,866 --> 00:02:11,866
easier than watching it on the video, and you can drag it to complete

33
00:02:11,866 --> 00:02:15,866
the ring. Now, if we look from the front, what I want to do is add this,

34
00:02:15,866 --> 00:02:19,866
make this just a trigger around the ring,

35
00:02:19,866 --> 00:02:23,866
like so. I'll hit save!

36
00:02:23,866 --> 00:02:27,866
And now, we want to create a script, so I'm going to Assets,

37
00:02:27,866 --> 00:02:31,866
Scripts, and Create, C# Script.

38
00:02:31,866 --> 00:02:35,866
And I'm going to call it the GoalTrigger, like

39
00:02:35,866 --> 00:02:39,866
so. And the way we get a trigger is

40
00:02:39,866 --> 00:02:43,866
very very similar to the way we got a collision. So while we

41
00:02:43,866 --> 00:02:47,866
wait for Visual Studio to open up, it is almost exactly the same, it's OnTrigger

42
00:02:47,866 --> 00:02:51,866
Enter, so we're going to write that. I'm just removing the Start (), at the moment.

43
00:02:51,866 --> 00:02:55,866
Do OnTrigger

44
00:02:55,866 --> 00:02:59,866
Enter. It returns void, just like before,

45
00:02:59,866 --> 00:03:03,866
but this time, instead of taking a (Collision), it

46
00:03:03,866 --> 00:03:07,866
takes a Collider, and the collider is the object,

47
00:03:07,866 --> 00:03:11,866
the game object, which we are currently colliding with. So

48
00:03:11,866 --> 00:03:15,866
if we print this out or say, ("trigger

49
00:03:15,866 --> 00:03:19,866
Entered"), and then, we'll also print our

50
00:03:19,866 --> 00:03:23,866
(collider).

51
00:03:23,866 --> 00:03:27,866
Now, let's try playing the game and try to score,

52
00:03:27,866 --> 00:03:31,866
seeing if we can get that message to show up!

53
00:03:31,866 --> 00:03:35,866
OK, so I'm kind of missing the target a little

54
00:03:35,866 --> 00:03:39,866
bit.

55
00:03:39,866 --> 00:03:43,866
Aim up a bit.

56
00:03:47,866 --> 00:03:51,866
And this doesn't seem to...

57
00:03:51,866 --> 00:03:55,866
I seem to be unable to score.

58
00:03:55,866 --> 00:03:59,866
Hopefully that works. OK, this is

59
00:03:59,866 --> 00:04:03,866
not currently showing up any log messages, so that

60
00:04:03,866 --> 00:04:07,866
would probably be because we didn't drag the GoalTrigger on.

61
00:04:07,866 --> 00:04:11,866
So it tends to help to [Laughs] have the script, that you

62
00:04:11,866 --> 00:04:15,866
want to run, on the GameObject, because otherwise it doesn't run, and funnily

63
00:04:15,866 --> 00:04:19,866
enough! So let's play that again!

64
00:04:19,866 --> 00:04:23,866
Let's have a go!

65
00:04:23,866 --> 00:04:27,866
OK, so I haven't scored, but I've already got log messages,

66
00:04:27,866 --> 00:04:31,800
and that's because there is a floor in my approach.

67
00:04:31,800 --> 00:04:35,800
So let's have a look with the help of a slide. So imagine this is our basket.

68
00:04:35,800 --> 00:04:39,800
At the moment, we have our Trigger Volume up here, around the ring, but

69
00:04:39,800 --> 00:04:43,800
obviously, when a ball comes flying across and just skims the top

70
00:04:43,800 --> 00:04:47,800
of the ring, we still get a TriggerEnter, so this

71
00:04:47,800 --> 00:04:51,800
approach alone won't help us. What we need to do is add in a

72
00:04:51,800 --> 00:04:55,800
second Trigger Volume down here, and get these two to talk to each other, so

73
00:04:55,800 --> 00:04:59,800
when a trigger even happens here, the top trigger tells the bottom

74
00:04:59,800 --> 00:05:03,800
trigger to expect a trigger event, and when that expected trigger

75
00:05:03,800 --> 00:05:07,800
or collider comes through, then we can score.

76
00:05:07,800 --> 00:05:11,800
OK, so that makes a bit more sense! We have this through

77
00:05:11,800 --> 00:05:15,800
happening, which is exactly what happens in a basket! So how are we going

78
00:05:15,800 --> 00:05:19,800
to achieve this? Well, let's start off by duplicating our

79
00:05:19,800 --> 00:05:23,800
GoalTrigger, and I'm going to make the second one a child, because

80
00:05:23,800 --> 00:05:27,800
the first GoalTrigger is going to want to get hold of the second one, in order

81
00:05:27,800 --> 00:05:31,800
to talk to it. Well I'm just going to rename them, so it's

82
00:05:31,800 --> 00:05:35,800
no longer going to be called GoalTrigger but Primary Goal

83
00:05:35,800 --> 00:05:39,800
or Primary Trigger, for short.

84
00:05:39,800 --> 00:05:43,800
And the second one I'm going to call SecondaryTrigger,

85
00:05:43,800 --> 00:05:47,800
funnily enough.

86
00:05:51,800 --> 00:05:55,800
There you are, by magic I can type that last in! While we're at it,

87
00:05:55,800 --> 00:05:59,800
I'm also going to rename the script!

88
00:06:03,800 --> 00:06:07,800
Remember that script names can't have spaces, neither can the classes.

89
00:06:07,800 --> 00:06:11,800
So now it's reloading, because of the change in the name, so I need to open it

90
00:06:11,800 --> 00:06:15,800
again, and look at all those reload messages.

91
00:06:15,800 --> 00:06:19,800
And the name of the class always needs to match.

92
00:06:19,800 --> 00:06:23,800
There we go!

93
00:06:23,800 --> 00:06:27,800
Now, let's just check if we're getting that same behavior that we were getting

94
00:06:27,800 --> 00:06:31,800
wrong, in the first place.

95
00:06:31,800 --> 00:06:35,800
Yes, yes we are. OK, and this one seems to have renamed

96
00:06:35,800 --> 00:06:39,800
itself, probably because I didn't hit Enter. So...

97
00:06:43,800 --> 00:06:45,900
There we go!

98
00:06:45,900 --> 00:06:49,900
So for this lecture I have a bit of a larger challenge for you! I'd like you to actually

99
00:06:49,900 --> 00:06:53,900
write that SecondaryTrigger script. Now, that might seem daunting but I'm going to give

100
00:06:53,900 --> 00:06:57,900
you some hints, and you should know everything that you need to know. Don't worry, just give

101
00:06:57,900 --> 00:07:01,900
it half an hour. If you're still struggling after half an hour, come back and watch the rest

102
00:07:01,900 --> 00:07:05,900
of this video. So first of all, you'll need a public method called

103
00:07:05,900 --> 00:07:09,900
ExpectCollider() and it'll have to take some sort of argument.

104
00:07:09,900 --> 00:07:13,900
Think about what argument should it be taking,

105
00:07:13,900 --> 00:07:17,900
and where will you be saving the input, so that we know, in that second

106
00:07:17,900 --> 00:07:21,900
collider, to compare? So we can compare what that second collider

107
00:07:21,900 --> 00:07:25,900
coming in is. And then, I'd like you to

108
00:07:25,900 --> 00:07:29,900
call that ExpectCollider() method from PrimaryTrigger, telling it to expect

109
00:07:29,900 --> 00:07:33,900
a collider, and then, write the appropriate check

110
00:07:33,900 --> 00:07:37,900
in the OnTriggerenter(). So you'll need an OnTrigger

111
00:07:37,900 --> 00:07:41,900
Enter() in the secondary trigger, as well, obviously. That's

112
00:07:41,900 --> 00:07:45,900
why it's called a trigger. And you'll need to put an if statement in there,

113
00:07:45,900 --> 00:07:49,900
that makes sure that this isn't just a ball coming up from the bottom,

114
00:07:49,900 --> 00:07:53,900
that is has actually been through and that it is, in fact, expected.

115
00:07:53,900 --> 00:07:57,900
And then, when that case is true, I'd like you to increment the

116
00:07:57,900 --> 00:08:01,900
score. OK, we have a tougher challenge, see if you can hack it! Pause the video,

117
00:08:01,900 --> 00:08:05,900
and have a go! OK,

118
00:08:05,900 --> 00:08:09,900
welcome back! I really hope you've had a go at this challenge, it's going to be really great

119
00:08:09,900 --> 00:08:13,900
learning, even if you don't manage to successfully complete it! Just the

120
00:08:13,900 --> 00:08:17,900
act of trying will help you learn. So let's dive

121
00:08:17,900 --> 00:08:21,900
in and do this in the video! I'm going to

122
00:08:21,900 --> 00:08:25,900
Create my new script, C# Script, and it's going to be called

123
00:08:25,900 --> 00:08:29,900
SecondaryTrigger, if I can spell it correctly.

124
00:08:29,900 --> 00:08:33,900
SecondaryTrigger, OK then I'll drag that onto my Secondary

125
00:08:33,900 --> 00:08:37,900
Trigger, so that I don't make those same mistakes again, where I

126
00:08:37,900 --> 00:08:41,900
don't have the scripts that I want. There we go, so I've got Primary

127
00:08:41,900 --> 00:08:45,900
and Secondary, and it's a good job that I checked, because that Secondary Trigger actually has

128
00:08:45,900 --> 00:08:49,900
a Primary Trigger script, which we do not want. So I'm going to remove that

129
00:08:49,900 --> 00:08:53,900
Secondary Trigger component, and that is

130
00:08:53,900 --> 00:08:57,900
more like it! That is what we want! So I'm going to

131
00:08:57,900 --> 00:09:01,900
open up my Secondary Script,

132
00:09:01,900 --> 00:09:05,900
and it's asking me to reload things,

133
00:09:05,900 --> 00:09:09,900
it doesn't really matter. Now, what I want to do is create that public

134
00:09:09,900 --> 00:09:13,900
void method called Expect

135
00:09:13,900 --> 00:09:17,900
Collider, and here it's going to take a

136
00:09:17,900 --> 00:09:21,900
(Collider collider), funnily enough! Never saw that one coming!

137
00:09:21,900 --> 00:09:25,900
Now, we want to save this in a variable,

138
00:09:25,900 --> 00:09:29,900
so I'm going to create a Collider called

139
00:09:29,900 --> 00:09:33,900
expectedCollider, which is initially set to

140
00:09:33,900 --> 00:09:37,900
nothing, but when we get this method called, we set it

141
00:09:37,900 --> 00:09:41,900
to the collider that was passed in, like so.

142
00:09:41,900 --> 00:09:45,900
Now, what happens is, with void On

143
00:09:45,900 --> 00:09:49,900
TriggerEnter() we are

144
00:09:49,900 --> 00:09:53,900
going to get another (Collider

145
00:09:53,900 --> 00:09:57,900
like so, and we want to check

146
00:09:57,900 --> 00:10:01,900
whether it is the same collider. So I'm going to do an if (otherCollider

147
00:10:01,900 --> 00:10:05,900
==. Remember that == sign is there

148
00:10:05,900 --> 00:10:09,900
to say equality not assignment, because if it was just like

149
00:10:09,900 --> 00:10:13,900
this we would get an error, because it would say

150
00:10:13,900 --> 00:10:17,900
I can't assign this. Whereas this actually says oh

151
00:10:17,900 --> 00:10:21,900
they're equal. Oh, but here I've got, actually, the wrong name as well, so that was probably what

152
00:10:21,900 --> 00:10:25,900
the error was. So we've got (otherCollider == expectedCollider), this is

153
00:10:25,900 --> 00:10:29,900
when we count the score. So how do we count the score? Well if you need your

154
00:10:29,900 --> 00:10:33,900
memory jogging, then we could go over to our other

155
00:10:33,900 --> 00:10:37,900
trigger script, that we previously wrote, the Detect

156
00:10:37,900 --> 00:10:41,900
Scoring. Let's go over to that! And you'll notice,

157
00:10:41,900 --> 00:10:45,900
here it is! We've got this DetectScoring right here, so let's grab that and

158
00:10:45,900 --> 00:10:49,900
bring it over to our Secondary Trigger,

159
00:10:49,900 --> 00:10:53,900
which I think has just disappeared so let's go and open it up again.

160
00:10:53,900 --> 00:10:57,900
And I'm just going to paste

161
00:10:57,900 --> 00:11:01,900
it in there, and for now, I'm not going to worry about different

162
00:11:01,900 --> 00:11:05,900
scores, so I'm just going to put in the score of 1. Let's save that,

163
00:11:05,900 --> 00:11:09,900
go back into Unity, save the scene,

164
00:11:09,900 --> 00:11:13,900
and now let's have a go! So the first thing I want to

165
00:11:13,900 --> 00:11:17,900
attempt to see is that there is no scoring clearly going on

166
00:11:17,900 --> 00:11:21,900
now. Obviously, there is that first trigger with the print statement happening,

167
00:11:21,900 --> 00:11:25,900
and there's still no scoring when we actually manage to

168
00:11:25,900 --> 00:11:29,900
score the basket. So what's going on there? Well I missed part of the challenge!

169
00:11:29,900 --> 00:11:33,900
There is part of the challenge, right here, that says you will need to call

170
00:11:33,900 --> 00:11:37,900
it from PrimaryTrigger and so that's what I'm missing. Let me just go back

171
00:11:37,900 --> 00:11:41,900
across, and let's

172
00:11:41,900 --> 00:11:45,900
make that scoring happen! So I want

173
00:11:45,900 --> 00:11:49,900
to go to my Primary script, which is also

174
00:11:49,900 --> 00:11:53,900
not visible at the moment, it's probably because I have so many scripts open.

175
00:11:53,900 --> 00:11:57,900
And then, I can just remove these print statements, and

176
00:11:57,900 --> 00:12:01,900
I want to get hold of that child object, which is a Secondary

177
00:12:01,900 --> 00:12:05,900
Trigger. So I'm going to go SecondaryTrigger,

178
00:12:05,900 --> 00:12:09,900
save it, I'm going to get the GetComponent

179
00:12:09,900 --> 00:12:13,900
InChildren, and I'm going to get

180
00:12:13,900 --> 00:12:17,900
the SecondaryTrigger, like so. And then, on this trigger

181
00:12:17,900 --> 00:12:21,900
I'm going to call ExpectCollider and pass in the (collider) that

182
00:12:21,900 --> 00:12:25,900
we are getting, in this collision. So hopefully that'll do the trick!

183
00:12:25,900 --> 00:12:29,900
Let's go and hit play!

184
00:12:31,166 --> 00:12:35,166
So what we'll notice is, actually

185
00:12:35,166 --> 00:12:39,166
when I hit the ring, something

186
00:12:39,166 --> 00:12:43,166
is scoring before the basket even goes in, so let's just have a look at that!

187
00:12:43,166 --> 00:12:47,166
Ah, that's why! We haven't moved our Secondary Trigger

188
00:12:47,166 --> 00:12:51,166
down! So we need to bring it down to around about here, so that it's actually

189
00:12:51,166 --> 00:12:55,166
moving through, and it is detecting that movement through, and it looks like the

190
00:12:55,166 --> 00:12:59,166
slide that we were originally looking at. So let's test that again!

191
00:12:59,166 --> 00:13:03,166
See this is the reason we test, because you can never be sure whether you have made an

192
00:13:03,166 --> 00:13:07,166
error or not. So let's fire and try and

193
00:13:07,166 --> 00:13:11,166
aim and score. OK, now this

194
00:13:11,166 --> 00:13:15,166
seems to be working better! If we go over the top, there is

195
00:13:15,166 --> 00:13:19,166
no scoring, unless we actually go through.

196
00:13:19,166 --> 00:13:23,166
Success! Well done! That was quite a long lecture and

197
00:13:23,166 --> 00:13:27,166
I'm very please with you for getting through it with me all the way

198
00:13:27,166 --> 00:13:31,166
to the end! I'll see you in the next lecture, which will hopefully be a little bit lighter!
