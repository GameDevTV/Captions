WEBVTT

1
00:00:00.000 --> 00:00:04.000


2
00:00:04.000 --> 00:00:08.000
Welcome to

3
00:00:08.000 --> 00:00:12.000
Updating Shared Variables! The game is

4
00:00:12.000 --> 00:00:16.000
going to start to actually take form in this very lecture, so when

5
00:00:16.000 --> 00:00:20.000
you play you will be able to use the arrow keys to navigate around. As you can see,

6
00:00:20.000 --> 00:00:24.000
my location is updating, and the distance to home is also being printed, so

7
00:00:24.000 --> 00:00:28.000
I can actually navigate, on my way home, and get a message saying that I

8
00:00:28.000 --> 00:00:32.000
reached it! How cool is that?! I'm just going to show you, very very quickly, that that is indeed

9
00:00:32.000 --> 00:00:36.000
true and that you'll believe me and follow me into this lecture and

10
00:00:36.000 --> 00:00:41.000
complete, there we go, find home! So let's go home! Let's dive right in!

11
00:00:41.000 --> 00:00:45.000
So the end is so close now! We have the location

12
00:00:45.000 --> 00:00:49.000
shared between our two different methods, and that is the last building block we

13
00:00:49.000 --> 00:00:53.000
need to get this game finally working, in a fun and enjoyable way. It's the

14
00:00:53.000 --> 00:00:57.000
last building block particularly of this pseudocode, this updating

15
00:00:57.000 --> 00:01:01.000
location from home. So I know it's been a bit slow getting

16
00:01:01.000 --> 00:01:05.000
here, you've learned a lot along the way, however, and it's

17
00:01:05.000 --> 00:01:09.000
really quite amazing how you start with a plan like this, very vague,

18
00:01:09.000 --> 00:01:13.000
and suddenly, bit by bit, it all starts to come together, and you're going to see the

19
00:01:13.000 --> 00:01:17.000
results. So it's very exciting how we're going to do this, and the way we're going to do this is

20
00:01:17.000 --> 00:01:21.000
by updating the location. Now I want to talk a little bit about updating variables,

21
00:01:21.000 --> 00:01:25.000
which we've seen how we do it. We've seen how

22
00:01:25.000 --> 00:01:29.000
we, here in the Update () method, have just assigned

23
00:01:29.000 --> 00:01:33.000
a new vector to the location, but I want to show you how you can actually incorporate

24
00:01:33.000 --> 00:01:37.000
the old value of the location, in order to do this, and it's quite simple.

25
00:01:37.000 --> 00:01:41.000
Basically, we have our value in the box here. In this

26
00:01:41.000 --> 00:01:45.000
case, the value is 2 in an integer box, and what we do is, we

27
00:01:45.000 --> 00:01:49.000
take that value out of the box and apply an operation to it, such as add

28
00:01:49.000 --> 00:01:53.000
3. And then, we go and put the value back in the

29
00:01:53.000 --> 00:01:57.000
box and update and replace the old value entirely. Now

30
00:01:57.000 --> 00:02:01.000
how do we do this in code? Well with an integer, for example, we might say

31
00:02:01.000 --> 00:02:05.000
int myInt =

32
00:02:05.000 --> 00:02:09.000
2. Then, in the next line, where we want to

33
00:02:09.000 --> 00:02:13.000
update, what we can say is that my Int + 3, that's

34
00:02:13.000 --> 00:02:17.000
doing this bit here of the addition. Then, how do we

35
00:02:17.000 --> 00:02:21.000
put it back in the box? Well it's as simple as saying myInt =,

36
00:02:21.000 --> 00:02:25.000
and that's putting it in the box again. So we're taking it out of the box, adding 3, and putting it back

37
00:02:25.000 --> 00:02:29.000
in the box. That's a simple idea. Here we have something already,

38
00:02:29.000 --> 00:02:33.000
and then, we increment, it's called, we add to the thing that's already

39
00:02:33.000 --> 00:02:37.000
there, we'll replace it and update it. So that's what we want to do

40
00:02:37.000 --> 00:02:41.000
with location. In fact, that's what we're going to do! So

41
00:02:41.000 --> 00:02:45.000
we can say location = location +, and

42
00:02:45.000 --> 00:02:49.000
then, we can move the location, right. So when we hit the Left Arrow we

43
00:02:49.000 --> 00:02:53.000
move our location over to the left. Now how do we do that? Well we need a new vector,

44
00:02:53.000 --> 00:02:57.000
a vector that points in the left direction. Now let's think about this! If left

45
00:02:57.000 --> 00:03:01.000
is in this direction, so going from right to

46
00:03:01.000 --> 00:03:05.000
left, then we need to think about what our X and Y

47
00:03:05.000 --> 00:03:09.000
represent. Well X represents the horizontal axis and

48
00:03:09.000 --> 00:03:13.000
Y represents the vertical axis, and the positive

49
00:03:13.000 --> 00:03:17.000
direction for X is going to be from left to right, typically, and the positive direction from

50
00:03:17.000 --> 00:03:21.000
Y is going from bottom to top. So what we want is actually

51
00:03:21.000 --> 00:03:25.000
a -X and nothing in Y. So we're going to create a new vector

52
00:03:25.000 --> 00:03:29.000
to represent that. And what's our value going to be? Well let's say we  move just one

53
00:03:29.000 --> 00:03:33.000
unit, so that can be -1.0f and up.

54
00:03:33.000 --> 00:03:37.000
We are going to go, let's just say, 0, we're not going to

55
00:03:37.000 --> 00:03:41.000
move up at all when we hit the Left Arrow. That makes perfect sense! So let's

56
00:03:41.000 --> 00:03:45.000
see this in action! Let's go over to Unity, hit

57
00:03:45.000 --> 00:03:49.000
play, watch our Console,

58
00:03:49.000 --> 00:03:53.000
and see what it's doing! And you notice that, as I hit Left, we are going

59
00:03:53.000 --> 00:03:57.000
Left and Left and Left and Left and Left. OK perfect! So time for

60
00:03:57.000 --> 00:04:01.000
you to try this out for yourself and to update the location. I'd like you to

61
00:04:01.000 --> 00:04:05.000
repeat the process that I've just done, for right, up, and down,

62
00:04:05.000 --> 00:04:09.000
as well. We haven't done up and down before, so that's going to be a little bit of a challenge for you and a little bit of

63
00:04:09.000 --> 00:04:13.000
revision with the key codes. I would like all to see,

64
00:04:13.000 --> 00:04:17.000
can you also share the home location? Well we have already shared the home

65
00:04:17.000 --> 00:04:21.000
location, this has already been done for us. But can you use that

66
00:04:21.000 --> 00:04:25.000
home location, most importantly, with this bonus? Can you print out

67
00:04:25.000 --> 00:04:29.000
the distance to home, rather than printing out the actual location and

68
00:04:29.000 --> 00:04:33.000
giving away, essentially, the whole aim of the game, which is to find your way home. So

69
00:04:33.000 --> 00:04:37.000
pause the video, and have a go at this little challenge!

70
00:04:37.000 --> 00:04:41.000
OK welcome back! Let's tackle this together!

71
00:04:41.000 --> 00:04:45.000
So I do hope you are pausing the video, so try it. The challenge is

72
00:04:45.000 --> 00:04:49.000
the way that you need to do it to learn. OK so I'm

73
00:04:49.000 --> 00:04:53.000
going to remove these prints, we no longer need those, we just need to update these locations

74
00:04:53.000 --> 00:04:57.000
directly. I'm going to remove this, because that's old hat,

75
00:04:57.000 --> 00:05:01.000
and I'm going to copy this line

76
00:05:01.000 --> 00:05:05.000
and copy across, [Sings] blah blah blah dapa dapa doo.

77
00:05:05.000 --> 00:05:09.000
[Sings] Shooby dooby dee. And this time, Right is obviously moving

78
00:05:09.000 --> 00:05:13.000
in the positive direction. I don't have to put a plus sign to indicate the positive direction, that is by

79
00:05:13.000 --> 00:05:17.000
default. So I can copy and paste this and, you know,

80
00:05:17.000 --> 00:05:21.000
copying and pasting is not much fun. We'll learn, in the next lecture, how to avoid copying

81
00:05:21.000 --> 00:05:25.000
and pasting, but for now, I'm going to copy and paste. Just to show you the very basics,

82
00:05:25.000 --> 00:05:29.000
I'm going to do an UpArrow, I'm going to do a DownArrow. Notice how VisualStudio is

83
00:05:29.000 --> 00:05:33.000
helping me whiz through this and just allow me to type out these longer words

84
00:05:33.000 --> 00:05:37.000
very very quickly. Now Up, as I said, is vertical but

85
00:05:37.000 --> 00:05:41.000
it is going from bottom to top, so that is positive.

86
00:05:41.000 --> 00:05:45.000
Zero there, 1...

87
00:05:45.000 --> 00:05:49.000
Now, actually, I don't want to put the f. I want to make this a little bit shorter, so I'm

88
00:05:49.000 --> 00:05:53.000
going to use the integer automatic conversion to do this for

89
00:05:53.000 --> 00:05:57.000
me, like so, and

90
00:05:57.000 --> 00:06:01.000
Down is obviously going to be negative, so let's do that, too.

91
00:06:01.000 --> 00:06:05.000


92
00:06:05.000 --> 00:06:09.000
Oops! Like so! So let's

93
00:06:09.000 --> 00:06:13.000
go back into Unity, check this out!

94
00:06:13.000 --> 00:06:17.000
So now I'm moving around, let's just see if the variable

95
00:06:17.000 --> 00:06:21.000
is being updated in the Console location. Yes it is! I

96
00:06:21.000 --> 00:06:25.000
can change that location using just my keyboard! How cool

97
00:06:25.000 --> 00:06:29.000
is that! Now, what we want to do is update and print

98
00:06:29.000 --> 00:06:33.000
out the " Distance to home: " . Now we've

99
00:06:33.000 --> 00:06:37.000
already got the code that does this, it's right here, so I'm going to copy that over. So let's

100
00:06:37.000 --> 00:06:41.000
ignore the pathTo Home, we no longer want to give the game away.

101
00:06:41.000 --> 00:06:45.000
So we're going to cut this, and I'm

102
00:06:45.000 --> 00:06:49.000
going to paste it, unfortunately, in every if statement, because what we're saying

103
00:06:49.000 --> 00:06:53.000
is: Every time you get to the frame, check your Left Key

104
00:06:53.000 --> 00:06:57.000
is down. If the Left Key is down, then update the location, and then,

105
00:06:57.000 --> 00:07:01.000
update the player on their new distance from home. So that's what we're going to do.

106
00:07:01.000 --> 00:07:05.000
Ah, notice that the pathToHome has not be declared here,

107
00:07:05.000 --> 00:07:09.000
in this Update () method. So we need to copy that across to our cut it

108
00:07:09.000 --> 00:07:13.000
across, because we don't want it anymore in the Start (), it's no longer useful there.

109
00:07:13.000 --> 00:07:17.000
Oops, and I'm going to actually bring it down, just for

110
00:07:17.000 --> 00:07:21.000
ease of copying and pasting, down to here,

111
00:07:21.000 --> 00:07:25.000
because then I can select this whole block, copy it, and paste

112
00:07:25.000 --> 00:07:29.000
it into every if statement. Again with the repetition! Now we don't like repetition

113
00:07:29.000 --> 00:07:33.000
in programming, we want to make the computer do as much work for us as possible.

114
00:07:33.000 --> 00:07:37.000
But, in this case, this is just to show you the verbose

115
00:07:37.000 --> 00:07:41.000
way of doing things, that is the way with many many words,

116
00:07:41.000 --> 00:07:45.000
but, later on, we're going to show you how you can do this very very simply.

117
00:07:45.000 --> 00:07:49.000
OK, so here we are! And now, when I move you

118
00:07:49.000 --> 00:07:53.000
can see that, indeed, my distance is getting further away, and I

119
00:07:53.000 --> 00:07:57.000
can bring it back home by kind of doing a press time error.

120
00:07:57.000 --> 00:08:01.000
And there you go, when I'm home it says you're home, which is

121
00:08:01.000 --> 00:08:05.000
fantastic! So we now have the very skeleton of the game. We can do a little bit of polishing and

122
00:08:05.000 --> 00:08:09.000
refining, but basically, we are there! We are able to print out the distance

123
00:08:09.000 --> 00:08:13.000
to home and,  you know, give it even a different start location.  So if I pause the

124
00:08:13.000 --> 00:08:17.000
game, stop playing the game rather, then I can update

125
00:08:17.000 --> 00:08:21.000
the location. Notice that if you update any of these, while the game is playing,

126
00:08:21.000 --> 00:08:25.000
like so. I create 5... and stop playing, then

127
00:08:25.000 --> 00:08:29.000
those updates are lost, so it's very important that we

128
00:08:29.000 --> 00:08:33.000
set it before. So I'm going to set

129
00:08:33.000 --> 00:08:37.000
the Home Location at location like this,

130
00:08:37.000 --> 00:08:41.000
and if I hit play, then I start to move around, then

131
00:08:41.000 --> 00:08:45.000
it is going to tell me that I am not at home. So I need to

132
00:08:45.000 --> 00:08:49.000
find my way home, try and get as close as possible.

133
00:08:49.000 --> 00:08:53.000
There we go, about 10 away there, and I can

134
00:08:53.000 --> 00:08:57.000
go Down, Up Up Up Up. There we go, I am home! And you can

135
00:08:57.000 --> 00:09:01.000
see all the time the Location here, which is really hidden from the player. The Player would just be

136
00:09:01.000 --> 00:09:05.000
seeing the console in our imagination of the game. So I'm going to save the

137
00:09:05.000 --> 00:09:09.000
main scene, because we have made some modifications to these ConsolePrinter

138
00:09:09.000 --> 00:09:13.000
basic values, default values, and I've saved the file.

139
00:09:13.000 --> 00:09:17.000
Congratulations, you have linked it all together! We've got the outline of the

140
00:09:17.000 --> 00:09:21.000
whole game, so pat yourselves on the back, that is a big big step,

141
00:09:21.000 --> 00:09:25.966
and let's get on to polishing this off and making it nice and presentable! See you in the next lecture!

