1
00:00:06,733 --> 00:00:10,733
Welcome! In this video we are going to be learning how to

2
00:00:10,733 --> 00:00:14,733
not repeat ourselves, understanding the DRY principle.

3
00:00:14,733 --> 00:00:18,733
We're going to write our own methods and functions, in order to achieve

4
00:00:18,733 --> 00:00:22,733
this. We'll be calling out to methods and learning

5
00:00:22,733 --> 00:00:26,733
what that means and how to do that. And we'll be introduced to

6
00:00:26,733 --> 00:00:30,733
refactoring. Refactoring is the process of iteratively

7
00:00:30,733 --> 00:00:34,733
making our code better and easier to understand and read,

8
00:00:34,733 --> 00:00:38,733
making it just work more correctly. OK, so let's dive right in!

9
00:00:39,066 --> 00:00:42,266
So I'd like to introduce you to the DRY

10
00:00:42,266 --> 00:00:46,266
principle of programming. So the DRY principle basically states

11
00:00:46,266 --> 00:00:50,266
that you do not repeat yourself. It's very simple and

12
00:00:50,266 --> 00:00:54,266
it's basically saying that we don't want to be writing the same code over and over

13
00:00:54,266 --> 00:00:58,266
again, if we're doing that then we're doing something wrong. We need to be abtracting

14
00:00:58,266 --> 00:01:02,266
away that thing that we keep writing again and again. So is our

15
00:01:02,266 --> 00:01:06,266
code following this DRY principle? Well I'll

16
00:01:06,266 --> 00:01:10,266
let you figure it out, but I would say, given the number of these lines

17
00:01:10,266 --> 00:01:14,266
[Laughs] that look exactly the same, we are not following the DRY principle.

18
00:01:14,266 --> 00:01:18,266
And also, it's not great because it makes it hard to read, because when

19
00:01:18,266 --> 00:01:22,266
we go down this code, looking through, we

20
00:01:22,266 --> 00:01:26,266
kind of don't understand what actually it's trying to

21
00:01:26,266 --> 00:01:30,266
do. What is happening after each of these steps? We have to read very painstakingly

22
00:01:30,266 --> 00:01:34,266
to try and work out and go, oh yeah, the program is saying when I hit

23
00:01:34,266 --> 00:01:38,266
the Down Arrow, then I print out this message that

24
00:01:38,266 --> 00:01:42,266
tells...updates the user. Basically, we

25
00:01:42,266 --> 00:01:46,266
update the user's number of steps, and print out the message

26
00:01:46,266 --> 00:01:50,266
So it's not at the right sort of level of abstraction, when

27
00:01:50,266 --> 00:01:54,266
I'm reading this. And similarly, you know,  I'm in the Start () method, and what is this

28
00:01:54,266 --> 00:01:58,266
text? Well it's a welcome message, but nothing here says that it's a welcome message,

29
00:01:58,266 --> 00:02:02,266
so that's not particularly obvious. So the solution to both of the

30
00:02:02,266 --> 00:02:06,266
DRY problem and the lack of abstraction is one thing, it's a function or

31
00:02:06,266 --> 00:02:10,266
a method, as we've called them previously. This is a method but we can

32
00:02:10,266 --> 00:02:14,266
also define our own methods and that's what we're going to do now. So take this example,

33
00:02:14,266 --> 00:02:18,266
where it's not entirely obvious that what this does,

34
00:02:18,266 --> 00:02:22,266
so we can write code that documents itself, by creating a method.

35
00:02:22,266 --> 00:02:26,266
Let me just explain by doing. So I create a new method

36
00:02:26,266 --> 00:02:30,266
very much the same as Start (), except I replace the word Start with my

37
00:02:30,266 --> 00:02:34,266
method name. So I can have a void Print

38
00:02:34,266 --> 00:02:38,266
WelcomeMessage ()

39
00:02:38,266 --> 00:02:42,266
and then my squiggly brackets. And now what I can do is, I can

40
00:02:42,266 --> 00:02:46,266
cut and paste this welcome message code and put it

41
00:02:46,266 --> 00:02:50,266
in my welcome message function, my welcome message

42
00:02:50,266 --> 00:02:54,266
method. OK, so now I've got it in here,

43
00:02:54,266 --> 00:02:58,266
but how does start know that it needs to run this

44
00:02:58,266 --> 00:03:02,266
method? Well that's what's calling a method is

45
00:03:02,266 --> 00:03:06,266
all about. So you have to type out

46
00:03:06,266 --> 00:03:10,266
the name of the method, followed by some brackets, and as I said, every

47
00:03:10,266 --> 00:03:14,266
line has to end with a semicolon, when we want it to actually execute something.

48
00:03:14,266 --> 00:03:18,266
So that's what's going on here, it's saying execute or call

49
00:03:18,266 --> 00:03:22,266
the method named PrintWelcomeMessage(). Now where's that welcome

50
00:03:22,266 --> 00:03:26,266
message defined? Here in this method! And that's

51
00:03:26,266 --> 00:03:30,266
the code that gets run when this gets called. It's quite

52
00:03:30,266 --> 00:03:34,266
simple. OK, so I would like

53
00:03:34,266 --> 00:03:38,266
you to make your code DRY. I would like you to create a new

54
00:03:38,266 --> 00:03:42,266
method for that duplicated code. You see what I mean, all this code

55
00:03:42,266 --> 00:03:46,266
here? Then, I would like you to give it a

56
00:03:46,266 --> 00:03:50,266
descriptive name. So what name really describes what

57
00:03:50,266 --> 00:03:54,266
this code is doing? Then, replace the duplcate

58
00:03:54,266 --> 00:03:58,266
code with calls in.. to the function.

59
00:03:58,266 --> 00:04:02,266
OK, so I will leave that with you.

60
00:04:02,266 --> 00:04:06,266
Pause the video and have a go!

61
00:04:06,266 --> 00:04:10,266
OK welcome back! I hope you've had a go. The naming bit

62
00:04:10,266 --> 00:04:14,266
might have been particularly tricky, and we're going to struggle through that together with you.

63
00:04:14,266 --> 00:04:18,266
OK, so we're creating a new method.

64
00:04:18,266 --> 00:04:22,266
So I can create it either above here or

65
00:04:22,266 --> 00:04:26,266
below here. The important thing is it's outside of the brackets for this

66
00:04:26,266 --> 00:04:30,266
method, because that is...we can't create a method

67
00:04:30,266 --> 00:04:34,266
within a method. So I'm going to just create it

68
00:04:34,266 --> 00:04:38,266
below the Update(), and I'm going to call

69
00:04:38,266 --> 00:04:42,266
it void. Let's see, what's

70
00:04:42,266 --> 00:04:46,266
the right thing? I think it's PrintUpdateAndContinue().

71
00:04:50,266 --> 00:04:54,266
Generally we don't like writing methods that

72
00:04:54,266 --> 00:04:58,266
do two things, and so we don't like methods that have an And in them.

73
00:04:58,266 --> 00:05:02,266
But in this case, we'll make the exception because

74
00:05:02,266 --> 00:05:06,266
it is kind of doing two things and we don't want to repeat this code. So I'm

75
00:05:06,266 --> 00:05:10,266
going to just cut this code and put it in the method body,

76
00:05:10,266 --> 00:05:14,266
like so, and then, that means I can replace here

77
00:05:14,266 --> 00:05:18,266
just a PrintUpdateAndContinue(), like so.

78
00:05:18,266 --> 00:05:22,266
And I can now replace all

79
00:05:22,266 --> 00:05:26,266
those bits of code that were exactly the same, just like this.

80
00:05:30,266 --> 00:05:34,266
OK, now let's go into Unity

81
00:05:34,266 --> 00:05:38,266
and see whether that's still working, as we wanted it to before!

82
00:05:42,266 --> 00:05:46,266
Now I need to make sure it's not maximizing. It's going back to

83
00:05:46,266 --> 00:05:50,266
doing that for me. And then, we

84
00:05:50,266 --> 00:05:54,266
go into our Console and just check out

85
00:05:54,266 --> 00:05:58,266
what is going on here.

86
00:05:58,266 --> 00:06:02,266
OK, we aren't getting any output!

87
00:06:02,266 --> 00:06:06,266
So let's head back to our code

88
00:06:06,266 --> 00:06:10,266
and just have a think about what this could be doing.

89
00:06:10,266 --> 00:06:14,266
Let's talk through, as we go.

90
00:06:14,266 --> 00:06:18,266
So the first stage is we have the Start() method,

91
00:06:18,266 --> 00:06:22,266
and that is what gets called first and that calls the PrintWelcomeMessage()

92
00:06:22,266 --> 00:06:26,266
and that calls through to here. OK, well that all seems

93
00:06:26,266 --> 00:06:30,266
to be in order. And perhaps

94
00:06:30,266 --> 00:06:34,266
what's going on, if I look up here, it says "Unity Personal" "Untitled",

95
00:06:34,266 --> 00:06:38,266
so that is the problem! What we need to do is open our Main scene

96
00:06:38,266 --> 00:06:42,266
here. So once we've opened the Main scene, it says Main.unity,

97
00:06:42,266 --> 00:06:46,266
and if we hit play

98
00:06:46,266 --> 00:06:50,266
and go into the Console... OK, it

99
00:06:50,266 --> 00:06:54,266
still hasn't! So for some reason it has deleted my game object! Well that's

100
00:06:54,266 --> 00:06:58,266
a good instance to revise! We can create our

101
00:06:58,266 --> 00:07:02,266
GoHomeGame again.

102
00:07:02,266 --> 00:07:06,266
This is probably because I didn't save it properly last time.

103
00:07:06,266 --> 00:07:10,266
We can delete these two because we don't need them, and we just

104
00:07:10,266 --> 00:07:14,266
drop our script onto there again. You may not have to do this, because

105
00:07:14,266 --> 00:07:18,266
you may have saved correctly. OK, we can't do that while we're playing!

106
00:07:18,266 --> 00:07:22,266
It loses it, so I'm just going to do it one more time. Create Empty,

107
00:07:22,266 --> 00:07:26,266
GoHomeGame,

108
00:07:26,266 --> 00:07:30,266
and drag the script back on.

109
00:07:30,266 --> 00:07:34,266
And now make sure we save! You'll have to save the scene, otherwise

110
00:07:34,266 --> 00:07:38,266
things in the Hierarchy won't be saved. So

111
00:07:38,266 --> 00:07:42,266
that is an important lesson to learn and you've learned it by me making the mistake.

112
00:07:42,266 --> 00:07:46,266
Let's go into Console and there we go! We've got our welcome messages printed

113
00:07:46,266 --> 00:07:50,266
out as before, and if I click in the game,

114
00:07:50,266 --> 00:07:54,266
my arrows are behaving exactly the same way as

115
00:07:54,266 --> 00:07:58,266
before. Congratulations, that is a challenge successfully completed, and I'm looking forward to

116
00:07:58,266 --> 00:07:59,600
seeing you in the next lecture!
