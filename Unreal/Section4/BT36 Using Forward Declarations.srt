WEBVTT

1
00:00:00.000 --> 00:00:04.000
Welcome to

2
00:00:04.000 --> 00:00:08.000
Using Forward Declarations! In this video we're going to make a Barrel

3
00:00:08.000 --> 00:00:12.000
Elevate method. but that includes the need to create a barrel

4
00:00:12.000 --> 00:00:16.000
class. which we will do. And we need to include that barrel class in

5
00:00:16.000 --> 00:00:20.000
the TankAimingComponent. but we're not going to use a #include this time. we're going to use a forward

6
00:00:20.000 --> 00:00:24.000
declaration just so that we can actually change this

7
00:00:24.000 --> 00:00:28.000
thing that we hold. this private member for the barrel. from a StaticMeshComponent

8
00:00:28.000 --> 00:00:32.000
to a barrel but without doing a #include. You'll see why in the video. And then.

9
00:00:32.000 --> 00:00:36.000
in the .cpp we will do the normal #include. and we'll

10
00:00:36.000 --> 00:00:40.000
be logging out to make sure that the TankAimingComponent can call into the barrel

11
00:00:40.000 --> 00:00:45.266
and that the barrel can log to the console like so. So see you in there!

12
00:00:45.266 --> 00:00:49.266
OK. let's have some fun with a barrel class then. I'm going to make a

13
00:00:49.266 --> 00:00:53.266
new C++ class. and I'm going to ask myself. what's it going to be based on? Well.

14
00:00:53.266 --> 00:00:57.266
as we recently dealt with StaticMeshComponents. if you remember...

15
00:00:57.266 --> 00:01:01.266
Let's just take a look inside the TankAimingComponent. Where did we do that?

16
00:01:01.266 --> 00:01:05.266
Here you go. the SetBarrelReference was using the StaticMesh

17
00:01:05.266 --> 00:01:09.266
Component class. And if you remember that the barrel

18
00:01:09.266 --> 00:01:13.266
itself is indeed a static mesh. That's the class we're going to base

19
00:01:13.266 --> 00:01:17.266
our Barrel.cpp off. It's the most basic class that we can use

20
00:01:17.266 --> 00:01:21.266
and it's very relevant to the barrel. So. we're going to add a new C++ class

21
00:01:21.266 --> 00:01:25.266
and it's not going to be in the list.  So. we're going to need to show all classes and then

22
00:01:25.266 --> 00:01:29.266
look for it. There you go. StaticMesh

23
00:01:29.266 --> 00:01:33.266
Component there! So. let's go ahead! And what do we call this thing? Well. I think

24
00:01:33.266 --> 00:01:37.266
it's specifically a TankBarrel. Now. Unreal

25
00:01:37.266 --> 00:01:41.266
is going to prefix this for us with something. Do you know what it's going to prefix it for us with?

26
00:01:41.266 --> 00:01:45.266
Is it going to be U or A? If you're not sure. then it's maybe worth having a quick look at

27
00:01:45.266 --> 00:01:49.266
the Class Viewer and trying to remind yourself what the coding convention is. but

28
00:01:49.266 --> 00:01:53.266
anyway it's going to do one of those two and it's going to be U. because it's ultimately based off of Component

29
00:01:53.266 --> 00:01:57.266
rather than Actor. I should be able to show you that. but I think I need to wait until the

30
00:01:57.266 --> 00:02:01.266
class has finished compiling. before I can do anything with the Editor right now.

31
00:02:01.266 --> 00:02:05.266
So meanwhile. I noticed I've got two VisualStudio windows open.

32
00:02:05.266 --> 00:02:09.266
so I'm going to just close one of those. And here we go. Tank

33
00:02:09.266 --> 00:02:13.266
Barrel.cpp and TankBarrel.h. UTank

34
00:02:13.266 --> 00:02:17.266
Barrel based off UStaticMeshComponent. That's why it's U. because

35
00:02:17.266 --> 00:02:21.266
we're coming off a Component based class in the first place.

36
00:02:21.266 --> 00:02:25.266
Fantastic! So. that is the beginnings of this! So we said

37
00:02:25.266 --> 00:02:29.266
we need some properties for the barrel. but I'm tempted. before we put the properties in.

38
00:02:29.266 --> 00:02:33.266
to think about what the public method is. So. the public interface to this barrel is simply

39
00:02:33.266 --> 00:02:37.266
that we can. without a return value.

40
00:02:37.266 --> 00:02:41.266
Elevate() the barrel at some floating

41
00:02:41.266 --> 00:02:45.266
point DegreesPerSecond.

42
00:02:45.266 --> 00:02:49.266
OK. so that's the public interface. [Laughs] Whoah. if I could spell Elevate

43
00:02:49.266 --> 00:02:53.266
correctly! And of course. you're going to write that method. I think it would make

44
00:02:53.266 --> 00:02:57.266
sense for me to immediately pop that into the C++ file. Now. look

45
00:02:57.266 --> 00:03:01.266
at the C++ file. Has it got everything we need? I think it does! It looks very

46
00:03:01.266 --> 00:03:05.266
sparse but it actually has everything we need. I think it's

47
00:03:05.266 --> 00:03:09.266
only going to need to do these includes. so that's fine.

48
00:03:09.266 --> 00:03:13.266
void Elevate DegreesPerSecond! Of course. we are going to need to pop

49
00:03:13.266 --> 00:03:17.266
the class name in here. OK great! So now.

50
00:03:17.266 --> 00:03:21.266
we have an outline for elevating that barrel. Now some of the code is over here in the

51
00:03:21.266 --> 00:03:25.266
TankAimingComponent. "// Move the barrel a right amount this frame" and "// Give a max elevation

52
00:03:25.266 --> 00:03:29.266
speed. and the frame time". So. I'm going to take those comments. pop it in here.

53
00:03:29.266 --> 00:03:33.266
and then. I'm just going to call this method. this Barrel.

54
00:03:33.266 --> 00:03:37.266
Elevate that Barrel.

55
00:03:37.266 --> 00:03:41.266
which IntelliSense hasn't caught up with yet. And I'm going to

56
00:03:41.266 --> 00:03:45.266
pass it in a value for testing. which is going to be the end of your challenge

57
00:03:45.266 --> 00:03:49.266
anyway. of say 5 degrees per second. That should be

58
00:03:49.266 --> 00:03:53.266
easy to see. So. "// TODO remove

59
00:03:53.266 --> 00:03:57.266
magic number". because we have a magic number of

60
00:03:57.266 --> 00:04:01.266
degrees per second here. So. we're going to call Barrel->Elevate at (5) degrees per second.

61
00:04:01.266 --> 00:04:05.266
and the rest of our work for this video is going to be over here in

62
00:04:05.266 --> 00:04:09.266
the TankBarrel. But before we go any further and actually write

63
00:04:09.266 --> 00:04:13.266
Elevate. look the "class "UStaticMeshComponent" has no member

64
00:04:13.266 --> 00:04:17.266
"Elevate" ". What's this talking about? Well. remember that the barrel when we declared it in the

65
00:04:17.266 --> 00:04:21.266
AimingComponent. which is here. was a UStatic

66
00:04:21.266 --> 00:04:25.266
MeshComponent. but we are now saying that we are going to use. rather

67
00:04:25.266 --> 00:04:29.266
than a UStaticMeshComponent type of barrel. we're actually going to use a barrel

68
00:04:29.266 --> 00:04:33.266
class. So. we need to make a change here. this needs to be UTankBarrel

69
00:04:33.266 --> 00:04:37.266
in the TankAimingComponent.h.

70
00:04:37.266 --> 00:04:41.266


71
00:04:41.266 --> 00:04:45.266
UTankBarrel* like that! Now. the system doesn't know

72
00:04:45.266 --> 00:04:49.266
about tank barrels at this stage. The TankAimingComponent doesn't know anything about

73
00:04:49.266 --> 00:04:53.266
tank barrels. So. we need to find a way of telling the AimingComponent that tank

74
00:04:53.266 --> 00:04:57.266
barrels exist. so what we can do is something we haven't done before. which is something called a forward declaration.

75
00:04:57.266 --> 00:05:01.266
We can just say class UTankBarrel;

76
00:05:01.266 --> 00:05:05.266
Now. if you look at that. that's the same as saying class and then all this stuff here.

77
00:05:05.266 --> 00:05:09.266
but it's really stripped down. it's something called a forward declaration.

78
00:05:09.266 --> 00:05:13.266
And that just allows us

79
00:05:13.266 --> 00:05:17.266
to reference the type UTankBarrel here in the header file. It also makes all of

80
00:05:17.266 --> 00:05:21.266
our dependencies very explicit. without creating a chain of dependencies.

81
00:05:21.266 --> 00:05:25.266
OK. so we'll start using forward declarations like that more. And this shows

82
00:05:25.266 --> 00:05:29.266
that in a given header file. you can actually define more than one C++ class. it doesn't

83
00:05:29.266 --> 00:05:33.266
always have to correspond. Usually the name of the class is the same as the name of the file

84
00:05:33.266 --> 00:05:37.266
with a prefix. but with this forward declaration. that breaks that pattern

85
00:05:37.266 --> 00:05:41.266
and it's just a feature of C++. Cool! So we now have

86
00:05:41.266 --> 00:05:45.266
a UTankBarrel. pointer Barrel. and it starts off as null pointer. which

87
00:05:45.266 --> 00:05:49.266
is safe. So. now we can actually call Barrel

88
00:05:49.266 --> 00:05:53.266
Elevate on there. which is wonderful. but let's

89
00:05:53.266 --> 00:05:57.266
try compiling our code now and see if we actually get as far as this

90
00:05:57.266 --> 00:06:01.266
tank barrel code being called. Let's do a UE_LOG. Have I got a UE_LOG waiting over here that

91
00:06:01.266 --> 00:06:05.266
I could use? Ah yeah. let's take this log away

92
00:06:05.266 --> 00:06:09.266
from the MoveBarrelTowards. Try and only keep one log at a time. if you can help it. unless you're right in the

93
00:06:09.266 --> 00:06:13.266
middle of a problem. and then. let's just say

94
00:06:13.266 --> 00:06:17.266
("Barrel-Elevate() called")

95
00:06:17.266 --> 00:06:21.266
OK. and we don't need any qualification of that.

96
00:06:21.266 --> 00:06:25.266
We could say with speed if we wanted to. um at speed

97
00:06:25.266 --> 00:06:29.266
%f") and then you could just pass in Degrees

98
00:06:29.266 --> 00:06:33.266
PerSecond); there you go! Why not do that! Fantastic! Let's see

99
00:06:33.266 --> 00:06:37.266
if this compiles. and if the information actually gets passed through.

100
00:06:37.266 --> 00:06:41.266
given that we've made these structural changes and that the

101
00:06:41.266 --> 00:06:45.266
TankAimingComponent's barrel is now a barrel type

102
00:06:45.266 --> 00:06:49.266
rather than a StaticMeshComponent type. So. let's see what the problem is!

103
00:06:49.266 --> 00:06:53.266
So. in TankAimingComponent. on line 20.

104
00:06:53.266 --> 00:06:57.266
it can't convert from a StaticMesh to a barrel. so let's have a look and see what we need to do there.

105
00:06:57.266 --> 00:07:01.266
OK. now that's because here in the TankAiming

106
00:07:01.266 --> 00:07:05.266
Component we need to be talking about. rather than a new StaticMeshComponent. we need to be talking

107
00:07:05.266 --> 00:07:09.266
about a UTankBarrel* OK. which makes sense because

108
00:07:09.266 --> 00:07:13.266
all of the instance where we were using a plain UStaticMeshComponent. we're

109
00:07:13.266 --> 00:07:17.266
now using a barrel which is a derivation of a child of the Static

110
00:07:17.266 --> 00:07:21.266
MeshComponent. but that means that. of course. we've got to do a bit of work in the TankAiming

111
00:07:21.266 --> 00:07:25.266
Component. Let me just do a search in the current project

112
00:07:25.266 --> 00:07:29.266
for UStaticMeshComponent. without rejects and

113
00:07:29.266 --> 00:07:33.266
without case sensitivity.

114
00:07:33.266 --> 00:07:37.266
Now it can't find any

115
00:07:37.266 --> 00:07:41.266
references to that. Just in case you wonder whether I spelled it right. I can cut and paste there.

116
00:07:41.266 --> 00:07:45.266
and you can see that

117
00:07:45.266 --> 00:07:49.266
the only place it exists is in this SetBarrelReference OK.

118
00:07:49.266 --> 00:07:53.266
So. it's just here that we need to change it. so UTankBarrel*

119
00:07:53.266 --> 00:07:57.266
in the Tank.cpp. And

120
00:07:57.266 --> 00:08:01.266
then. let's go and see where else it was. and that'll also be in the Tank.h

121
00:08:01.266 --> 00:08:05.266
of course.

122
00:08:05.266 --> 00:08:09.266
UTankBarrel* right! Now. in the Tank.h. again it has no

123
00:08:09.266 --> 00:08:13.266
concept of a TankBarrel type. OK. in a moment. when IntelliSense

124
00:08:13.266 --> 00:08:17.266
catches up. it'll complain about that. So. what I want you to do is a micro challenge is.

125
00:08:17.266 --> 00:08:21.266
pause the video and make a forward declaration here in the Tank.h for the TankBarrel

126
00:08:21.266 --> 00:08:25.266
type. So go ahead. pause the video. and do that now.

127
00:08:25.266 --> 00:08:29.266
OK. so it's

128
00:08:29.266 --> 00:08:33.266
simply a question of saying class UTankBarrel;

129
00:08:33.266 --> 00:08:37.266
in here. and that will work fine. So now. it understands what this

130
00:08:37.266 --> 00:08:41.266
type is. How about in the Tank C++. when we call UTank

131
00:08:41.266 --> 00:08:45.266
Barrel* like this. Is this going to be OK? Well. let's do a compile and see what it complains about.

132
00:08:45.266 --> 00:08:49.266


133
00:08:49.266 --> 00:08:53.266
So. the basic point is that in the header file. if you need access to a type.

134
00:08:53.266 --> 00:08:57.266
then you just use a class. a forward declaration. By the way. you can

135
00:08:57.266 --> 00:09:01.266
put that word class somewhere else. You can actually put it on the line in

136
00:09:01.266 --> 00:09:05.266
question. but I'm not going to confuse you with that at the moment. it's better that we do our

137
00:09:05.266 --> 00:09:09.266
classes at the very top. for the moment. just to keep things simple. So. we should get another

138
00:09:09.266 --> 00:09:13.266
complaint. I think. from the compiler now. As it says that on TankAiming

139
00:09:13.266 --> 00:09:17.266
Component 20. it can't make a conversion. So. that's just because I didn't

140
00:09:17.266 --> 00:09:21.266
change it to UTankBarrel. Let's go recompile!

141
00:09:21.266 --> 00:09:25.266
So. it's a bit of a hassle refactoring it like this. but it wouldn't have made much sense

142
00:09:25.266 --> 00:09:29.266
for me to show you this as a tank barrel type. because that would mean I

143
00:09:29.266 --> 00:09:33.266
meant to. needed to setup the tank barrel far too early. It's only at this very

144
00:09:33.266 --> 00:09:37.266
stage now that we even need a tank barrel. so this is a good time to

145
00:09:37.266 --> 00:09:41.266
be doing it. Now. what do we get. when we compile this time? Let's try and

146
00:09:41.266 --> 00:09:45.266
see what happens! It's interesting to see the compiler errors. because

147
00:09:45.266 --> 00:09:49.266
when you start doing forward declarations for the first time you're going to get these. OK. so in TankAimingComponent

148
00:09:49.266 --> 00:09:53.266
19 it is not liking. it thinks something is

149
00:09:53.266 --> 00:09:57.266
overloaded.

150
00:09:57.266 --> 00:10:01.266
Well let's check the TankAimingComponent.h. and

151
00:10:01.266 --> 00:10:05.266
we need to change the type there. So. these are the sort of things that

152
00:10:05.266 --> 00:10:09.266
happen if you don't carefully refactor and change all of

153
00:10:09.266 --> 00:10:13.266
your references. and part of this is the syntactic noise in C++.

154
00:10:13.266 --> 00:10:17.266
of having to change things both in the header file and the C++

155
00:10:17.266 --> 00:10:21.266
file. So. we're still got an IntelliSense error here. I think that'll lead to a compilation error.

156
00:10:21.266 --> 00:10:25.266
Let's take a look and see what it says! So now. we get to the point

157
00:10:25.266 --> 00:10:29.266
I wanted to make. which is that in the TankAimingComponent C++ now it doesn't

158
00:10:29.266 --> 00:10:33.266
understand the type. Now. we can't just do a forward declaration here.

159
00:10:33.266 --> 00:10:37.266
because we actually are going to be

160
00:10:37.266 --> 00:10:41.266
calling a method on the barrel. which is

161
00:10:41.266 --> 00:10:45.266
here Barrel->GetSocketLocation. If we need to call a method. then you actually need to include

162
00:10:45.266 --> 00:10:49.266
it. So it's at this point we do need to do a full #include in the C++ file

163
00:10:49.266 --> 00:10:53.266
of Tank... What's it actually called?

164
00:10:53.266 --> 00:10:57.266
TankBarrel.h. Alright.

165
00:10:57.266 --> 00:11:01.266
now let's try and see if that'll compile! So. I hope you get the difference here.

166
00:11:01.266 --> 00:11:05.266
Basically. in a header file. all it needs to do is know

167
00:11:05.266 --> 00:11:09.266
that that type exists. and by going class and putting in a empty

168
00:11:09.266 --> 00:11:13.266
type definition. then that keeps the compiler happy as far as the header file is concerned without

169
00:11:13.266 --> 00:11:17.266
creating a chain of includes. Whereas in the C++ file. to of course. to

170
00:11:17.266 --> 00:11:21.266
actually use a class you need all of that classes code available;

171
00:11:21.266 --> 00:11:25.266
when we get down here and actually call methods. Barrel->GetSocketLocation. and that's where we need to

172
00:11:25.266 --> 00:11:29.266
do the full #include. So this is just some good practice for you. I'm going to close that window so that I don't keep

173
00:11:29.266 --> 00:11:33.266
clicking on the wrong one. and I think that hot reload worked! Here you go! "Barrel-

174
00:11:33.266 --> 00:11:37.266
Elevate() called at speed 5.000000! Great! So. a little

175
00:11:37.266 --> 00:11:41.266
bit of thinking for you there. a little bit of new stuff about forward declarations and

176
00:11:41.266 --> 00:11:45.266
classes. But we have the outline now of a barrel.

177
00:11:45.266 --> 00:11:49.266
and we can now start filling in the private properties that we're going to need in

178
00:11:49.266 --> 00:11:53.266
a barrel. which we'll do in the next video. And we have ourselves

179
00:11:53.266 --> 00:11:57.266
a new type in the TankAimingComponent. the UTank

180
00:11:57.266 --> 00:12:01.266
Barrel. So. we've moved away from the StaticMesh. and we'll use the same sort of thing

181
00:12:01.266 --> 00:12:05.266
for the turret. of course. We'll be having a UTankTurret type.

182
00:12:05.266 --> 00:12:09.266
And we are now ready to go ahead and code out that TankBarrel method!

183
00:12:09.266 --> 00:12:12.232
So I shall see you in the next video!

