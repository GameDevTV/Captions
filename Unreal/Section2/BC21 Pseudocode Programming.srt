<<<<<<< HEAD
ï»¿WEBVTT

1
00:00:00.000 --> 00:00:00.833
...

2
00:00:00.833 --> 00:00:04.000
...

3
00:00:04.000 --> 00:00:07.033
So. hi and welcome to Pseudocode Programming. In this video we'll be talking more about the Pseudocode

4
00:00:07.033 --> 00:00:12.000
Programming Practice. sometimes known as PPP. We'll review our code

5
00:00:12.000 --> 00:00:16.000
within its architecture. I'll talk about using to do as a comment prefix.

6
00:00:16.000 --> 00:00:20.000
I'll introduce you briefly to Visual Studio's Task List. which is available

7
00:00:20.000 --> 00:00:24.000
here in View and Task List and how that works.

8
00:00:24.000 --> 00:00:29.433
and then. we'll just be generally planning our next wave of coding. So. let's dive in and see it work!

9
00:00:29.433 --> 00:00:33.433
OK. so let's put the power or pseudocode in our hands and start

10
00:00:33.433 --> 00:00:37.433
making even more progress on our game. So. I'm going to start at the top of main. In fact. I'm going to move

11
00:00:37.433 --> 00:00:41.433
main to my left-hand most tab. because logically it kind of comes first.

12
00:00:41.433 --> 00:00:45.433
If it'll move to my left-hand most tab. If it won't. I'll move something else in front of it. There you go!

13
00:00:45.433 --> 00:00:49.433
So. I'm going main. then the header. then the main class definition.

14
00:00:49.433 --> 00:00:53.433
So. let's go for it! Let's take a look down our code. We have.

15
00:00:53.433 --> 00:00:57.433
in the main loop here. PlayIntro(). PlayGame(). and then. AskToPlayAgain().

16
00:00:57.433 --> 00:01:01.433
What we know that we may want to do in the future is to add a

17
00:01:01.433 --> 00:01:05.433
game summary. at the end. because it's not going to be a part of the actual

18
00:01:05.433 --> 00:01:09.433
playing of the game. I don't think. Let's take a look down to the PlayGame() method

19
00:01:09.433 --> 00:01:13.433
or function. It could go here! Arguably you could

20
00:01:13.433 --> 00:01:17.433
say "// summarise game" here. or we could

21
00:01:17.433 --> 00:01:21.433
have "// summaries game" here. I think it

22
00:01:21.433 --> 00:01:25.433
goes with the PlayGame(). so I'm going to leave it down here with PlayGame().

23
00:01:25.433 --> 00:01:29.433
So. I'm going to introduce you to a new prefix. which is TODO. and we've used

24
00:01:29.433 --> 00:01:33.433
this before but a little bit more formally now. TODO is fairly. widely accepted

25
00:01:33.433 --> 00:01:37.433
by integrated development environments. as a code for I need to

26
00:01:37.433 --> 00:01:41.433
do something here. So. once you've written TODO in Visual

27
00:01:41.433 --> 00:01:45.433
Studio. you can go to View. and then you can go to Task List here. View and Task List.

28
00:01:45.433 --> 00:01:49.433
And your IDE. if you're using a different one. may have a similar feature.

29
00:01:49.433 --> 00:01:53.433
And what it'll do is it'll show you where all of you TODO comments are. These are still

30
00:01:53.433 --> 00:01:57.433
just comments. but this can help you to organize what you're doing.

31
00:01:57.433 --> 00:02:01.433
There are some other settings on this to do with priorities. if you go to Options and then

32
00:02:01.433 --> 00:02:05.433
Task View or Task List in here. You can find

33
00:02:05.433 --> 00:02:09.433
some other things to do with setting priorities and adding other tokens. but for now.

34
00:02:09.433 --> 00:02:13.433
all I want you to know is that TODO is a good way of saying. I plan to do this in the future. It must be done

35
00:02:13.433 --> 00:02:17.433
but I can't do it right now. So. summarize the game.

36
00:02:17.433 --> 00:02:21.433
after the game is finished. That's something we need to do. and I've decided to put it inside of

37
00:02:21.433 --> 00:02:25.433
PlayGame(). because it makes more logical sense.

38
00:02:25.433 --> 00:02:29.433
So. what else do we need to do? Let's look down! Printing the info is fine. apart from the

39
00:02:29.433 --> 00:02:33.433
WORLD_LENGTH. [Laughs] Look at that. it should be WORD_LENGTH of course. so let's use the Refactor Tool

40
00:02:33.433 --> 00:02:37.433
to fix it to WORD_LENGTH. That's good!

41
00:02:37.433 --> 00:02:41.433
OK. inside PlayGame(). what are we doing? So. we're looping for the number of

42
00:02:41.433 --> 00:02:45.433
turns. but notice that we are assuming that every time we get a

43
00:02:45.433 --> 00:02:49.433
guess the guess is valid. Shortly. we're going to have to start doing input validation

44
00:02:49.433 --> 00:02:53.433
and error checking. to make sure that only valid

45
00:02:53.433 --> 00:02:57.433
guesses are entered. And at that point. we're actually not going to know how many times we need

46
00:02:57.433 --> 00:03:01.433
to go around this PlayGame() loop. because if they enter an invalid

47
00:03:01.433 --> 00:03:05.433
guess. then we're going to have to go around it again. So. what I want to do shortly

48
00:03:05.433 --> 00:03:09.433
is TODO make check for valid

49
00:03:09.433 --> 00:03:13.433
guesses. "Make loop checking

50
00:03:13.433 --> 00:03:17.433
valid". basically something like that. So. GetGuess() is going to become GetValidGuess()

51
00:03:17.433 --> 00:03:21.433
later or something. and that's going to keep persisting. until it gets a valid guess

52
00:03:21.433 --> 00:03:25.433
out of the system. And then. what it's going to do is it's going to "Submit

53
00:03:25.433 --> 00:03:29.433
valid guess

54
00:03:29.433 --> 00:03:33.433
to the game".

55
00:03:33.433 --> 00:03:37.433
OK. And then. when we submit the valid guess to the game. it's at

56
00:03:37.433 --> 00:03:41.433
that point that it'll return the number of bulls and cows. So

57
00:03:41.433 --> 00:03:45.433
after that. we're going to print number of bulls and

58
00:03:45.433 --> 00:03:49.433
cows. So. use English here. when you're using pseudocode

59
00:03:49.433 --> 00:03:53.433
programming. I'm going to try and be standard here and just use lower case.

60
00:03:53.433 --> 00:03:57.433
So. what we're going to be doing in the future is using a while loop.

61
00:03:57.433 --> 00:04:01.433
because there's going to be a couple of conditions on which we want to come out of the game.

62
00:04:01.433 --> 00:04:05.433
One is that we have expired the number of MaxTries. but it's

63
00:04:05.433 --> 00:04:09.433
not up to this for loop to count that. It's going to be up to the

64
00:04:09.433 --> 00:04:13.433
game object to count that. and we will be reading from it. GetCurrentTry()

65
00:04:13.433 --> 00:04:17.433
and making that control this loop. So. it goes from a known

66
00:04:17.433 --> 00:04:21.433
for loop to a slightly less know while loop. We'll be doing that later.

67
00:04:21.433 --> 00:04:25.433
so that's why I've said to change it from for to while loop. once we

68
00:04:25.433 --> 00:04:29.433
are validating tries

69
00:04:29.433 --> 00:04:33.433
or something like that. Now. when am I using TODO vs.

70
00:04:33.433 --> 00:04:37.433
when am I using not TODO. I'm not putting TODO in.

71
00:04:37.433 --> 00:04:41.433
when I'm adding new code or when the comment is going to stay.

72
00:04:41.433 --> 00:04:45.433
So. t his comment will stay. even when I do this TODO. and these two comments

73
00:04:45.433 --> 00:04:49.433
will stay. even once I've added the

74
00:04:49.433 --> 00:04:53.433
code below them. But this stuff. that's actually changing existing code. then

75
00:04:53.433 --> 00:04:57.433
I'll use that as a TODO. because the TODO itself will be deleted.

76
00:04:57.433 --> 00:05:01.433
OK. so hopefully it's clear when you use TODO. and when you don't...

77
00:05:01.433 --> 00:05:05.433
Like here as well. this is going to change. This GetGuess() is going to change. so I tend to use

78
00:05:05.433 --> 00:05:09.433
the TODO for something that's going to change. Alright. so let's keep going

79
00:05:09.433 --> 00:05:13.433
and thinking about the architecture. One of the things we're going to need to be able to do.

80
00:05:13.433 --> 00:05:17.433
in the game itself. is to return the number of

81
00:05:17.433 --> 00:05:21.433
bulls and cows. So. let's put something in here. We're going to have some new type. that we'll do in the

82
00:05:21.433 --> 00:05:25.433
next video. and then. we're going to Submit

83
00:05:25.433 --> 00:05:29.433
ValidGuess. and then. we're going to send in a

84
00:05:29.433 --> 00:05:33.433
string but I'm not going to say what we send it in

85
00:05:33.433 --> 00:05:37.433
detail. When you write comments. you want to try and avoid

86
00:05:37.433 --> 00:05:41.433
actually coding in those comments. so this is

87
00:05:41.433 --> 00:05:44.800
too like coding. So. I'm going to get rid of that comment

88
00:05:44.800 --> 00:05:49.433
and write more in English. You have the luxury here

89
00:05:49.433 --> 00:05:53.433
of working at a higher level of abstraction. so why would you try and get

90
00:05:53.433 --> 00:05:57.433
bogged down in the details of code. at this point. What we're trying to say we do is.

91
00:05:57.433 --> 00:06:01.433
we need to "// provide a

92
00:06:01.433 --> 00:06:05.433
method for counting

93
00:06:05.433 --> 00:06:09.433
bulls & cose and incrementing

94
00:06:09.433 --> 00:06:13.433
or increasing turn number.

95
00:06:13.433 --> 00:06:17.433
Ooh. that was my Start button. OK. so it's

96
00:06:17.433 --> 00:06:21.433
this new method that we'll put in shortly. that will provide a way of counting bulls

97
00:06:21.433 --> 00:06:25.433
and cows. It's going to return a singe entity. probably. that it contains both

98
00:06:25.433 --> 00:06:29.433
bulls and cows. We're going to use something. which is just like a class for it. as you'll see.

99
00:06:29.433 --> 00:06:33.433
and it will increase the turn number. If you've been wondering where the

100
00:06:33.433 --> 00:06:37.433
turn number is going to be increased. it's going to be inside the method that's going to be called something like

101
00:06:37.433 --> 00:06:41.433
SubmitValidGuess(). It'll spit back numbers of bulls and cows. possibly

102
00:06:41.433 --> 00:06:45.433
in error code. and then. once a valid guess come in will increase

103
00:06:45.433 --> 00:06:49.433
the turn number. Then. over in the game loop here. inside...

104
00:06:49.433 --> 00:06:53.433
Where are we? Inside PlayGame(). Let me just zoom my font out a tiny bit.

105
00:06:53.433 --> 00:06:57.433
Yeah. inside here inside PlayGame(). we won't be using this

106
00:06:57.433 --> 00:07:01.433
count here to go in this loop. as I said it becomes a while loop. OK. So.

107
00:07:01.433 --> 00:07:05.433
if we look at the interface to the Bull Cow Game. we're going to be doing things like. initially we get

108
00:07:05.433 --> 00:07:09.433
the maximum tries. Then. we keep getting current tries. Checking

109
00:07:09.433 --> 00:07:13.433
guess validity. submitting a guess using a new method we're going to write shortly.

110
00:07:13.433 --> 00:07:17.433
which will increment the turn number. or should I say try number. because the try.

111
00:07:17.433 --> 00:07:21.433
Let's try and be consistent between guess and try and turn. So. in fact.

112
00:07:21.433 --> 00:07:25.433
when I say let's be consistent between guess and try and turn. as this is a clean

113
00:07:25.433 --> 00:07:29.433
out video. let's do that. Let's do a find and see where we use Guess.

114
00:07:29.433 --> 00:07:33.433
CheckGuessValidity(). so the guess is the actual string. Let's look

115
00:07:33.433 --> 00:07:37.766
across the entire project. remember the Bull Cow Game Project. for the word guess.

116
00:07:37.766 --> 00:07:41.433
Submit valid guess. I want to make sure the guess is always

117
00:07:41.433 --> 00:07:45.433
referring to the string that the user sends in.

118
00:07:45.433 --> 00:07:49.433
GetGuess(). ". Enter your guess: ";

119
00:07:49.433 --> 00:07:53.433
Oh. I think I missed one. "Can you guess... I think that's OK! Good!

120
00:07:53.433 --> 00:07:57.433
Alright. now let's try the word turn. because I've been using the word turn

121
00:07:57.433 --> 00:08:01.433
as well. and it needs to be a whole word. So. to search for a whole word you can

122
00:08:01.433 --> 00:08:05.433
use this thing here. match whole word. I don't use the word turn

123
00:08:05.433 --> 00:08:09.433
anywhere in the project. Good! So then. I use the word try. which is the number

124
00:08:09.433 --> 00:08:13.433
of times that the use has guessed. or the guess

125
00:08:13.433 --> 00:08:17.433
number is the try and that's good! So. when you hear yourself saying. oh we really should be

126
00:08:17.433 --> 00:08:21.433
consistent with that. do that sort of thing. Do a find and replace and get everything

127
00:08:21.433 --> 00:08:25.433
tidied up and tightened up. We want to be doing this type of refactoring and tightening up

128
00:08:25.433 --> 00:08:29.433
very frequently. So. my challenge to you now.

129
00:08:29.433 --> 00:08:33.433
and there won't be a solution because I've basically done it for myself. is I want you to go through your code

130
00:08:33.433 --> 00:08:37.433
and make sure it makes sense to you firstly. I want you to action any existing TODO's

131
00:08:37.433 --> 00:08:41.433
that you can action. write any new TODO's for tasks that

132
00:08:41.433 --> 00:08:45.433
must be done in the future. do not use code in your comments.

133
00:08:45.433 --> 00:08:49.433
and give yourself the gift of working at this higher level of abstraction.

134
00:08:49.433 --> 00:08:53.433
Start writing English statements about what you want it to do in the future. Then. we'll come behind

135
00:08:53.433 --> 00:08:57.433
and we'll start coding from that. So. go ahead.

136
00:08:57.433 --> 00:09:01.433
stop the video now because I'm not going to come back until the next video. And I'll see you in the next lecture.

137
00:09:01.433 --> 00:09:05.433
when we'll talk about using structures. for returning these bulls and cows in one go!

138
00:09:05.433 --> 00:09:05.733
...
=======

1
00:00:00,000 --> 00:00:00,833
...

2
00:00:00,833 --> 00:00:04,000
...

3
00:00:04,000 --> 00:00:07,033
So, hi and welcome to Pseudocode Programming. In this video we'll be talking more about the Pseudocode

4
00:00:07,033 --> 00:00:12,000
Programming Practice, sometimes known as PPP. We'll review our code

5
00:00:12,000 --> 00:00:16,000
within its architecture. I'll talk about using to do as a comment prefix,

6
00:00:16,000 --> 00:00:20,000
I'll introduce you briefly to Visual Studio's Task List, which is available

7
00:00:20,000 --> 00:00:24,000
here in View and Task List and how that works,

8
00:00:24,000 --> 00:00:29,433
and then, we'll just be generally planning our next wave of coding. So, let's dive in and see it work!

9
00:00:29,433 --> 00:00:33,433
OK, so let's put the power or pseudocode in our hands and start

10
00:00:33,433 --> 00:00:37,433
making even more progress on our game. So, I'm going to start at the top of main. In fact, I'm going to move

11
00:00:37,433 --> 00:00:41,433
main to my left-hand most tab, because logically it kind of comes first.

12
00:00:41,433 --> 00:00:45,433
If it'll move to my left-hand most tab. If it won't, I'll move something else in front of it. There you go!

13
00:00:45,433 --> 00:00:49,433
So, I'm going main, then the header, then the main class definition.

14
00:00:49,433 --> 00:00:53,433
So, let's go for it! Let's take a look down our code. We have,

15
00:00:53,433 --> 00:00:57,433
in the main loop here, PlayIntro(), PlayGame(), and then, AskToPlayAgain().

16
00:00:57,433 --> 00:01:01,433
What we know that we may want to do in the future is to add a

17
00:01:01,433 --> 00:01:05,433
game summary, at the end, because it's not going to be a part of the actual

18
00:01:05,433 --> 00:01:09,433
playing of the game, I don't think. Let's take a look down to the PlayGame() method

19
00:01:09,433 --> 00:01:13,433
or function. It could go here! Arguably you could

20
00:01:13,433 --> 00:01:17,433
say "// summarise game" here, or we could

21
00:01:17,433 --> 00:01:21,433
have "// summaries game" here. I think it

22
00:01:21,433 --> 00:01:25,433
goes with the PlayGame(), so I'm going to leave it down here with PlayGame().

23
00:01:25,433 --> 00:01:29,433
So, I'm going to introduce you to a new prefix, which is TODO, and we've used

24
00:01:29,433 --> 00:01:33,433
this before but a little bit more formally now. TODO is fairly, widely accepted

25
00:01:33,433 --> 00:01:37,433
by integrated development environments, as a code for I need to

26
00:01:37,433 --> 00:01:41,433
do something here. So, once you've written TODO in Visual

27
00:01:41,433 --> 00:01:45,433
Studio, you can go to View, and then you can go to Task List here. View and Task List.

28
00:01:45,433 --> 00:01:49,433
And your IDE, if you're using a different one, may have a similar feature.

29
00:01:49,433 --> 00:01:53,433
And what it'll do is it'll show you where all of you TODO comments are. These are still

30
00:01:53,433 --> 00:01:57,433
just comments, but this can help you to organize what you're doing.

31
00:01:57,433 --> 00:02:01,433
There are some other settings on this to do with priorities, if you go to Options and then

32
00:02:01,433 --> 00:02:05,433
Task View or Task List in here. You can find

33
00:02:05,433 --> 00:02:09,433
some other things to do with setting priorities and adding other tokens, but for now,

34
00:02:09,433 --> 00:02:13,433
all I want you to know is that TODO is a good way of saying, I plan to do this in the future. It must be done

35
00:02:13,433 --> 00:02:17,433
but I can't do it right now. So, summarize the game,

36
00:02:17,433 --> 00:02:21,433
after the game is finished. That's something we need to do, and I've decided to put it inside of

37
00:02:21,433 --> 00:02:25,433
PlayGame(), because it makes more logical sense.

38
00:02:25,433 --> 00:02:29,433
So, what else do we need to do? Let's look down! Printing the info is fine, apart from the

39
00:02:29,433 --> 00:02:33,433
WORLD_LENGTH. [Laughs] Look at that, it should be WORD_LENGTH of course, so let's use the Refactor Tool

40
00:02:33,433 --> 00:02:37,433
to fix it to WORD_LENGTH. That's good!

41
00:02:37,433 --> 00:02:41,433
OK, inside PlayGame(), what are we doing? So, we're looping for the number of

42
00:02:41,433 --> 00:02:45,433
turns, but notice that we are assuming that every time we get a

43
00:02:45,433 --> 00:02:49,433
guess the guess is valid. Shortly, we're going to have to start doing input validation

44
00:02:49,433 --> 00:02:53,433
and error checking, to make sure that only valid

45
00:02:53,433 --> 00:02:57,433
guesses are entered. And at that point, we're actually not going to know how many times we need

46
00:02:57,433 --> 00:03:01,433
to go around this PlayGame() loop, because if they enter an invalid

47
00:03:01,433 --> 00:03:05,433
guess, then we're going to have to go around it again. So, what I want to do shortly

48
00:03:05,433 --> 00:03:09,433
is TODO make check for valid

49
00:03:09,433 --> 00:03:13,433
guesses. "Make loop checking

50
00:03:13,433 --> 00:03:17,433
valid", basically something like that. So, GetGuess() is going to become GetValidGuess()

51
00:03:17,433 --> 00:03:21,433
later or something, and that's going to keep persisting, until it gets a valid guess

52
00:03:21,433 --> 00:03:25,433
out of the system. And then, what it's going to do is it's going to "Submit

53
00:03:25,433 --> 00:03:29,433
valid guess

54
00:03:29,433 --> 00:03:33,433
to the game".

55
00:03:33,433 --> 00:03:37,433
OK. And then, when we submit the valid guess to the game, it's at

56
00:03:37,433 --> 00:03:41,433
that point that it'll return the number of bulls and cows. So

57
00:03:41,433 --> 00:03:45,433
after that, we're going to print number of bulls and

58
00:03:45,433 --> 00:03:49,433
cows. So, use English here, when you're using pseudocode

59
00:03:49,433 --> 00:03:53,433
programming. I'm going to try and be standard here and just use lower case.

60
00:03:53,433 --> 00:03:57,433
So, what we're going to be doing in the future is using a while loop,

61
00:03:57,433 --> 00:04:01,433
because there's going to be a couple of conditions on which we want to come out of the game.

62
00:04:01,433 --> 00:04:05,433
One is that we have expired the number of MaxTries, but it's

63
00:04:05,433 --> 00:04:09,433
not up to this for loop to count that. It's going to be up to the

64
00:04:09,433 --> 00:04:13,433
game object to count that, and we will be reading from it, GetCurrentTry()

65
00:04:13,433 --> 00:04:17,433
and making that control this loop. So, it goes from a known

66
00:04:17,433 --> 00:04:21,433
for loop to a slightly less know while loop. We'll be doing that later,

67
00:04:21,433 --> 00:04:25,433
so that's why I've said to change it from for to while loop, once we

68
00:04:25,433 --> 00:04:29,433
are validating tries

69
00:04:29,433 --> 00:04:33,433
or something like that. Now, when am I using TODO vs.

70
00:04:33,433 --> 00:04:37,433
when am I using not TODO. I'm not putting TODO in,

71
00:04:37,433 --> 00:04:41,433
when I'm adding new code or when the comment is going to stay.

72
00:04:41,433 --> 00:04:45,433
So, t his comment will stay, even when I do this TODO, and these two comments

73
00:04:45,433 --> 00:04:49,433
will stay, even once I've added the

74
00:04:49,433 --> 00:04:53,433
code below them. But this stuff, that's actually changing existing code, then

75
00:04:53,433 --> 00:04:57,433
I'll use that as a TODO, because the TODO itself will be deleted.

76
00:04:57,433 --> 00:05:01,433
OK, so hopefully it's clear when you use TODO, and when you don't...

77
00:05:01,433 --> 00:05:05,433
Like here as well, this is going to change. This GetGuess() is going to change, so I tend to use

78
00:05:05,433 --> 00:05:09,433
the TODO for something that's going to change. Alright, so let's keep going

79
00:05:09,433 --> 00:05:13,433
and thinking about the architecture. One of the things we're going to need to be able to do,

80
00:05:13,433 --> 00:05:17,433
in the game itself, is to return the number of

81
00:05:17,433 --> 00:05:21,433
bulls and cows. So, let's put something in here. We're going to have some new type, that we'll do in the

82
00:05:21,433 --> 00:05:25,433
next video, and then, we're going to Submit

83
00:05:25,433 --> 00:05:29,433
ValidGuess, and then, we're going to send in a

84
00:05:29,433 --> 00:05:33,433
string but I'm not going to say what we send it in

85
00:05:33,433 --> 00:05:37,433
detail. When you write comments, you want to try and avoid

86
00:05:37,433 --> 00:05:41,433
actually coding in those comments, so this is

87
00:05:41,433 --> 00:05:44,800
too like coding. So, I'm going to get rid of that comment

88
00:05:44,800 --> 00:05:49,433
and write more in English. You have the luxury here

89
00:05:49,433 --> 00:05:53,433
of working at a higher level of abstraction, so why would you try and get

90
00:05:53,433 --> 00:05:57,433
bogged down in the details of code, at this point. What we're trying to say we do is,

91
00:05:57,433 --> 00:06:01,433
we need to "// provide a

92
00:06:01,433 --> 00:06:05,433
method for counting

93
00:06:05,433 --> 00:06:09,433
bulls & cose and incrementing

94
00:06:09,433 --> 00:06:13,433
or increasing turn number.

95
00:06:13,433 --> 00:06:17,433
Ooh, that was my Start button. OK, so it's

96
00:06:17,433 --> 00:06:21,433
this new method that we'll put in shortly, that will provide a way of counting bulls

97
00:06:21,433 --> 00:06:25,433
and cows. It's going to return a singe entity, probably, that it contains both

98
00:06:25,433 --> 00:06:29,433
bulls and cows. We're going to use something, which is just like a class for it, as you'll see,

99
00:06:29,433 --> 00:06:33,433
and it will increase the turn number. If you've been wondering where the

100
00:06:33,433 --> 00:06:37,433
turn number is going to be increased, it's going to be inside the method that's going to be called something like

101
00:06:37,433 --> 00:06:41,433
SubmitValidGuess(). It'll spit back numbers of bulls and cows, possibly

102
00:06:41,433 --> 00:06:45,433
in error code, and then, once a valid guess come in will increase

103
00:06:45,433 --> 00:06:49,433
the turn number. Then, over in the game loop here, inside...

104
00:06:49,433 --> 00:06:53,433
Where are we? Inside PlayGame(). Let me just zoom my font out a tiny bit.

105
00:06:53,433 --> 00:06:57,433
Yeah, inside here inside PlayGame(), we won't be using this

106
00:06:57,433 --> 00:07:01,433
count here to go in this loop, as I said it becomes a while loop. OK. So,

107
00:07:01,433 --> 00:07:05,433
if we look at the interface to the Bull Cow Game, we're going to be doing things like, initially we get

108
00:07:05,433 --> 00:07:09,433
the maximum tries. Then, we keep getting current tries. Checking

109
00:07:09,433 --> 00:07:13,433
guess validity, submitting a guess using a new method we're going to write shortly,

110
00:07:13,433 --> 00:07:17,433
which will increment the turn number, or should I say try number, because the try.

111
00:07:17,433 --> 00:07:21,433
Let's try and be consistent between guess and try and turn. So, in fact,

112
00:07:21,433 --> 00:07:25,433
when I say let's be consistent between guess and try and turn, as this is a clean

113
00:07:25,433 --> 00:07:29,433
out video, let's do that. Let's do a find and see where we use Guess.

114
00:07:29,433 --> 00:07:33,433
CheckGuessValidity(), so the guess is the actual string. Let's look

115
00:07:33,433 --> 00:07:37,766
across the entire project, remember the Bull Cow Game Project, for the word guess.

116
00:07:37,766 --> 00:07:41,433
Submit valid guess. I want to make sure the guess is always

117
00:07:41,433 --> 00:07:45,433
referring to the string that the user sends in.

118
00:07:45,433 --> 00:07:49,433
GetGuess(), ". Enter your guess: ";

119
00:07:49,433 --> 00:07:53,433
Oh, I think I missed one. "Can you guess... I think that's OK! Good!

120
00:07:53,433 --> 00:07:57,433
Alright, now let's try the word turn, because I've been using the word turn

121
00:07:57,433 --> 00:08:01,433
as well, and it needs to be a whole word. So, to search for a whole word you can

122
00:08:01,433 --> 00:08:05,433
use this thing here, match whole word. I don't use the word turn

123
00:08:05,433 --> 00:08:09,433
anywhere in the project. Good! So then, I use the word try, which is the number

124
00:08:09,433 --> 00:08:13,433
of times that the use has guessed, or the guess

125
00:08:13,433 --> 00:08:17,433
number is the try and that's good! So, when you hear yourself saying, oh we really should be

126
00:08:17,433 --> 00:08:21,433
consistent with that, do that sort of thing. Do a find and replace and get everything

127
00:08:21,433 --> 00:08:25,433
tidied up and tightened up. We want to be doing this type of refactoring and tightening up

128
00:08:25,433 --> 00:08:29,433
very frequently. So, my challenge to you now,

129
00:08:29,433 --> 00:08:33,433
and there won't be a solution because I've basically done it for myself, is I want you to go through your code

130
00:08:33,433 --> 00:08:37,433
and make sure it makes sense to you firstly. I want you to action any existing TODO's

131
00:08:37,433 --> 00:08:41,433
that you can action, write any new TODO's for tasks that

132
00:08:41,433 --> 00:08:45,433
must be done in the future, do not use code in your comments,

133
00:08:45,433 --> 00:08:49,433
and give yourself the gift of working at this higher level of abstraction.

134
00:08:49,433 --> 00:08:53,433
Start writing English statements about what you want it to do in the future. Then, we'll come behind

135
00:08:53,433 --> 00:08:57,433
and we'll start coding from that. So, go ahead,

136
00:08:57,433 --> 00:09:01,433
stop the video now because I'm not going to come back until the next video. And I'll see you in the next lecture,

137
00:09:01,433 --> 00:09:05,433
when we'll talk about using structures, for returning these bulls and cows in one go!

138
00:09:05,433 --> 00:09:05,733
...
>>>>>>> 1d882d5df15102d9c45644c583da4ffc34bcfea1
