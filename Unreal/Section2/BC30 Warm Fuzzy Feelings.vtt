WEBVTT

1
00:00:00.000 --> 00:00:04.000


2
00:00:04.000 --> 00:00:08.000
So hey, welcome to warm fuzzy feelings! In this video, we're going to learn to

3
00:00:08.000 --> 00:00:12.000
listen to our gut, when we say that things don't quite feel right. To remove

4
00:00:12.000 --> 00:00:16.000
compiler warnings and not get comfortable with them, and to refactor code

5
00:00:16.000 --> 00:00:20.000
that actually doesn't need refactoring, so that we have removed that

6
00:00:20.000 --> 00:00:24.000
needling feeling that, that problem with the WORD_LENGTH, what was causing

7
00:00:24.000 --> 00:00:28.000
it, and what was going on. Let's get to the bottom of that, even though we've

8
00:00:28.000 --> 00:00:31.766
patched over it. Let's not patch over problems, let's get to the base of them.

9
00:00:31.766 --> 00:00:35.766
So, welcome back fine people! The first thing I want to do

10
00:00:35.766 --> 00:00:39.766
is remove the compiler warning that we have. I don't like leaving this

11
00:00:39.766 --> 00:00:43.766
in. We have " 'GetValidGuess': not all control paths return

12
00:00:43.766 --> 00:00:47.766
a value". Now, let's remind ourselves why that happens. It happens because the computer doesn't

13
00:00:47.766 --> 00:00:51.766
realize that we could go around this loop forever, basically, with

14
00:00:51.766 --> 00:00:55.766
the user never ever submitting a valid guess. So, if we look in our

15
00:00:55.766 --> 00:00:59.766
code and see where that actually manifests, it's under the GetValidGuessMethod() here,

16
00:00:59.766 --> 00:01:03.766
and it's because it doesn't realize that this

17
00:01:03.766 --> 00:01:07.766
load of case statements are jointly exhaustive. Not the same as

18
00:01:07.766 --> 00:01:11.766
mutually exclusive, my philosopher friends tell me, but it doesn't realize these are jointly exhaustive

19
00:01:11.766 --> 00:01:15.766
and it doesn't connect the idea of return Guess here, with the exiting of the

20
00:01:15.766 --> 00:01:19.766
loop. So the first thing I want to do is just remove this error, because we shouldn't

21
00:01:19.766 --> 00:01:23.766
ignore warnings. We've ignored it long enough, and at this stage,

22
00:01:23.766 --> 00:01:27.766
you will start to develop like a scab over that and think to yourself, well it's OK to

23
00:01:27.766 --> 00:01:31.766
ignore warnings. It's not really, let's get rid of it. OK, so I want to instill

24
00:01:31.766 --> 00:01:35.766
all that into you. So, it's going to be a challenge for you to try and get rid

25
00:01:35.766 --> 00:01:39.766
of this warning, by slightly refactoring this method. Now, if that's above your head, don't worry

26
00:01:39.766 --> 00:01:43.766
about it, but just have a go see how you get. Maybe close Visual Studio,

27
00:01:43.766 --> 00:01:47.766
take a .zip of the project file, so you can go back, or if you're using source

28
00:01:47.766 --> 00:01:51.766
control, make a commit. And then, come back and have a go,

29
00:01:51.766 --> 00:01:55.766
try and remove the error. If you mess up your code and you can't even get it to compile, don't worry,

30
00:01:55.766 --> 00:01:59.766
just watch my solution. But if you're advanced enough, let's get rid of this error, refactor.

31
00:01:59.766 --> 00:02:03.766
So, here's your challenge!

32
00:02:03.766 --> 00:02:07.766
OK, so welcome back! Now, the way that I'm going to remove

33
00:02:07.766 --> 00:02:11.766
this problem is, I'm going to lift my guess here just to a

34
00:02:11.766 --> 00:02:15.766
higher level. I'm going to define the guess, up at the top, before we even go into the loop.

35
00:02:15.766 --> 00:02:19.766
So I declare it! I'm going to declare it before we even go into the loop! What that allows me to do,

36
00:02:19.766 --> 00:02:23.766
further down, is rather than returning the guess here under default,

37
00:02:23.766 --> 00:02:27.766
it allows me to return the guess after we leave the loop.

38
00:02:27.766 --> 00:02:31.766
So, if we return the guess after we've left the loop, we can be sure that every single

39
00:02:31.766 --> 00:02:35.766
code path returns a value, because we're always going to eventually get out of here, right

40
00:02:35.766 --> 00:02:39.766
I don't want to remove, however, the default case. I think it's a good practice to

41
00:02:39.766 --> 00:02:43.766
always think about what happens, if you don't catch things in your case statements.

42
00:02:43.766 --> 00:02:47.766
Now this case, the default means that we're assuming, and it is

43
00:02:47.766 --> 00:02:51.766
an assumption, but we're assuming the guess is valid.

44
00:02:51.766 --> 00:02:55.766
As we've exhausted all of our checks, so we assume the guess is valid, and

45
00:02:55.766 --> 00:02:59.766
because it wants some code in here, we're just going to put a break in. OK.

46
00:02:59.766 --> 00:03:03.766
Now, let's try that! You see the error

47
00:03:03.766 --> 00:03:07.766
has gone away, and it still works! Now, you may say, why am I even doing anything

48
00:03:07.766 --> 00:03:11.766
with valid guesses here, when we've already kind of patched over the problem?

49
00:03:11.766 --> 00:03:15.766
Well, that leads me into the next topic. I don't want to leave nasty

50
00:03:15.766 --> 00:03:19.766
code behind the scenes, when we've solved the problem. We've solved the problem of the

51
00:03:19.766 --> 00:03:23.766
length of the letters, because we will now will no longer allow the user

52
00:03:23.766 --> 00:03:27.766
to submit a guess of an invalid length.

53
00:03:27.766 --> 00:03:31.766
However, the problems that it was causing beforehand are still there behind the scenes

54
00:03:31.766 --> 00:03:35.766
and that's not a nice thing. And where are they? Well, they're in

55
00:03:35.766 --> 00:03:39.766
the SubmitGuess() method. The SubmitGuess() method has

56
00:03:39.766 --> 00:03:43.766
some issues. Now, the first issue is with its name. It's not really just

57
00:03:43.766 --> 00:03:47.766
SubmitGuess() is it? It's SubmitValidGuess()! So, let's rename it to SubmitValidGuess()!

58
00:03:47.766 --> 00:03:51.766
Control, R. Control, R, with it highlighted, enter the word,

59
00:03:51.766 --> 00:03:55.766
and let the Refactor Tool go through and do it, but I would test immediately it still runs

60
00:03:55.766 --> 00:03:59.766
because it doesn't always work, that tool.

61
00:03:59.766 --> 00:04:03.766
OK, that's good! Now, let's also go and have a look at the

62
00:04:03.766 --> 00:04:07.766
SubmitValidGuess() definition. And I want to make a few improvements to this.

63
00:04:07.766 --> 00:04:11.766
Firstly, it's a bit long, it doesn't fit on the screen. It's a bit of a pill to swallow. We don't need to

64
00:04:11.766 --> 00:04:15.766
comment to say that MyCurrentTry() "increments of the turn number". First,

65
00:04:15.766 --> 00:04:19.766
we've got an inconsistency between turn and try, and that's the problem, by the way, with comments.

66
00:04:19.766 --> 00:04:23.766
Of course, as soon as you change your code, they go out of sync. If it's not necessary to say what it does

67
00:04:23.766 --> 00:04:27.766
don't say what it does, the code says what it does. Setup a return value. Come on,

68
00:04:27.766 --> 00:04:31.766
we don't need to say that. Alright, now there's another issue, "loop through all letters in the

69
00:04:31.766 --> 00:04:35.766
guess". Well, yeah but then we, on this outer loop,

70
00:04:35.766 --> 00:04:39.766
we seem to be looping through all letters in the HiddenWord, so let's switch this

71
00:04:39.766 --> 00:04:43.766
around. This should say hidden word, and this guy here should say

72
00:04:43.766 --> 00:04:47.766
guess. OK, now there's another thing. This

73
00:04:47.766 --> 00:04:51.766
HiddenWordLength we've used in both cases, but in one case, we're going through the HiddenWord

74
00:04:51.766 --> 00:04:55.766
and the other we're going through the guess. Now, that's OK because they must be the same length,

75
00:04:55.766 --> 00:04:59.766
but let's make that more explicit. Let's rename HiddenWordLength

76
00:04:59.766 --> 00:05:03.766
to just WordLength, which immediately raises

77
00:05:03.766 --> 00:05:07.766
the question, which word? Which is fine! Let's comment to explain what

78
00:05:07.766 --> 00:05:11.766
we're doing, assuming the

79
00:05:11.766 --> 00:05:15.766
same length as Guess. Now, we've also

80
00:05:15.766 --> 00:05:19.766
said "receives a VALID guess" up here. We've documented the whole method, we've changed

81
00:05:19.766 --> 00:05:23.766
the method name. This method is dependent on receiving a valid guess.

82
00:05:23.766 --> 00:05:27.766
Why don't we do the verification inside the submit method? Because we

83
00:05:27.766 --> 00:05:31.766
want to be able to do this sort of thing, where we submit invalid

84
00:05:31.766 --> 00:05:35.766
guesses and we never even call the submit guess method.

85
00:05:35.766 --> 00:05:39.766
We're just checking it, checking it, checking it, until finally the user puts something

86
00:05:39.766 --> 00:05:43.766
sensible in and then, we SubmitValidGuess(), and we can immediately then increment

87
00:05:43.766 --> 00:05:47.766
the turn number and do all the other good stuff. Alright, so using WORD_LENGTH is

88
00:05:47.766 --> 00:05:51.766
a little ambiguous there, but then, we say that we're assuming it equals the guess. This is

89
00:05:51.766 --> 00:05:55.766
one approach, there are lots of other ways we could do all of this. And then, the rest of this,

90
00:05:55.766 --> 00:05:59.766
I think, is absolutely fine! Now, this method fits on one page now, which makes

91
00:05:59.766 --> 00:06:03.766
me feel happy. Of course it's very arbitrary, sure I could turn my font size down, but the way

92
00:06:03.766 --> 00:06:07.766
I've got it setup, you can read it easily and our brains can hold this in

93
00:06:07.766 --> 00:06:11.766
context in one go, which is great! So, that's really all I wanted to

94
00:06:11.766 --> 00:06:15.766
do here, to improve this method. Even though it's not giving problems anymore, it is a

95
00:06:15.766 --> 00:06:19.766
good habit to not let yourself sit with the discomfort of the fact that your code

96
00:06:19.766 --> 00:06:23.766
was misbehaving OK. Even when you side step around the problem,

97
00:06:23.766 --> 00:06:27.766
go back and just fix the underlying problem. You want to feel good about your stuff!

98
00:06:27.766 --> 00:06:31.599
OK, that's it, that's the moral of this lesson! I will see you in the next video!

