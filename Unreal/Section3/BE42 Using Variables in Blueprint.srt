
1
00:00:00,000 --> 00:00:04,000


2
00:00:04,000 --> 00:00:08,000
Welcome to Using Variables in Blueprint! In this video,

3
00:00:08,000 --> 00:00:12,000
firstly not all doors have the same absolute rotation. I've put my doors in a particular

4
00:00:12,000 --> 00:00:16,000
way, but your doors might be on different walls right or your door and it might be

5
00:00:16,000 --> 00:00:20,000
opening strange. It might open to 90 degrees at start and then close

6
00:00:20,000 --> 00:00:24,000
and do the opposite. Whatever, it may not be behaving right! There's a good reason for it!

7
00:00:24,000 --> 00:00:28,000
We want to store the door's rotation at BeginPlay(), at the start of the game.

8
00:00:28,000 --> 00:00:32,000
Then, we want to use this value to make a relative rotation. The

9
00:00:32,000 --> 00:00:36,000
door opens 90 degrees relative, not to 90 degrees, or minus

10
00:00:36,000 --> 00:00:40,000
90 degrees. That was a world space, a global opening

11
00:00:40,000 --> 00:00:44,000
angle. We want wherever the door is to open through 90 degrees, not

12
00:00:44,000 --> 00:00:48,000
to 90 degrees and we can use blueprint variables for this!

13
00:00:48,000 --> 00:00:52,000
And by the end of it, we're making doors that can face and

14
00:00:52,000 --> 00:00:56,000
work in any direction. So, let's dive in and make it happen!

15
00:00:56,000 --> 00:01:00,000
OK, so let's take a look at this! I've got two doors here, I've just kind of

16
00:01:00,000 --> 00:01:04,000
casually left them there while I've been playing. But what I'm going to do is, I'm going to actually

17
00:01:04,000 --> 00:01:08,000
introduce a third door at a different angle. So, I'm going to select a door and

18
00:01:08,000 --> 00:01:12,000
actually its frame, holding down Shift, so I've used Shift to select the

19
00:01:12,000 --> 00:01:16,000
two. I'm going to grab the Alt Key, holding down Alt right now, and

20
00:01:16,000 --> 00:01:20,000
then, I'm just going to pull this door out and then spin it around. I'll place it in a wall

21
00:01:20,000 --> 00:01:24,000
a little bit later on. For now, I actually want all three doors

22
00:01:24,000 --> 00:01:28,000
just so I can easily test. So, here's our third door, let's see the

23
00:01:28,000 --> 00:01:32,000
problem. As I come over, in fact, let me just move this door into the light.

24
00:01:32,000 --> 00:01:36,000
See the light little door, because then I'll be able to well see

25
00:01:36,000 --> 00:01:40,000
what's going on. [Sings] Skipity beepy dee! There it is, over there! OK, let's just see the

26
00:01:40,000 --> 00:01:44,000
problem. The problem is that door immediately opens. Why does that door immediately open,

27
00:01:44,000 --> 00:01:48,000
and what happens when I stand on the pressure pad? It closes! It's doing exactly the

28
00:01:48,000 --> 00:01:52,000
wrong thing. Now, why is it doing exactly the wrong thing? Do you know?

29
00:01:52,000 --> 00:01:56,000
Well, let's take a look at the blueprint! All the behavior of the doors is in the blueprint

30
00:01:56,000 --> 00:02:00,000
now. Remember we make the decision that we come out of C++ over here in the Events, and we do everything

31
00:02:00,000 --> 00:02:04,000
in Blueprint. Well, the reason is this, isn't it, that the timeline

32
00:02:04,000 --> 00:02:08,000
for this open door starts with a rotation of 0. Now, remember that's an absolute

33
00:02:08,000 --> 00:02:12,000
rotation. So, if I go back to the Unreal Editor

34
00:02:12,000 --> 00:02:16,000
and have a little look at this door, if I hit the rotation key and go to details,

35
00:02:16,000 --> 00:02:20,000
you can see now that the rotation of this door,

36
00:02:20,000 --> 00:02:24,000
the door itself... There you go, let's have a look!

37
00:02:24,000 --> 00:02:28,000
What is the rotation of the door? Well, we have

38
00:02:28,000 --> 00:02:32,000
-90 and 0 is here. So, what's happening

39
00:02:32,000 --> 00:02:36,000
is it's setting the world space, the absolute rotation, to 0

40
00:02:36,000 --> 00:02:40,000
and then, it's closing it back to -90. These other guys are already at

41
00:02:40,000 --> 00:02:44,000
a rotation of 0. This guy needs to start at -90. So, we

42
00:02:44,000 --> 00:02:48,000
need to capture the initial rotation of the door, that's the point. How are we going to

43
00:02:48,000 --> 00:02:52,000
do that? Well, let's go take another little look at the Blueprint and I'll show you a cool way of doing it.

44
00:02:52,000 --> 00:02:56,000
Back to the Event Graph! So, the first thing we need to do is we need

45
00:02:56,000 --> 00:03:00,000
to capture the BeginPlay() node, not being but

46
00:03:00,000 --> 00:03:04,000
"beginplay". So, go find your BeginPlay

47
00:03:04,000 --> 00:03:08,000
node there! Alright, now that's going to be called, obviously, at BeginPlay. It's exactly

48
00:03:08,000 --> 00:03:12,000
the same as the BeginPlay() method in your code. Now, what I want to do on

49
00:03:12,000 --> 00:03:16,000
BeginPlay() is I want to "getactor" rotation.

50
00:03:16,000 --> 00:03:20,000
OK, GetActorRotation. So there it is! What

51
00:03:20,000 --> 00:03:24,000
actor? Well ourself! Why is it ourself? Because we're a blueprint on the door., so

52
00:03:24,000 --> 00:03:28,000
it is just the game object is us. OK, now you notice there's no incoming

53
00:03:28,000 --> 00:03:32,000
execution node. Remember that these white lines tell you about the flow of execution.

54
00:03:32,000 --> 00:03:36,000
There's nothing for GetActorRotation, and the reason for that is you can get the actor rotation

55
00:03:36,000 --> 00:03:40,000
at any time, so it's time independent. What are we going to do with it?

56
00:03:40,000 --> 00:03:44,000
Well, let's drag out of the right-hand side of it, and when you let go you'll have a

57
00:03:44,000 --> 00:03:48,000
context sensitive list of things you can do, one of those will be promote to variables.

58
00:03:48,000 --> 00:03:52,000
So let's do that, let's promote it to a variable. When you do that, your interface will get instantly

59
00:03:52,000 --> 00:03:56,000
cluttered, so I'm going to get rid of the right-hand tab

60
00:03:56,000 --> 00:04:00,000
just for simplicity. And you'll see New Var 0 here, but on the left-hand side

61
00:04:00,000 --> 00:04:04,000
under Variables and under Details on the right. A couple of different places you'll see that you can

62
00:04:04,000 --> 00:04:08,000
rename this new variable. I'm going to call it Initial Rotation, nice and

63
00:04:08,000 --> 00:04:12,000
simple. We're nearly there in terms of storing the Initial Rotation,

64
00:04:12,000 --> 00:04:16,000
but of course, this Set and this

65
00:04:16,000 --> 00:04:20,000
this Set box, this Set node has never been called, it never executes

66
00:04:20,000 --> 00:04:24,000
so that's where the BeginPlay comes in. We wire the BeginPlay,

67
00:04:24,000 --> 00:04:28,000
if I can drag the right thing, into the Set node. So, are you

68
00:04:28,000 --> 00:04:32,000
clear on what this does up here? The things I've highlighted simply

69
00:04:32,000 --> 00:04:36,000
set the initial rotation variable, it's a blueprint variable on this thing,

70
00:04:36,000 --> 00:04:40,000
at BeginPlay. OK, I'm just going to zoom out a little bit and move

71
00:04:40,000 --> 00:04:44,000
this up. Fine, that's what happens! Now, what we need to do

72
00:04:44,000 --> 00:04:48,000
in here somewhere is, instead of making this return value

73
00:04:48,000 --> 00:04:52,000
directly setting the rotation of the actor, what we want to be doing is making

74
00:04:52,000 --> 00:04:56,000
a relative rotation. So, we're going to break this link,

75
00:04:56,000 --> 00:05:00,000
and we're going to hand it over to you. I want you to try and combine

76
00:05:00,000 --> 00:05:04,000
the rotations. See if you can finish the blueprint off and get it working.

77
00:05:04,000 --> 00:05:08,000
Look for a way of combining rotators. Connect it all,

78
00:05:08,000 --> 00:05:12,000
test it, debut it if necessary. Remember that you can put the blueprint on the right

79
00:05:12,000 --> 00:05:16,000
and the game window on the left and hit Alt P to get going and

80
00:05:16,000 --> 00:05:20,000
see the blueprint in action, as it actually draws its execution.

81
00:05:20,000 --> 00:05:24,000
And then, the last thing to say is good luck. Just see if you can get this working.

82
00:05:24,000 --> 00:05:28,000
Have a go yourself, pause the video, and I'll see you on the other side!

83
00:05:28,000 --> 00:05:32,000
So welcome back! Let's

84
00:05:32,000 --> 00:05:36,000
button this up! How would you do it? Well, you could pull out of this pin,

85
00:05:36,000 --> 00:05:40,000
and you would have here a set of context sensitive stuff.

86
00:05:40,000 --> 00:05:44,000
And you may, if you browse through, find what you're looking for.

87
00:05:44,000 --> 00:05:48,000
You could type the word "rotator" and then look through and see what you

88
00:05:48,000 --> 00:05:52,000
get. Ah, combined rotators. That sounds good! "Combine 2 rotations

89
00:05:52,000 --> 00:05:56,000
to give you the resulting rotation." Hmm, let's try that!

90
00:05:56,000 --> 00:06:00,000
So, we have combined rotators. Let's just organize

91
00:06:00,000 --> 00:06:04,000
the blueprint so we have no crossing paths and so it looks good. So the return

92
00:06:04,000 --> 00:06:08,000
value is just going to be piped in here, but what's going to come onto the inside. You might be temped

93
00:06:08,000 --> 00:06:12,000
to try and pull this in, but this would happen at the wrong time. We

94
00:06:12,000 --> 00:06:16,000
want to only combine the rotations when this update

95
00:06:16,000 --> 00:06:20,000
loop happens. So, we want to get

96
00:06:20,000 --> 00:06:24,000
Initial Rotation OK. So, that's

97
00:06:24,000 --> 00:06:28,000
GetInitialRotation. There's the value, we want to pull that at the time we

98
00:06:28,000 --> 00:06:32,000
need it asynchronously, and

99
00:06:32,000 --> 00:06:36,000
that's the flow we're after. Make sure you keep this update link

100
00:06:36,000 --> 00:06:40,000
there. Now, let me visualize what this is doing. Sorry, excuse me, I'm fiddling with the Initial

101
00:06:40,000 --> 00:06:44,000
Rotation. I don't need to. That's what we're going for! Return Value! It combines

102
00:06:44,000 --> 00:06:48,000
for the Initial Rotation and sets the target. Let's put the window on the left-hand side,

103
00:06:48,000 --> 00:06:52,000
like I talked about. I'm going to get rid of some toolbars, even over here.

104
00:06:52,000 --> 00:06:56,000
Let's go for broke! Let's get rid of them all! Beautiful! And that, all of it!

105
00:06:56,000 --> 00:07:00,000
Go away. OK, now let's play! So, what's happening right now?

106
00:07:00,000 --> 00:07:04,000
Well firstly, let's make sure this Initial Variable is set. Alt P,

107
00:07:04,000 --> 00:07:08,000
you can see. Now, this goes for a lot longer, obviously BeginPlay the event

108
00:07:08,000 --> 00:07:12,000
lasted a fraction of a second, but visualizes it, if you watch, on the right-hand side

109
00:07:12,000 --> 00:07:16,000
now for a bit longer. Well, that's just saying, OK I've set that value,

110
00:07:16,000 --> 00:07:20,000
and now what's happening is, we're constantly calling closed door, so we're

111
00:07:20,000 --> 00:07:24,000
just keeping those doors closed. But notice how this door here has not

112
00:07:24,000 --> 00:07:28,000
opened up to 90 degrees. Watch what happens when we go on the pressure plate now.

113
00:07:28,000 --> 00:07:32,000
The door does the right thing. We could change its rotation by changing its

114
00:07:32,000 --> 00:07:36,000
timeline, but you see it's doing the right thing. Let's see what Blueprint is doing. Now we can

115
00:07:36,000 --> 00:07:40,000
see what Blueprint is doing, let's see the whole picture. So, we come over here,

116
00:07:40,000 --> 00:07:44,000
boom, and it's not actually visualizing the data

117
00:07:44,000 --> 00:07:48,000
flow through here, the fact that the open Angle is changing, it's just not showing us that. But

118
00:07:48,000 --> 00:07:52,000
we can see it's working, so all that remains now is to just; I'm just going to

119
00:07:52,000 --> 00:07:56,000
make my level sensible, and in your case, pick yourself maybe a different door location.

120
00:07:56,000 --> 00:08:00,000
I'm actually going to just leave my doors, I think, as they are.

121
00:08:00,000 --> 00:08:04,000
I'm going to just get rid of this door, but the blueprint

122
00:08:04,000 --> 00:08:08,000
for the existing doors has changed right. If I go to this

123
00:08:08,000 --> 00:08:12,000
door, go to the World Outliner,

124
00:08:12,000 --> 00:08:16,000
Edit the blueprint. You'll see it is still running the new blueprint, because there's only one. So, what

125
00:08:16,000 --> 00:08:20,000
we've done is we've made the way that these doors open more general, and you can put

126
00:08:20,000 --> 00:08:24,000
these doors in any orientation now and they will open in a relative

127
00:08:24,000 --> 00:08:28,000
rather than an absolute way. So, that's the end of that video! Go ahead

128
00:08:28,000 --> 00:08:32,000
put your doors on any wall now freely, without wondering why on earth they open into weird angles,

129
00:08:32,000 --> 00:08:35,799
and I'll see you in the next video!

