WEBVTT

1
00:00:00.000 --> 00:00:02.600


2
00:00:02.600 --> 00:00:06.600
Hi and welcome to Using Git LFS, which stands for Large File Storage!

3
00:00:06.600 --> 00:00:10.600
What we're going to be doing in this video is getting around the problem of file

4
00:00:10.600 --> 00:00:14.600
sizes, and all this starter content, and all that rubbish, and enabling something called large file support,

5
00:00:14.600 --> 00:00:18.600
and eventually uploading our initial project to GitHub, so that our files

6
00:00:18.600 --> 00:00:22.600
are, as this confirms, stored with Git LFS. Furthermore, we'll

7
00:00:22.600 --> 00:00:26.600
also be using Unreal's built in source control toolbar, so we'll have a nice little green thing

8
00:00:26.600 --> 00:00:30.600
there, and we'll be able to see how all that works, how we'll get our GitIgnore,

9
00:00:30.600 --> 00:00:34.600
and it's going to be the easiest, cleanest, way yet of using source control. So if you've

10
00:00:34.600 --> 00:00:38.600
not started source control yet, this is the time to get started for sure.

11
00:00:38.600 --> 00:00:39.000


12
00:00:39.000 --> 00:00:43.000
OK welcome back! So I'm disproportionately excited about this,

13
00:00:43.000 --> 00:00:47.000
given that we're just talking about source control, but that's because using Git

14
00:00:47.000 --> 00:00:51.000
Large File Storage is going to remove a lot of our problems. And this is, I would say, pretty much

15
00:00:51.000 --> 00:00:55.000
the state of the art in terms of how we could be version controlling our

16
00:00:55.000 --> 00:00:59.000
project. So let me show you a recipe for

17
00:00:59.000 --> 00:01:03.000
setting up an Unreal project with Git LFS and your .gitignore and everything

18
00:01:03.000 --> 00:01:07.000
you need, in a nice sensible sequence. But before we go through that, I just want to talk about

19
00:01:07.000 --> 00:01:11.000
the pattern. So, so far, you've got a file system on your disk,

20
00:01:11.000 --> 00:01:15.000
you've been staging files into a staging area, which is part

21
00:01:15.000 --> 00:01:19.000
of the version control system. You'll be using some Git Client, the terminal,

22
00:01:19.000 --> 00:01:23.000
or possibly SourceTree. SourceTree is what I recommend, because it's visual and it's what I'm using.

23
00:01:23.000 --> 00:01:27.000
And then, once you've staged your files, you normally go immediately on to Commit them into

24
00:01:27.000 --> 00:01:31.000
the repo, and it builds you a little tree structure like this. What we're going to do differently,

25
00:01:31.000 --> 00:01:35.000
this will be the first time for some of you and not news at all to the veterans amongst you,

26
00:01:35.000 --> 00:01:39.000
is that we're going to start pushing that data up to GitHub.com.

27
00:01:39.000 --> 00:01:43.000
And that will just create a remote backup of your data, and

28
00:01:43.000 --> 00:01:47.000
it will allow you and other people to collaborate on the same project. You can even both

29
00:01:47.000 --> 00:01:51.000
work on the same project, even the same file, at the same time, and one of the reasons for GitHub

30
00:01:51.000 --> 00:01:55.000
or Git as a version control system's success is that it's

31
00:01:55.000 --> 00:01:59.000
so good at helping merge different people's work together. Now,

32
00:01:59.000 --> 00:02:03.000
Git and GitHub are different things. Git is a different company, a different set of people, to GitHub.

33
00:02:03.000 --> 00:02:07.000
GitHub is a place that you can host Git repositories, so is Bit

34
00:02:07.000 --> 00:02:11.000
Bucket, for example, on the right here. And SourceTree, stroke, the Git Client,

35
00:02:11.000 --> 00:02:15.000
stroke, the terminal are your client that you're using, and under the hood of all of

36
00:02:15.000 --> 00:02:19.000
that is Git, which is the version control system we're using. Sometimes you'll hear the word

37
00:02:19.000 --> 00:02:23.000
Source Control. I'm using the word Version Control, because we're not just versioning

38
00:02:23.000 --> 00:02:27.000
source files here, text files but also binary assets like U Assets and maps

39
00:02:27.000 --> 00:02:31.000
and stuff like that. Cool! So given that that's the general layout that we're

40
00:02:31.000 --> 00:02:35.000
going for, the reason for LFS is that GitHub.com places 100 megabytes

41
00:02:35.000 --> 00:02:39.000
per file limit on you, when you push to them, and it places a 1 gigabyte

42
00:02:39.000 --> 00:02:43.000
per total repository limit on you. So we want to use their Large File

43
00:02:43.000 --> 00:02:47.000
Storage, which luckily is built in and very easy to use, and you've already got a gigabyte

44
00:02:47.000 --> 00:02:51.000
of large file storage built in, and then if you want more you can pay for it.

45
00:02:51.000 --> 00:02:55.000
So what I'm going to do is give you the satisfaction of trying to do this yourself. Oh,

46
00:02:55.000 --> 00:02:59.000
one more thing! Pulling is a concept that we haven't seen yet, we may see later on.

47
00:02:59.000 --> 00:03:03.000
I just wanted to put it in for completeness. Pulling is going all the way from the thing that's stored on the Internet

48
00:03:03.000 --> 00:03:07.000
back down to your file system, i.e. retrieving other people's work or your previous work.

49
00:03:07.000 --> 00:03:11.000
So I want you to have a go at this, because you can always just delete the Unreal directory

50
00:03:11.000 --> 00:03:15.000
and start again, when you watch my solution, but you'll learn a lot more by having a go yourself.

51
00:03:15.000 --> 00:03:19.000
So setup your project with Git LFS. Here's an outline recipe!

52
00:03:19.000 --> 00:03:23.000
Create the project using the Epic Games Launcher. Remember, by the way, that you can't

53
00:03:23.000 --> 00:03:27.000
start the project with a number, but you could go SO5 for section 05, that's what I'm going to do.

54
00:03:27.000 --> 00:03:31.000
Connect to Source Control in Unreal. There's a button up there in the

55
00:03:31.000 --> 00:03:35.000
interface, towards the top-left of Unreal, it says Connect to Source Control. Go ahead and

56
00:03:35.000 --> 00:03:39.000
do that and you can initialize the repo as a

57
00:03:39.000 --> 00:03:43.000
GitRepo, and don't worry about the fact that Git is in Beta. Just have a go with

58
00:03:43.000 --> 00:03:47.000
that! I'm giving you non-precise instructions on purpose, because I want you to experiment with this and learn it

59
00:03:47.000 --> 00:03:51.000
yourself. Then, open up SourceTree, add a working copy.

60
00:03:51.000 --> 00:03:55.000
So there''ll already be a Git repository, Unreal has just made that for you in step 2. So in

61
00:03:55.000 --> 00:03:59.000
step 3, add a working copy to SourceTree, so that you can get a view on what's going on.

62
00:03:59.000 --> 00:04:03.000
And then, I want you to enable LFS, Large File Support,

63
00:04:03.000 --> 00:04:07.000
inside SourceTree. And then, when you've done that, I want you to track two types

64
00:04:07.000 --> 00:04:11.000
of files, .uasset and .umap, and that will prevent SourceTree

65
00:04:11.000 --> 00:04:15.000
from moaning, when you try and stage all of the first person

66
00:04:15.000 --> 00:04:19.000
shooter content. Ah, I didn't tell you this, did I? When you create your project, I want you to make

67
00:04:19.000 --> 00:04:23.000
a First Person Shooter project of type C++. You know how you get those

68
00:04:23.000 --> 00:04:27.000
template projects? So first click C++, not Blueprint, and then, I want First

69
00:04:27.000 --> 00:04:31.000
Person Shooter. That will come with a load of assets, and those assets are too big to be staged

70
00:04:31.000 --> 00:04:35.000
without SourceTree moaning about the file sizes, but once we've enabled LFS and

71
00:04:35.000 --> 00:04:39.000
tracked these files, you'll be fine. This all may sound like double Dutch to you, but I want you to try it

72
00:04:39.000 --> 00:04:43.000
yourself, with this on the screen. Again, you can just delete the directory and start again if it doesn't

73
00:04:43.000 --> 00:04:47.000
work out. Go ahead to GitHub.com, get yourself a GitHub.com

74
00:04:47.000 --> 00:04:51.000
account, if you haven't got one already, and set yourself up a

75
00:04:51.000 --> 00:04:55.000
plain repository. By that, I mean just don't put an initial commit, and

76
00:04:55.000 --> 00:04:59.000
don't put a readme file in it, a readme.md. Then, connect

77
00:04:59.000 --> 00:05:03.000
SourceTree to that GitHub repository and you can get a URL from GitHub that will allow you to do that,

78
00:05:03.000 --> 00:05:07.000
and then, push and see if you can get that file, so that you've actually setup a Git

79
00:05:07.000 --> 00:05:11.000
LFS repository and pushed it to GitHub. [Sighs] Phew, it sounds like a lot of work

80
00:05:11.000 --> 00:05:15.000
doesn't it? But there's the recipe on the screen. The advanced among you, this will be a trivial. The people who've never

81
00:05:15.000 --> 00:05:19.000
used SourceControl before, this will be a ridiculously hard challenge, especially

82
00:05:19.000 --> 00:05:23.000
rather if you haven't been using SourceControl up to now. And then, there'll be

83
00:05:23.000 --> 00:05:27.000
everybody in between. So don't beat yourself up if you can't do it, do congratulate yourself if you can do

84
00:05:27.000 --> 00:05:31.000
it, and just have a go and then I'll show you the solution in a second.

85
00:05:31.000 --> 00:05:35.000


86
00:05:35.000 --> 00:05:39.000
OK welcome back! So with that recipe available, let's do what I said. So let's

87
00:05:39.000 --> 00:05:43.000
create the game using the EPIC Games Launcher! So use at least version 4.12. If a later

88
00:05:43.000 --> 00:05:47.000
version is out, when you come to this video, just select 4.12 here in this

89
00:05:47.000 --> 00:05:51.000
Add previous Versions. So let's go ahead and launch Unreal Engine

90
00:05:51.000 --> 00:05:55.000
and feel the excitement and anticipation of a brand new project

91
00:05:55.000 --> 00:05:59.000
starting! Now, it's launching my Oculus and my Steam VR, we'll worry about that later!

92
00:05:59.000 --> 00:06:03.000
Firstly, let's just focus on creating a new project of type C++,

93
00:06:03.000 --> 00:06:07.000
and then, with the with the template First Person. I'm going to leave everything else as it is, apart from I'm

94
00:06:07.000 --> 00:06:11.000
going to think carefully about my directory. I do want to put it in Users\Ben\Documents\

95
00:06:11.000 --> 00:06:15.000
Repos\Unreal, which is this folder here, but I want to call it Section

96
00:06:15.000 --> 00:06:19.000
05 Testing Grounds. Now I can't start with 05,

97
00:06:19.000 --> 00:06:23.000
because it's going to complain that project names have to begin with an alpha numeric character. So I'm going to go

98
00:06:23.000 --> 00:06:27.000
S05_TestingGrounds, like

99
00:06:27.000 --> 00:06:31.000
that. Alright, that's where I'm going to put mine! I'm going to Create the Project,

100
00:06:31.000 --> 00:06:35.000
and when we look over here, you'll see the folder. Now, I can while this is creating, by the

101
00:06:35.000 --> 00:06:39.000
way, of course, I want to go back and just rename all these old guys S04,

102
00:06:39.000 --> 00:06:43.000
S03, etc. just because I want the

103
00:06:43.000 --> 00:06:47.000
consistency. And when I do that, it is actually going to break the bookmarks

104
00:06:47.000 --> 00:06:51.000
that exist in SourceTree. Look, you see BattleTank! I can't find it, it says!

105
00:06:51.000 --> 00:06:55.000
Just go ahead back to Unreal and find it. OK, so that's the

106
00:06:55.000 --> 00:06:59.000
bookmarks fix, that's the bookmarks there on the left there. So you can rename Repos as the

107
00:06:59.000 --> 00:07:03.000
bottom line of that. Now, Unreal should have finished creating this project by now. Cool! So

108
00:07:03.000 --> 00:07:07.000
second step, connect to Source control in Unreal! So there's the source control button up there in

109
00:07:07.000 --> 00:07:11.000
this toolbar here, the toolbar called well Toolbar, and then,

110
00:07:11.000 --> 00:07:15.000
you click Source Control, Connect to Source Control, this will come up! Which

111
00:07:15.000 --> 00:07:19.000
provider? We're going to use Git and not worry about the fact it's in Beta, but it does have a couple of issues being in

112
00:07:19.000 --> 00:07:23.000
Beta. We'll work through those. And I'm just going to "Initialize the project with

113
00:07:23.000 --> 00:07:27.000
Git", and it's going to add a .gitignore for us. So let's just do that!

114
00:07:27.000 --> 00:07:31.000
Accept the Settings and now go and look at the file system. What has it done in this

115
00:07:31.000 --> 00:07:35.000
TestingGrounds folder. Firstly, the TestingGrounds folder is better than the other ones. Remember we had to go

116
00:07:35.000 --> 00:07:39.000
BattleTannk, BattleTank, and BuildingEscape, BuildingEscape? That was because of the naming,

117
00:07:39.000 --> 00:07:43.000
I wanted to start with a number, so if you start with a letter like this we've solved it. So TestingGrounds

118
00:07:43.000 --> 00:07:47.000
is simpler, flatter structure, no subdirectory, and it's made

119
00:07:47.000 --> 00:07:51.000
a .gitignore for us. Look at that! I've associated this .gitignore with Atom, which is just

120
00:07:51.000 --> 00:07:55.000
one of many texts readers, because it doesn't read very well in Notepad but there it is. So

121
00:07:55.000 --> 00:07:59.000
that's Unreal's suggested .gitignore, probably a good bet. You can always adjust it

122
00:07:59.000 --> 00:08:03.000
if we want to. OK and that is that. Now, if we go

123
00:08:03.000 --> 00:08:07.000
to the step 3, we go to SourceTree. We go to File, Clone

124
00:08:07.000 --> 00:08:11.000
or New, and we Add a Working Copy. What that means is we already have

125
00:08:11.000 --> 00:08:15.000
a repository. What has happened here is that GitHub has actually set it... Sorry

126
00:08:15.000 --> 00:08:19.000
not GitHub but Unreal has set us up a proper Git repo. We have

127
00:08:19.000 --> 00:08:23.000
hidden files hidden here, so we can't see the .git file, but

128
00:08:23.000 --> 00:08:27.000
it is a proper repo. So I just point it to that, I just point SourceTree to

129
00:08:27.000 --> 00:08:31.000
that. Why are we using SourceTree at all? Because I want a different view on things, I don't want to

130
00:08:31.000 --> 00:08:35.000
just have all of my source control in Unreal. So once I point it to that

131
00:08:35.000 --> 00:08:39.000
and click Add, I've got a bookmark name of

132
00:08:39.000 --> 00:08:43.000
S05_TestingGrounds. There it is, I'm going to move it into the Unreal group or folder here. So I've

133
00:08:43.000 --> 00:08:47.000
got an Unreal group and a research group, etc. So there it is,

134
00:08:47.000 --> 00:08:51.000
in fact, I don't think that went into Unreal, so let me just do it again and obsessively put it

135
00:08:51.000 --> 00:08:55.000
in order. Great! So TestingGrounds, there it is! Now look, it has

136
00:08:55.000 --> 00:08:59.000
already added all these files, but it hasn't, for some reason, added these

137
00:08:59.000 --> 00:09:03.000
first person files. I'm not going to stage them now, I'm going to use this to my advantage. I'm going to make my

138
00:09:03.000 --> 00:09:07.000
first commit, called Initial commit like that, and I'm just going to commit it.

139
00:09:07.000 --> 00:09:11.000
And if we look at the Mater Branch then, that initial commit is just all the

140
00:09:11.000 --> 00:09:15.000
basic stuff, including the .gitignore and some .ini files.

141
00:09:15.000 --> 00:09:19.000
Then, we've got a whole bunch of other assets. You're going to have to do this first bit

142
00:09:19.000 --> 00:09:23.000
inside SourceTree. You can't do it easily inside Unreal, because if you try and

143
00:09:23.000 --> 00:09:27.000
submit to source control in Unreal, the silly thing doesn't realize it's got all these

144
00:09:27.000 --> 00:09:31.000
FPS assets to check in, that's why I'm doing it in SourceTree. Now,

145
00:09:31.000 --> 00:09:35.000
here are a bunch of files, that if I try and

146
00:09:35.000 --> 00:09:39.000
select all these first person template files and stage them, look what happens. Oh,

147
00:09:39.000 --> 00:09:43.000
one of them is bigger than 10 megabytes and it's going to complain. Well let's not say OK

148
00:09:43.000 --> 00:09:47.000
this time, let's say let's do something about it, and that something is to go

149
00:09:47.000 --> 00:09:51.000
to Repository, Get LFS, Initialize Repository. Just before you click it

150
00:09:51.000 --> 00:09:55.000
though or if you have clicked it don't worry, just put Cancel. I want you to go to

151
00:09:55.000 --> 00:09:59.000
Tools and Options, and I want you to just make sure that your version of Git,

152
00:09:59.000 --> 00:10:03.000
so you go to the Git tab and Update Embedded Git. Just click that.

153
00:10:03.000 --> 00:10:07.000
I'm using 2.8.1, which is the latest version, but I just want you to make sure your embedded Git,

154
00:10:07.000 --> 00:10:11.000
the version of Git that SourceTree is using, is up to date. Cool!

155
00:10:11.000 --> 00:10:15.000
Once it's up to date you can go Repository, Get LFS, Initialize Repository,

156
00:10:15.000 --> 00:10:19.000
Start Using Git LFS. And what type of files

157
00:10:19.000 --> 00:10:23.000
do you want to track? Well I'm going to do one of them like this. I'm just going to say Add. Now, how do you type

158
00:10:23.000 --> 00:10:27.000
it? Well look at the list of hints. There's no stars, there's no dots, so if you want

159
00:10:27.000 --> 00:10:31.000
to add a .uasset, then just type .uasset, and you see it put star dot

160
00:10:31.000 --> 00:10:35.000
uasset. OK, I'm going to say Track Files just for .uassets, because I want to

161
00:10:35.000 --> 00:10:39.000
show you there's another way of doing it. If I try and stage all this stuff again,

162
00:10:39.000 --> 00:10:43.000
I'm going to get a complaint about this umap, in FirstPersonCPP/Maps/First

163
00:10:43.000 --> 00:10:47.000
Person, etc. So let's go find that! And after

164
00:10:47.000 --> 00:10:51.000
some scrolling up and down there it is! So what I'm showing you here is an alternative way of

165
00:10:51.000 --> 00:10:55.000
adding things that should be tracked under LFS. You right-click, Track file type

166
00:10:55.000 --> 00:10:59.000
in Git LFS. So what happens here is we can choose certain

167
00:10:59.000 --> 00:11:03.000
types of files to be tracked by Git LFS. You can see that by going

168
00:11:03.000 --> 00:11:07.000
to Git LFS, Track or Untrack Files. You can see it's added .umap and .uasset

169
00:11:07.000 --> 00:11:11.000
now, they're the ones, the big ones we want to track. You can also see that

170
00:11:11.000 --> 00:11:15.000
in the .gitattributes file that's what it's done. This is what determines how it

171
00:11:15.000 --> 00:11:19.000
works, it's just put a couple of lines in the .gitattributes file. Great!

172
00:11:19.000 --> 00:11:23.000
OK, so we are now tracking these two types of files. What this means

173
00:11:23.000 --> 00:11:27.000
is, every other type of file will just get pushed to GitHub vanilla,

174
00:11:27.000 --> 00:11:31.000
but the large files are going to go, if we look into GitHub

175
00:11:31.000 --> 00:11:35.000
profile Settings, if you've got your account now, and you go to Billing, you'll

176
00:11:35.000 --> 00:11:39.000
see here that you already have some Git LFS storage. You have a gigabyte of it

177
00:11:39.000 --> 00:11:43.000
and you can purchase more by clicking the Purchase More button. Alright, so we're just deciding

178
00:11:43.000 --> 00:11:47.000
what types of files go where. So let's Stage all that stuff.

179
00:11:47.000 --> 00:11:51.000
It might take a second, because there's quite a few files,

180
00:11:51.000 --> 00:11:55.000
and then, after this, by the way, we'll be able to do all our committing inside Unreal, without

181
00:11:55.000 --> 00:11:59.000
even closing it. So that's pretty cool, right!  So I'm just clicking Stage All and just

182
00:11:59.000 --> 00:12:03.000
waiting. There you go! Now I'm going to Commit, and I'm going to say Added...

183
00:12:03.000 --> 00:12:07.000
Actually, I'm going to say Enabled

184
00:12:07.000 --> 00:12:11.000
Git LFS & added

185
00:12:11.000 --> 00:12:15.000
FPS content, and I'm going to Commit that!

186
00:12:15.000 --> 00:12:19.000
Great, so now I have two commits! One is the initial commits, the other is where I've added LFS, etc.

187
00:12:19.000 --> 00:12:23.000
The final thing we need to do, in this recipe, is go to GitHub.com,

188
00:12:23.000 --> 00:12:27.000
go to the appropriate place, so in this case it's

189
00:12:27.000 --> 00:12:31.000
Unreal Course, it's an organization I've created, or you can just put it in the root of your Git

190
00:12:31.000 --> 00:12:35.000
Hub account. Let's not worry about it for now. Create yourself a new repository, I'm going to call it

191
00:12:35.000 --> 00:12:39.000
05_TestingGrounds, and then, I"m

192
00:12:39.000 --> 00:12:43.000
going to say "A Hunger-Games inspired FPS with large outdoor terrains", etc.

193
00:12:43.000 --> 00:12:47.000
apart from I don't want the ampersand to look like that, so I'll write the word "and".

194
00:12:47.000 --> 00:12:51.000
And it's going to be public. We're not going to initialize it with

195
00:12:51.000 --> 00:12:55.000
a README or a .gitignore. Unreal's already provided that .gitignore, remember? There it is!

196
00:12:55.000 --> 00:12:59.000
And we don't want a README, because then we have two repositories, both

197
00:12:59.000 --> 00:13:03.000
that need merging, and we could do without that for now. We'll cover README's and markdown in a separate

198
00:13:03.000 --> 00:13:07.000
video. So I'm going to create the repository online. It does that, it's a blank repository

199
00:13:07.000 --> 00:13:11.000
with no commits, and it gives you two ways of finding the URL, HTTPS, which

200
00:13:11.000 --> 00:13:15.000
will be much easier for you, or SSH, if you bother to setup

201
00:13:15.000 --> 00:13:19.000
SSH on your SourceTree. I'm not going to cover that in this course, that's more than we need. I do have that kind of

202
00:13:19.000 --> 00:13:23.000
access, because I can't be bothered to mess around with passwords and user names. You probably

203
00:13:23.000 --> 00:13:27.000
just want to use HTTPS, and then type your user name and password. So

204
00:13:27.000 --> 00:13:31.000
back at SourceTree you go to Repository and Repository Settings,

205
00:13:31.000 --> 00:13:35.000
and then, under the Remote tab you can add a Remote. Now, I'm going to

206
00:13:35.000 --> 00:13:39.000
call it GitHub. A lot of people call it Origin, I just like it to be called GitHub, it's very explicit where it's

207
00:13:39.000 --> 00:13:43.000
going, and then, I put the URL in there, I leave the rest, and say OK.

208
00:13:43.000 --> 00:13:47.000
Now, it'll ask you to authenticate, at this point, if you're using HTTPS.

209
00:13:47.000 --> 00:13:51.000
I'm using SSH, which you can read all about on the web, how to set that up, it's a little bit involved.

210
00:13:51.000 --> 00:13:55.000
Just turn off my bookmarks on the left, and now, I can Push.

211
00:13:55.000 --> 00:13:59.000
Push, click the master branch. It's going to

212
00:13:59.000 --> 00:14:03.000
commit my master branch locally, to a Remote Branch called master.

213
00:14:03.000 --> 00:14:07.000
If I click Push now and Show Full Output, let's have a look at what it's doing!

214
00:14:07.000 --> 00:14:11.000
It's pushing this repository up to GitHub.com.

215
00:14:11.000 --> 00:14:15.000
Now look, because these files are stored in Git LFS, it now starts saying there's 53

216
00:14:15.000 --> 00:14:19.000
files I'm sending that are under LFS storage, and you can see

217
00:14:19.000 --> 00:14:23.000
how big they are and how far it's getting. So this is a good indication that it is using

218
00:14:23.000 --> 00:14:27.000
LFS properly, which is great! If we go to GitHub on the web now,

219
00:14:27.000 --> 00:14:31.000
go to TestingGrounds, we may or may not have

220
00:14:31.000 --> 00:14:35.000
anything there yet. Let's have a look, refresh,

221
00:14:35.000 --> 00:14:39.000
nope not yet, because it's not finished! So we just come back to SourceTree, and you can

222
00:14:39.000 --> 00:14:43.000
see the precise progress of your upload. Now this, of course, on your

223
00:14:43.000 --> 00:14:47.000
broadband may take a while, depending how fast your broadband is. Eighty-five

224
00:14:47.000 --> 00:14:51.000
megabytes, I mean I've got about a 20 megabyte upload, and this is going to take couple of

225
00:14:51.000 --> 00:14:55.000
minutes. So if you're on a much slower upload it could take you 20 minutes, so go and have a cup of

226
00:14:55.000 --> 00:14:59.000
tea or whatever you do in your country to relax while it finishes.

227
00:14:59.000 --> 00:15:03.000
There you go it's finished, it's all good, "Completed successfully", and

228
00:15:03.000 --> 00:15:07.000
now, if we go back to GitHub and refresh,

229
00:15:07.000 --> 00:15:11.000
there we have it! We have our source files! Now, if you go and look at some of the source

230
00:15:11.000 --> 00:15:15.000
files, like click on Source... Not Source, actually, maybe

231
00:15:15.000 --> 00:15:19.000
Content, and then, FirstPerson, and Character, Mesh,

232
00:15:19.000 --> 00:15:23.000
anything that's got a .uasset, and you click into it, go and find yourself a .uasset,

233
00:15:23.000 --> 00:15:27.000
you can see here, "Stored with Git LFS". You can see that that's the confirmation

234
00:15:27.000 --> 00:15:31.000
that it definitely has stored those files, under the Large File System storage.

235
00:15:31.000 --> 00:15:35.000
So congratulations! You are now able to store large things like starter packs

236
00:15:35.000 --> 00:15:39.000
and larger binary files with GitHub, and, if necessary, you can purchase

237
00:15:39.000 --> 00:15:43.000
extra storage but a gigabyte is going to be enough for this section, I hope.

238
00:15:43.000 --> 00:15:46.766
So well done, and I'll see you in the next video!

