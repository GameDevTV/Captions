1
00:00:03,500 --> 00:00:07,000
So, in this video we're going to have an introduction to Xcode on the Mac,

2
00:00:07,000 --> 00:00:10,500
and by the end of it, you'll be able to compile simple

3
00:00:10,500 --> 00:00:14,000
C++ code and prove that your system is working. So, let's dive

4
00:00:14,000 --> 00:00:17,500
straight in! OK, so over here on my

5
00:00:17,500 --> 00:00:21,000
Mac, Xcode has finished downloading. There you go! It's got a proper icon

6
00:00:21,000 --> 00:00:24,500
and thing, so I'm going to open it. Another way to open that, of course, is to

7
00:00:24,500 --> 00:00:28,000
go to Spotlight, which you can go Command and Space and then type Xcode.

8
00:00:28,000 --> 00:00:31,500
So, Xcode opens! Now, you may get a starting screen like

9
00:00:31,500 --> 00:00:35,000
this. If you've used Xcode before, then you might

10
00:00:35,000 --> 00:00:38,500
have a lot of windows open. You can check your Windows Menu, if you do. Just close all those

11
00:00:38,500 --> 00:00:42,000
windows, and let's just create a new Xcode project.

12
00:00:42,000 --> 00:00:45,500
The other way you can do that is File and New and then

13
00:00:45,500 --> 00:00:49,000
Project. So, what type are we going to have to use to use C++?

14
00:00:49,000 --> 00:00:52,500
Well, depending on the type you use here, you may or may not get access to C++,

15
00:00:52,500 --> 00:00:56,000
so we're going to make an OS X application and

16
00:00:56,000 --> 00:00:59,500
again a Command Line Tool. I say again, because that's what I just did with

17
00:00:59,500 --> 00:01:03,000
the PC people in the previous video. So, I want you to choose OS X,

18
00:01:03,000 --> 00:01:06,500
Application, Command Line Tool, and then, Next. Let's just call this Hello

19
00:01:06,500 --> 00:01:10,000
World. Now, the important thing is that you have a

20
00:01:10,000 --> 00:01:13,500
Organization Identifier. Put something in there. I'm putting in Embrace IT,

21
00:01:13,500 --> 00:01:17,000
and the language is set to C++.

22
00:01:17,000 --> 00:01:20,500
OK, so settings something like this. The only one that actually matters

23
00:01:20,500 --> 00:01:24,000
is C++. Then, where are we going to save that?

24
00:01:24,000 --> 00:01:27,500
Well, I'm going to save that into this Downloads Folder,

25
00:01:27,500 --> 00:01:31,000
replacing what I've already got.

26
00:01:31,000 --> 00:01:34,500
And here we go! Now, we're in Xcode. Lots of new stuff going on,

27
00:01:34,500 --> 00:01:38,000
on the screen. So, you have a View Menu. If you find that you don't have

28
00:01:38,000 --> 00:01:41,500
any of the pains that I'm looking at, then you can come into this View Menu and

29
00:01:41,500 --> 00:01:45,000
you can choose say Show Standard Editor. Standard

30
00:01:45,000 --> 00:01:48,500
Editor, Show Standard Editor, and then that will allow you to come back to

31
00:01:48,500 --> 00:01:52,000
a layout, something like this. But what we're looking for, on the left-hand side

32
00:01:52,000 --> 00:01:55,500
in this bit here, which is showing all the files of the solution,

33
00:01:55,500 --> 00:01:59,000
is main.cpp. So, double click that and it'll

34
00:01:59,000 --> 00:02:02,500
pop-up in a separate window. Well, if you don't want a separate window you can just

35
00:02:02,500 --> 00:02:06,000
click on it and it'll come up here. As long as you can see the code, it doesn't matter!

36
00:02:06,000 --> 00:02:09,500
Now, let's briefly overview what we can see. The green things are comments, so this is

37
00:02:09,500 --> 00:02:13,000
ignored by the computer. This is just for you. Xcode automatically

38
00:02:13,000 --> 00:02:16,500
puts all this stuff in for us. And then, we have a #include

39
00:02:16,500 --> 00:02:20,000
<iostream> here. It's a little bit different to what he PC guys saw

40
00:02:20,000 --> 00:02:23,500
in Visual Studio. They had to add this line or set this

41
00:02:23,500 --> 00:02:27,000
themselves, but in this case, Xcode is including it. Now, what a

42
00:02:27,000 --> 00:02:30,500
#include does it is, it gives your code access to other code, and what it's giving us

43
00:02:30,500 --> 00:02:34,000
access to, in this case, is something call an <iostream> or input output stream. And that's

44
00:02:34,000 --> 00:02:37,500
going to allow us to write out to the

45
00:02:37,500 --> 00:02:41,000
Console. And what I want you to do is, just find this

46
00:02:41,000 --> 00:02:44,500
main function here, and then,

47
00:02:44,500 --> 00:02:48,000
between return and the comment that is automatically there, I want you to write this

48
00:02:48,000 --> 00:02:51,500
line. And I'll re-write it for you. std::

49
00:02:51,500 --> 00:02:55,000
so that is looking inside the standard, what we call

50
00:02:55,000 --> 00:02:58,500
name space. A name space is a gathering of methods that you can call upon.

51
00:02:58,500 --> 00:03:02,000
cout, which is short for character

52
00:03:02,000 --> 00:03:05,500
output, and then, you need a double back chevron like that. And then,

53
00:03:05,500 --> 00:03:09,000
you need to say "Hello World. And we need to do a backslash n to represent

54
00:03:09,000 --> 00:03:12,500
new line. Notice how Xcode automatically is closing your

55
00:03:12,500 --> 00:03:16,000
quotes for you, and then, a semi-colon on the end. So, that's

56
00:03:16,000 --> 00:03:19,500
the line you need! And then, we simply go up here!

57
00:03:19,500 --> 00:03:23,000
Product, Run!

58
00:03:23,000 --> 00:03:26,500
Now, that's going to Build Succeeded! With any luck, if it doesn't, then you've written something slightly

59
00:03:26,500 --> 00:03:30,000
different to this, so just check it character by character.

60
00:03:30,000 --> 00:03:33,500
And down here, in the output... If you can't see the output then you can

61
00:03:33,500 --> 00:03:37,000
toggle it up, View, and then Debug Area, and

62
00:03:37,000 --> 00:03:40,500
Activate Console or Shift, Command, and C.

63
00:03:40,500 --> 00:03:44,000
And that'll bring the Console up here, and we can see Hello World. And then the

64
00:03:44,000 --> 00:03:47,500
program ended with exit code: 0. Perfect! So, this proves that

65
00:03:47,500 --> 00:03:51,000
Xcode can compile your code. Now, compiling means taking

66
00:03:51,000 --> 00:03:54,500
this code, that we will learn to read through the course of the course...

67
00:03:54,500 --> 00:03:58,000
You're not just going to be following me writing code. All of this is going to be explained carefully

68
00:03:58,000 --> 00:04:01,500
as we go through. But it takes this stuff, this text, and it turns it into a format

69
00:04:01,500 --> 00:04:05,000
the computer can actually run. So congratulations! You've just written a

70
00:04:05,000 --> 00:04:08,500
ridiculously basic C++ program, but it does prove you've your

71
00:04:08,500 --> 00:04:12,000
environment all setup and ready. And that means that, when in the next video,

72
00:04:12,000 --> 00:04:15,500
we go into Unreal Engine it's going to be happy, because it'll have

73
00:04:15,500 --> 00:04:19,000
a C++ compilation pathway that it can use to

74
00:04:19,000 --> 00:04:22,500
actually build games. So well done, and I'll see you

75
00:04:22,500 --> 00:04:24,433
in the next video!
