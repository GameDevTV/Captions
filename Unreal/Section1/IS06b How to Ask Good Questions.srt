1
00:00:00,000 --> 00:00:04,000
...

2
00:00:04,000 --> 00:00:08,000
Welcome to How to Ask Good Questions! Now, in this lecture

3
00:00:08,000 --> 00:00:12,000
it is Sam talking to you not Ben, so you might notice a different

4
00:00:12,000 --> 00:00:16,000
voice. And I am one of the co-instructors on the

5
00:00:16,000 --> 00:00:20,000
course, I help out in the Q & A, and you'll see me in some of the later videos, way down,

6
00:00:20,000 --> 00:00:24,000
in a few [Laughs] sections time, so don't worry if you don't hear my voice for a little

7
00:00:24,000 --> 00:00:28,000
while yet. And what I'm going to be taking you through

8
00:00:28,000 --> 00:00:32,000
is the process of asking good Q & A questions, so that you can

9
00:00:32,000 --> 00:00:36,000
get the results that you want. Here's an example of the question that I'm going to

10
00:00:36,000 --> 00:00:40,000
ask and get answered, during the process of this

11
00:00:40,000 --> 00:00:44,000
video, and it'll help me solve some really basic, initial, beginner

12
00:00:44,000 --> 00:00:47,966
programming questions that I had. So let's dive right in!

13
00:00:47,966 --> 00:00:51,966
So I've really only just started the course and started doing

14
00:00:51,966 --> 00:00:55,966
my first programming exercise, and I'm already having a problem. So

15
00:00:55,966 --> 00:00:59,966
if you're in this situation, you're going to want to go to the Q & A

16
00:00:59,966 --> 00:01:03,966
and start asking basically: Why is this going

17
00:01:03,966 --> 00:01:07,966
wrong? And that's great and we really encourage you

18
00:01:07,966 --> 00:01:11,966
to participate in the Q & A as soon as possible. As soon as you have issues, just

19
00:01:11,966 --> 00:01:15,966
go dive in there, don't be afraid. And even if you haven't watched this lecture,

20
00:01:15,966 --> 00:01:19,966
don't be afraid to dive in! But I want to show you how you can make

21
00:01:19,966 --> 00:01:23,966
our job of answering you really easy and other students too, how

22
00:01:23,966 --> 00:01:27,966
other students will be able to answer you so much easier, if you follow these simple instructions.

23
00:01:27,966 --> 00:01:31,966
So here I have a simple problem. I've done my first console

24
00:01:31,966 --> 00:01:35,966
application, but I'm getting these build errors and I'm not entirely sure

25
00:01:35,966 --> 00:01:39,966
what's going on. So the first step of the process isn't

26
00:01:39,966 --> 00:01:43,966
even to ask the question, no it's to ask the question to a rubber duck

27
00:01:43,966 --> 00:01:47,966
first! This is called Rubber Duck Debugging, it's something real, real

28
00:01:47,966 --> 00:01:51,966
programmers do it they have little ducks they put on their keyboards, and the

29
00:01:51,966 --> 00:01:55,966
idea is that you speaking aloud and talking about your problem helps

30
00:01:55,966 --> 00:01:59,966
to solve it, even before having to ask the question. So explain your problem

31
00:01:59,966 --> 00:02:03,966
out loud and walk through your current understanding, and

32
00:02:03,966 --> 00:02:07,966
inevitably this enigmatic sensei will say nothing

33
00:02:07,966 --> 00:02:11,966
to you but you may will figure it out. It may certainly give you

34
00:02:11,966 --> 00:02:15,966
at least three things to do, to test your understanding and to see whether you

35
00:02:15,966 --> 00:02:19,966
can fix the problem itself. So my first step would be,

36
00:02:19,966 --> 00:02:23,966
OK well maybe I didn't install the right version of VisualStudio,

37
00:02:23,966 --> 00:02:27,966
so I might go and reinstall VisualStudio. Then, I might say,

38
00:02:27,966 --> 00:02:31,966
well maybe I didn't type it right, so I'm going to retype the stuff out but I still

39
00:02:31,966 --> 00:02:35,966
get a problem. Then, I might say, well

40
00:02:35,966 --> 00:02:39,966
maybe there's actually something wrong with my computer and [Laughs] it's

41
00:02:39,966 --> 00:02:43,966
stalled the entire computer or something, or I might,

42
00:02:43,966 --> 00:02:47,966
you know, try and fix a few spelling mistakes and so on. So that gives me at least three things

43
00:02:47,966 --> 00:02:51,966
to try, just by talking through my understanding of the fact that I've written some code and

44
00:02:51,966 --> 00:02:55,966
it needs to be compiled. And is it actually compiling? Maybe I'll test

45
00:02:55,966 --> 00:02:59,966
it by going to Build and test the Build Solution, see whether it works, and say

46
00:02:59,966 --> 00:03:03,966
no there's these errors happening at the bottom. So what is going

47
00:03:03,966 --> 00:03:07,966
on? I'm still not entirely sure! So the next step is to ask the question, and I'd like

48
00:03:07,966 --> 00:03:11,966
to show you what is the question structure, because once we get into more

49
00:03:11,966 --> 00:03:15,966
complicated types of questions, it can sometimes be hard to understand what people are

50
00:03:15,966 --> 00:03:19,966
actually wanting to get out of this. So the first thing you start with is what you want to get

51
00:03:19,966 --> 00:03:23,966
out of it, the expected behavior. So in this case, I expect my

52
00:03:23,966 --> 00:03:27,966
code to run and to have the "Hello world\n" ?printed but

53
00:03:27,966 --> 00:03:31,966
what's not happening. So what do I actually get? Well I get some error

54
00:03:31,966 --> 00:03:35,966
messages, I get these error messages down here. So it would be very useful to include

55
00:03:35,966 --> 00:03:39,966
these error messages and a screenshot of them into my Udemy

56
00:03:39,966 --> 00:03:43,966
questions. So just to show you the Udemy questions, it's always best to do it against the

57
00:03:43,966 --> 00:03:47,966
lecture where you're having the problem, so it's contextual, we know what stage you

58
00:03:47,966 --> 00:03:53,466
are in the course. So I might say, let's start with my observed behavior!

59
00:03:53,466 --> 00:03:57,332
...
Typing...

60
00:03:57,333 --> 00:04:01,333
And here I can take a screenshot, using the SnipIt Tool in Windows

61
00:04:01,333 --> 00:04:05,333
and just search for Snip It Tool.

62
00:04:05,333 --> 00:04:09,333
On Mac there are some keyboard shortcuts. I'm sure you know how to take

63
00:04:09,333 --> 00:04:13,333
screenshots, I'll leave that up to you. But for example, I'll take a

64
00:04:13,333 --> 00:04:17,333
screenshot of the entire area I think might be relevant, hit Save,

65
00:04:17,333 --> 00:04:21,333
save it somewhere perhaps on my Desktop.

66
00:04:21,333 --> 00:04:25,333
And then, I'm going to load

67
00:04:25,333 --> 00:04:29,333
this into Unity...

68
00:04:29,333 --> 00:04:33,333
...

69
00:04:33,333 --> 00:04:37,333
...and let it do its upload process, and then, I have an observed

70
00:04:37,333 --> 00:04:42,866
behavior. At this point, I should also have an expected behavior beforehand, if I'm following the structure.

71
00:04:42,866 --> 00:04:45,532
...

72
00:04:45,533 --> 00:04:49,533
And then, what comes next? So next up, we need to tell

73
00:04:49,533 --> 00:04:53,533
people how you got here in the first place. What were the steps that will now allow

74
00:04:53,533 --> 00:04:57,533
someone else to do the same thing? Well for me, it's simply

75
00:04:57,533 --> 00:05:01,533
every time I open VisualStudio. As I create a new project

76
00:05:01,533 --> 00:05:05,533
in VisualStudio, it's a new C++ VisualStudio project, and then, I type

77
00:05:05,533 --> 00:05:08,866
in my code, I get this error. So let me type that up!

78
00:05:08,866 --> 00:05:11,232
...

79
00:05:11,233 --> 00:05:15,233
So there we go! Now someone else could try and replicate the

80
00:05:15,233 --> 00:05:19,233
same effect as me! What comes next? Well what have I tried

81
00:05:19,233 --> 00:05:23,233
already? Well I can tell them that I've already tired

82
00:05:23,233 --> 00:05:27,233
reinstalling VisualStudio, I've already tried retyping my code,

83
00:05:27,233 --> 00:05:32,133
and I've already tried, let's say, reinstalling even my computer, for example.

84
00:05:32,133 --> 00:05:34,299
...

85
00:05:34,300 --> 00:05:38,300
So now, what comes next? Other useful

86
00:05:38,300 --> 00:05:45,133
information, such as the version of VisualStudio that I used, perhaps my code, as well. So let's add that in!

87
00:05:45,133 --> 00:05:47,266
...

88
00:05:47,266 --> 00:05:51,266
Now I can find my VisualStudio version by going to

89
00:05:51,266 --> 00:05:55,266
Help, About Microsoft Visual Studio,

90
00:05:55,266 --> 00:05:59,266
and there we go, I've got version

91
00:05:59,266 --> 00:06:03,266
14 update 3. So I'll just put that in,

92
00:06:03,266 --> 00:06:07,266
just in case that might be useful to someone. And what I also want to

93
00:06:07,266 --> 00:06:11,266
do is include my code. So the best way to include

94
00:06:11,266 --> 00:06:15,266
code is not to do a screenshot of it, because that doesn't allow people

95
00:06:15,266 --> 00:06:19,266
to search through your code and really check it. So here's the thing, you

96
00:06:19,266 --> 00:06:23,266
want to include screenshots when they're really useful, such as screenshots of some

97
00:06:23,266 --> 00:06:27,266
error messages, the Unreal Editor windows, when they help basically

98
00:06:27,266 --> 00:06:31,266
explain your steps or when they help explain your observed behavior,

99
00:06:31,266 --> 00:06:35,266
but don't do it for code all the time. You could include your code right

100
00:06:35,266 --> 00:06:39,266
in here, inside the question, by using

101
00:06:39,266 --> 00:06:43,266
this little curly braces button at the top

102
00:06:43,266 --> 00:06:47,266
of your question. That allows you to just paste the code right in there

103
00:06:47,266 --> 00:06:51,266
and then format it nicely, or the alternative, which is probably

104
00:06:51,266 --> 00:06:55,266
better, is to use a gist. Now a gist is provided by github,

105
00:06:55,266 --> 00:06:59,266
so it's gist.github.com. And what you can do is, you can take

106
00:06:59,266 --> 00:07:03,266
your code, like so, copy it and take it

107
00:07:03,266 --> 00:07:07,266
on over to the gist and paste it in there. Now, what you can do

108
00:07:07,266 --> 00:07:11,266
is give the name of the file; in my case, the file is called

109
00:07:11,266 --> 00:07:15,266
ConsoleApplication1.cpp.

110
00:07:15,266 --> 00:07:19,266
And then, what I can do is create a public gist,

111
00:07:19,266 --> 00:07:23,266
and this will have done code formatting, code highlighting, for me automatically

112
00:07:23,266 --> 00:07:27,266
and given me a unique link, which I can then use to link to this

113
00:07:27,266 --> 00:07:31,266
'my code'. I'll select 'my code', I'll select the link

114
00:07:31,266 --> 00:07:35,266
icon at the top of the question, insert the link, and then, paste

115
00:07:35,266 --> 00:07:39,266
the URL in there. So now people can go and take a look at the

116
00:07:39,266 --> 00:07:43,266
code, which is needed, basically, to reproduce

117
00:07:43,266 --> 00:07:47,266
my behavior. Now, what you'll notice is I'm being minimal

118
00:07:47,266 --> 00:07:51,266
with this. Don't include extra steps, there's no extra steps that I took,

119
00:07:51,266 --> 00:07:55,266
and this is all very shortly written, because you've got to think that

120
00:07:55,266 --> 00:07:59,266
people have got limited time, they're reading your question, you want it to be

121
00:07:59,266 --> 00:08:03,266
as brief as possible. So just keep it brief and keep it to the

122
00:08:03,266 --> 00:08:07,266
minimum amount.ￂﾠAnd you  want to also keep the test case to the

123
00:08:07,266 --> 00:08:11,266
minimum amount, so don't include extra steps to reproduce, if you can actually

124
00:08:11,266 --> 00:08:15,266
reproduce it with less. Or maybe take out lines of code, if they're

125
00:08:15,266 --> 00:08:19,266
lines of code that don't cause the error, so that it's really obvious where

126
00:08:19,266 --> 00:08:23,266
that error is coming from. So minimum steps to reproduce.

127
00:08:23,266 --> 00:08:27,266
And then, finally, be a Q & A ninja! So the first thing there is

128
00:08:27,266 --> 00:08:31,266
to summarize in your title. You'll notice that I started off by actually writing the body

129
00:08:31,266 --> 00:08:35,266
first, and then, what I'm going to say is

130
00:08:35,266 --> 00:08:39,266
"Error compiling"... Or that's quite vague, I wouldn't go

131
00:08:39,266 --> 00:08:44,899
with such a vague error. I would say: Error compiling my first hello world or something like that. So...

132
00:08:44,900 --> 00:08:47,300
...

133
00:08:47,300 --> 00:08:51,300
But just make sure that it summarizes your title, and then, you can go ahead

134
00:08:51,300 --> 00:08:55,300
and post that question. And once you've posted

135
00:08:55,300 --> 00:08:59,300
your question, it says sometimes it'll complain about external links, you might have to

136
00:08:59,300 --> 00:09:03,300
post it twice. And then, what's going to happen next?

137
00:09:03,300 --> 00:09:07,300
What are you going to do as a Q & A ninja next?! I'd like you to stay

138
00:09:07,300 --> 00:09:11,300
responsive, so as people are replying make sure you are replying, and fundamentally,

139
00:09:11,300 --> 00:09:15,300
when a good reply comes in it says, for example,

140
00:09:15,300 --> 00:09:17,266
...
...

141
00:09:17,266 --> 00:09:21,266
then what I'm going to do is go and try that out, because I'm very responsive!

142
00:09:21,266 --> 00:09:25,266
I'll try it out, then I'll go and see that it actually does indeed

143
00:09:25,266 --> 00:09:29,266
work. I rebuild and my "Hello world\n" is functional again!

144
00:09:29,266 --> 00:09:33,266
Then, don't forget to come back and mark a top answer, because

145
00:09:33,266 --> 00:09:37,266
this means that it no longer comes up on our dashboard as an unanswered

146
00:09:37,266 --> 00:09:41,266
question, which means that we can concentrate on solving the questions that haven't

147
00:09:41,266 --> 00:09:45,266
been answered yet. So this is very vital, even if

148
00:09:45,266 --> 00:09:49,266
you come back and answer your own question and mark it as top answer, as

149
00:09:49,266 --> 00:09:53,266
I've just done, that's still very helpful to us. So make sure that you

150
00:09:53,266 --> 00:09:57,266
share if you solve it, that will help other students as well as making

151
00:09:57,266 --> 00:10:01,266
sure that the question gets marked as resolved. And then, finally,

152
00:10:01,266 --> 00:10:05,266
once you've got your resolution go and be altruistic, go and find some

153
00:10:05,266 --> 00:10:09,266
other questions that you can try and help to chime in on and make

154
00:10:09,266 --> 00:10:13,266
a next step for that person. In fact, let's

155
00:10:13,266 --> 00:10:17,266
go and do that now! This is going to be your challenge for the lecture, to go and answer. Go

156
00:10:17,266 --> 00:10:21,266
forth and answer! I'd like you to find a question in the previous videos, try to

157
00:10:21,266 --> 00:10:25,266
provide some sort of suggestion, use your rubber ducking technique on their question,

158
00:10:25,266 --> 00:10:29,266
or just use your own experience and try and make a suggestion

159
00:10:29,266 --> 00:10:33,266
for what they should try next. And then, how well do you think the question was answered?

160
00:10:33,266 --> 00:10:37,266
Apply these criteria to try and think about,

161
00:10:37,266 --> 00:10:41,266
is that a good question? Was that hard for me to answer? And that should help

162
00:10:41,266 --> 00:10:45,266
you, in the future, to write better questions. Obviously don't go telling the person you've

163
00:10:45,266 --> 00:10:49,266
asked a rubbish question, just try and provide some value to them. But try and think,

164
00:10:49,266 --> 00:10:53,266
will this be helpful for me in the future? OK so pause the

165
00:10:53,266 --> 00:10:58,866
video... In fact, we're finished, so you can go ahead and do that!

